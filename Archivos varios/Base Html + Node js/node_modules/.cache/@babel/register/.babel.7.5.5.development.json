{
  "{\"sourceRoot\":\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\pivg\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\pivg\",\"filename\":\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\pivg\\\\src\\\\server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\pivg\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\ASUS\\Desktop\\pivg\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\ASUS\\Desktop\\pivg",
      "filename": "C:\\Users\\ASUS\\Desktop\\pivg\\src\\server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\ASUS\\Desktop\\pivg",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\ASUS\\Desktop\\pivg\\src\\server.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\ASUS\\Desktop\\pivg\\src\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\ASUS\\Desktop\\pivg\\src",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _config = _interopRequireDefault(require(\"./config.json\"));\n\nvar _api = _interopRequireDefault(require(\"./routes/api\"));\n\nvar _pg = _interopRequireDefault(require(\"pg\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _methodOverride = _interopRequireDefault(require(\"method-override\"));\n\nvar _connectPgSimple = _interopRequireDefault(require(\"connect-pg-simple\"));\n\nvar _passport = _interopRequireDefault(require(\"passport\"));\n\nvar _expressSession = _interopRequireDefault(require(\"express-session\"));\n\nvar _cookieParser = _interopRequireDefault(require(\"cookie-parser\"));\n\nvar _auth = _interopRequireDefault(require(\"./routes/auth\"));\n\nvar _user = _interopRequireDefault(require(\"./models/user\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar app = (0, _express[\"default\"])();\napp.set('view engine', 'ejs');\napp.set('views', _path[\"default\"].join(__dirname, 'views'));\napp.use(_express[\"default\"][\"static\"](_path[\"default\"].join(__dirname, 'static')));\napp.use((0, _methodOverride[\"default\"])());\napp.use(_bodyParser[\"default\"].urlencoded({\n  extended: false\n}));\nvar pgSession = (0, _connectPgSimple[\"default\"])(_expressSession[\"default\"]);\napp.use((0, _cookieParser[\"default\"])());\napp.use((0, _expressSession[\"default\"])({\n  store: new pgSession({\n    pg: _pg[\"default\"],\n    conString: _config[\"default\"].dbUri,\n    tableName: 'session',\n    schemaName: 'public'\n  }),\n  secret: _config[\"default\"].secret,\n  resave: false,\n  saveUninitialized: false,\n  cookie: {\n    httpOnly: true,\n    secure: false\n  }\n}));\napp.use(_passport[\"default\"].initialize());\napp.use(_passport[\"default\"].session());\n\n_passport[\"default\"].use(_user[\"default\"].createStrategy());\n\n_passport[\"default\"].serializeUser(_user[\"default\"].serializeUser());\n\n_passport[\"default\"].deserializeUser(_user[\"default\"].deserializeUser());\n\napp.get('/', function (req, res) {\n  res.send('Hello World!');\n});\n\nvar isAuthenticated = function isAuthenticated(req, res, next) {\n  if (req.isAuthenticated()) {\n    return next();\n  }\n\n  res.status(401).json({\n    error: 'Unauthorized access',\n    message: 'User must be logged to access the specified URI'\n  });\n};\n\napp.use(\"/auth\", _auth[\"default\"]);\napp.use(\"/api\", isAuthenticated, _api[\"default\"]);\nvar port = 3000;\nif (process.env.NODE_PORT) port = process.env.NODE_PORT;\napp.listen(port, function () {\n  console.log(\"El servidor est\\xE1 escuchando en el puerto \".concat(port));\n}); // escuchar el puerto\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJhcHAiLCJzZXQiLCJwYXRoIiwiam9pbiIsIl9fZGlybmFtZSIsInVzZSIsImV4cHJlc3MiLCJCb2R5UGFyc2VyIiwidXJsZW5jb2RlZCIsImV4dGVuZGVkIiwicGdTZXNzaW9uIiwiU2Vzc2lvbiIsInN0b3JlIiwicGciLCJQZyIsImNvblN0cmluZyIsImNvbmZpZyIsImRiVXJpIiwidGFibGVOYW1lIiwic2NoZW1hTmFtZSIsInNlY3JldCIsInJlc2F2ZSIsInNhdmVVbmluaXRpYWxpemVkIiwiY29va2llIiwiaHR0cE9ubHkiLCJzZWN1cmUiLCJQYXNzcG9ydCIsImluaXRpYWxpemUiLCJzZXNzaW9uIiwidXNlciIsImNyZWF0ZVN0cmF0ZWd5Iiwic2VyaWFsaXplVXNlciIsImRlc2VyaWFsaXplVXNlciIsImdldCIsInJlcSIsInJlcyIsInNlbmQiLCJpc0F1dGhlbnRpY2F0ZWQiLCJuZXh0Iiwic3RhdHVzIiwianNvbiIsImVycm9yIiwibWVzc2FnZSIsImF1dGhSb3V0ZXMiLCJhcGlSb3V0ZXMiLCJwb3J0IiwicHJvY2VzcyIsImVudiIsIk5PREVfUE9SVCIsImxpc3RlbiIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxHQUFHLEdBQUcsMEJBQVo7QUFFQUEsR0FBRyxDQUFDQyxHQUFKLENBQVEsYUFBUixFQUF1QixLQUF2QjtBQUNBRCxHQUFHLENBQUNDLEdBQUosQ0FBUSxPQUFSLEVBQWlCQyxpQkFBS0MsSUFBTCxDQUFVQyxTQUFWLEVBQXFCLE9BQXJCLENBQWpCO0FBQ0FKLEdBQUcsQ0FBQ0ssR0FBSixDQUFRQyw4QkFBZUosaUJBQUtDLElBQUwsQ0FBVUMsU0FBVixFQUFxQixRQUFyQixDQUFmLENBQVI7QUFDQUosR0FBRyxDQUFDSyxHQUFKLENBQVEsaUNBQVI7QUFDQUwsR0FBRyxDQUFDSyxHQUFKLENBQVFFLHVCQUFXQyxVQUFYLENBQXNCO0FBQUVDLEVBQUFBLFFBQVEsRUFBRTtBQUFaLENBQXRCLENBQVI7QUFDQSxJQUFNQyxTQUFTLEdBQUcsaUNBQVVDLDBCQUFWLENBQWxCO0FBQ0FYLEdBQUcsQ0FBQ0ssR0FBSixDQUFRLCtCQUFSO0FBQ0FMLEdBQUcsQ0FBQ0ssR0FBSixDQUFRLGdDQUFRO0FBQ2RPLEVBQUFBLEtBQUssRUFBRSxJQUFJRixTQUFKLENBQWM7QUFDbkJHLElBQUFBLEVBQUUsRUFBRUMsY0FEZTtBQUVuQkMsSUFBQUEsU0FBUyxFQUFFQyxtQkFBT0MsS0FGQztBQUduQkMsSUFBQUEsU0FBUyxFQUFFLFNBSFE7QUFJbkJDLElBQUFBLFVBQVUsRUFBRTtBQUpPLEdBQWQsQ0FETztBQU9kQyxFQUFBQSxNQUFNLEVBQUVKLG1CQUFPSSxNQVBEO0FBUWRDLEVBQUFBLE1BQU0sRUFBRSxLQVJNO0FBU2RDLEVBQUFBLGlCQUFpQixFQUFFLEtBVEw7QUFVZEMsRUFBQUEsTUFBTSxFQUFFO0FBQUNDLElBQUFBLFFBQVEsRUFBRSxJQUFYO0FBQWlCQyxJQUFBQSxNQUFNLEVBQUU7QUFBekI7QUFWTSxDQUFSLENBQVI7QUFhQXpCLEdBQUcsQ0FBQ0ssR0FBSixDQUFRcUIscUJBQVNDLFVBQVQsRUFBUjtBQUNBM0IsR0FBRyxDQUFDSyxHQUFKLENBQVFxQixxQkFBU0UsT0FBVCxFQUFSOztBQUVBRixxQkFBU3JCLEdBQVQsQ0FBYXdCLGlCQUFLQyxjQUFMLEVBQWI7O0FBQ0FKLHFCQUFTSyxhQUFULENBQXVCRixpQkFBS0UsYUFBTCxFQUF2Qjs7QUFDQUwscUJBQVNNLGVBQVQsQ0FBeUJILGlCQUFLRyxlQUFMLEVBQXpCOztBQUVBaEMsR0FBRyxDQUFDaUMsR0FBSixDQUFRLEdBQVIsRUFBWSxVQUFDQyxHQUFELEVBQUtDLEdBQUwsRUFBVztBQUNuQkEsRUFBQUEsR0FBRyxDQUFDQyxJQUFKLENBQVMsY0FBVDtBQUNILENBRkQ7O0FBSUEsSUFBTUMsZUFBZSxHQUFHLFNBQWxCQSxlQUFrQixDQUFDSCxHQUFELEVBQU1DLEdBQU4sRUFBV0csSUFBWCxFQUFvQjtBQUN4QyxNQUFJSixHQUFHLENBQUNHLGVBQUosRUFBSixFQUEyQjtBQUN6QixXQUFPQyxJQUFJLEVBQVg7QUFDRDs7QUFDREgsRUFBQUEsR0FBRyxDQUFDSSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDbkJDLElBQUFBLEtBQUssRUFBRSxxQkFEWTtBQUVuQkMsSUFBQUEsT0FBTyxFQUFFO0FBRlUsR0FBckI7QUFJSCxDQVJEOztBQVVBMUMsR0FBRyxDQUFDSyxHQUFKLFVBQWlCc0MsZ0JBQWpCO0FBQ0EzQyxHQUFHLENBQUNLLEdBQUosU0FBZ0JnQyxlQUFoQixFQUFrQ08sZUFBbEM7QUFFQSxJQUFJQyxJQUFJLEdBQUcsSUFBWDtBQUVBLElBQUlDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxTQUFoQixFQUEyQkgsSUFBSSxHQUFHQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsU0FBbkI7QUFFM0JoRCxHQUFHLENBQUNpRCxNQUFKLENBQVdKLElBQVgsRUFBaUIsWUFBTTtBQUNuQkssRUFBQUEsT0FBTyxDQUFDQyxHQUFSLHVEQUF3RE4sSUFBeEQ7QUFDSCxDQUZELEUsQ0FFSSIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEFTVVNcXERlc2t0b3BcXHBpdmdcXHNyYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xyXG5pbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcclxuaW1wb3J0IGNvbmZpZyBmcm9tICcuL2NvbmZpZy5qc29uJztcclxuaW1wb3J0IGFwaVJvdXRlcyBmcm9tICcuL3JvdXRlcy9hcGknO1xyXG5pbXBvcnQgUGcgZnJvbSAncGcnO1xyXG5pbXBvcnQgQm9keVBhcnNlciBmcm9tICdib2R5LXBhcnNlcic7XHJcbmltcG9ydCBNZXRob2RPdmVycmlkZSBmcm9tICdtZXRob2Qtb3ZlcnJpZGUnO1xyXG5pbXBvcnQgQ29ubmVjdFBnIGZyb20gJ2Nvbm5lY3QtcGctc2ltcGxlJztcclxuaW1wb3J0IFBhc3Nwb3J0IGZyb20gJ3Bhc3Nwb3J0JztcclxuaW1wb3J0IFNlc3Npb24gZnJvbSAnZXhwcmVzcy1zZXNzaW9uJztcclxuaW1wb3J0IENvb2tpZVBhcnNlciBmcm9tICdjb29raWUtcGFyc2VyJztcclxuaW1wb3J0IGF1dGhSb3V0ZXMgZnJvbSAnLi9yb3V0ZXMvYXV0aCc7XHJcbmltcG9ydCB1c2VyIGZyb20gJy4vbW9kZWxzL3VzZXInO1xyXG5cclxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xyXG5cclxuYXBwLnNldCgndmlldyBlbmdpbmUnLCAnZWpzJyk7XHJcbmFwcC5zZXQoJ3ZpZXdzJywgcGF0aC5qb2luKF9fZGlybmFtZSwgJ3ZpZXdzJykpO1xyXG5hcHAudXNlKGV4cHJlc3Muc3RhdGljKHBhdGguam9pbihfX2Rpcm5hbWUsICdzdGF0aWMnKSkpO1xyXG5hcHAudXNlKE1ldGhvZE92ZXJyaWRlKCkpO1xyXG5hcHAudXNlKEJvZHlQYXJzZXIudXJsZW5jb2RlZCh7IGV4dGVuZGVkOiBmYWxzZSB9KSk7XHJcbmNvbnN0IHBnU2Vzc2lvbiA9IENvbm5lY3RQZyhTZXNzaW9uKTtcclxuYXBwLnVzZShDb29raWVQYXJzZXIoKSk7XHJcbmFwcC51c2UoU2Vzc2lvbih7XHJcbiAgc3RvcmU6IG5ldyBwZ1Nlc3Npb24oe1xyXG4gICAgcGc6IFBnLFxyXG4gICAgY29uU3RyaW5nOiBjb25maWcuZGJVcmksXHJcbiAgICB0YWJsZU5hbWU6ICdzZXNzaW9uJyxcclxuICAgIHNjaGVtYU5hbWU6ICdwdWJsaWMnLFxyXG4gIH0pLFxyXG4gIHNlY3JldDogY29uZmlnLnNlY3JldCxcclxuICByZXNhdmU6IGZhbHNlLFxyXG4gIHNhdmVVbmluaXRpYWxpemVkOiBmYWxzZSxcclxuICBjb29raWU6IHtodHRwT25seTogdHJ1ZSwgc2VjdXJlOiBmYWxzZX1cclxufSkpO1xyXG5cclxuYXBwLnVzZShQYXNzcG9ydC5pbml0aWFsaXplKCkpO1xyXG5hcHAudXNlKFBhc3Nwb3J0LnNlc3Npb24oKSk7XHJcblxyXG5QYXNzcG9ydC51c2UodXNlci5jcmVhdGVTdHJhdGVneSgpKTtcclxuUGFzc3BvcnQuc2VyaWFsaXplVXNlcih1c2VyLnNlcmlhbGl6ZVVzZXIoKSk7XHJcblBhc3Nwb3J0LmRlc2VyaWFsaXplVXNlcih1c2VyLmRlc2VyaWFsaXplVXNlcigpKTtcclxuXHJcbmFwcC5nZXQoJy8nLChyZXEscmVzKT0+e1xyXG4gICAgcmVzLnNlbmQoJ0hlbGxvIFdvcmxkIScpO1xyXG59KVxyXG5cclxuY29uc3QgaXNBdXRoZW50aWNhdGVkID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XHJcbiAgICBpZiAocmVxLmlzQXV0aGVudGljYXRlZCgpKSB7XHJcbiAgICAgIHJldHVybiBuZXh0KCk7XHJcbiAgICB9XHJcbiAgICByZXMuc3RhdHVzKDQwMSkuanNvbih7XHJcbiAgICAgIGVycm9yOiAnVW5hdXRob3JpemVkIGFjY2VzcycsXHJcbiAgICAgIG1lc3NhZ2U6ICdVc2VyIG11c3QgYmUgbG9nZ2VkIHRvIGFjY2VzcyB0aGUgc3BlY2lmaWVkIFVSSSdcclxuICAgIH0pO1xyXG59O1xyXG5cclxuYXBwLnVzZShgL2F1dGhgLCBhdXRoUm91dGVzKTtcclxuYXBwLnVzZShgL2FwaWAsIGlzQXV0aGVudGljYXRlZCAsIGFwaVJvdXRlcyk7IFxyXG5cclxubGV0IHBvcnQgPSAzMDAwO1xyXG5cclxuaWYgKHByb2Nlc3MuZW52Lk5PREVfUE9SVCkgcG9ydCA9IHByb2Nlc3MuZW52Lk5PREVfUE9SVDtcclxuXHJcbmFwcC5saXN0ZW4ocG9ydCwgKCkgPT4ge1xyXG4gICAgY29uc29sZS5sb2coYEVsIHNlcnZpZG9yIGVzdMOhIGVzY3VjaGFuZG8gZW4gZWwgcHVlcnRvICR7cG9ydH1gKTtcclxufSk7IC8vIGVzY3VjaGFyIGVsIHB1ZXJ0byJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "app",
        "set",
        "path",
        "join",
        "__dirname",
        "use",
        "express",
        "BodyParser",
        "urlencoded",
        "extended",
        "pgSession",
        "Session",
        "store",
        "pg",
        "Pg",
        "conString",
        "config",
        "dbUri",
        "tableName",
        "schemaName",
        "secret",
        "resave",
        "saveUninitialized",
        "cookie",
        "httpOnly",
        "secure",
        "Passport",
        "initialize",
        "session",
        "user",
        "createStrategy",
        "serializeUser",
        "deserializeUser",
        "get",
        "req",
        "res",
        "send",
        "isAuthenticated",
        "next",
        "status",
        "json",
        "error",
        "message",
        "authRoutes",
        "apiRoutes",
        "port",
        "process",
        "env",
        "NODE_PORT",
        "listen",
        "console",
        "log"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,GAAG,GAAG,0BAAZ;AAEAA,GAAG,CAACC,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;AACAD,GAAG,CAACC,GAAJ,CAAQ,OAAR,EAAiBC,iBAAKC,IAAL,CAAUC,SAAV,EAAqB,OAArB,CAAjB;AACAJ,GAAG,CAACK,GAAJ,CAAQC,8BAAeJ,iBAAKC,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAR;AACAJ,GAAG,CAACK,GAAJ,CAAQ,iCAAR;AACAL,GAAG,CAACK,GAAJ,CAAQE,uBAAWC,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AACA,IAAMC,SAAS,GAAG,iCAAUC,0BAAV,CAAlB;AACAX,GAAG,CAACK,GAAJ,CAAQ,+BAAR;AACAL,GAAG,CAACK,GAAJ,CAAQ,gCAAQ;AACdO,EAAAA,KAAK,EAAE,IAAIF,SAAJ,CAAc;AACnBG,IAAAA,EAAE,EAAEC,cADe;AAEnBC,IAAAA,SAAS,EAAEC,mBAAOC,KAFC;AAGnBC,IAAAA,SAAS,EAAE,SAHQ;AAInBC,IAAAA,UAAU,EAAE;AAJO,GAAd,CADO;AAOdC,EAAAA,MAAM,EAAEJ,mBAAOI,MAPD;AAQdC,EAAAA,MAAM,EAAE,KARM;AASdC,EAAAA,iBAAiB,EAAE,KATL;AAUdC,EAAAA,MAAM,EAAE;AAACC,IAAAA,QAAQ,EAAE,IAAX;AAAiBC,IAAAA,MAAM,EAAE;AAAzB;AAVM,CAAR,CAAR;AAaAzB,GAAG,CAACK,GAAJ,CAAQqB,qBAASC,UAAT,EAAR;AACA3B,GAAG,CAACK,GAAJ,CAAQqB,qBAASE,OAAT,EAAR;;AAEAF,qBAASrB,GAAT,CAAawB,iBAAKC,cAAL,EAAb;;AACAJ,qBAASK,aAAT,CAAuBF,iBAAKE,aAAL,EAAvB;;AACAL,qBAASM,eAAT,CAAyBH,iBAAKG,eAAL,EAAzB;;AAEAhC,GAAG,CAACiC,GAAJ,CAAQ,GAAR,EAAY,UAACC,GAAD,EAAKC,GAAL,EAAW;AACnBA,EAAAA,GAAG,CAACC,IAAJ,CAAS,cAAT;AACH,CAFD;;AAIA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACH,GAAD,EAAMC,GAAN,EAAWG,IAAX,EAAoB;AACxC,MAAIJ,GAAG,CAACG,eAAJ,EAAJ,EAA2B;AACzB,WAAOC,IAAI,EAAX;AACD;;AACDH,EAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,IAAAA,KAAK,EAAE,qBADY;AAEnBC,IAAAA,OAAO,EAAE;AAFU,GAArB;AAIH,CARD;;AAUA1C,GAAG,CAACK,GAAJ,UAAiBsC,gBAAjB;AACA3C,GAAG,CAACK,GAAJ,SAAgBgC,eAAhB,EAAkCO,eAAlC;AAEA,IAAIC,IAAI,GAAG,IAAX;AAEA,IAAIC,OAAO,CAACC,GAAR,CAAYC,SAAhB,EAA2BH,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,SAAnB;AAE3BhD,GAAG,CAACiD,MAAJ,CAAWJ,IAAX,EAAiB,YAAM;AACnBK,EAAAA,OAAO,CAACC,GAAR,uDAAwDN,IAAxD;AACH,CAFD,E,CAEI",
      "sourceRoot": "C:\\Users\\ASUS\\Desktop\\pivg\\src",
      "sourcesContent": [
        "import express from 'express';\r\nimport path from 'path';\r\nimport config from './config.json';\r\nimport apiRoutes from './routes/api';\r\nimport Pg from 'pg';\r\nimport BodyParser from 'body-parser';\r\nimport MethodOverride from 'method-override';\r\nimport ConnectPg from 'connect-pg-simple';\r\nimport Passport from 'passport';\r\nimport Session from 'express-session';\r\nimport CookieParser from 'cookie-parser';\r\nimport authRoutes from './routes/auth';\r\nimport user from './models/user';\r\n\r\nconst app = express();\r\n\r\napp.set('view engine', 'ejs');\r\napp.set('views', path.join(__dirname, 'views'));\r\napp.use(express.static(path.join(__dirname, 'static')));\r\napp.use(MethodOverride());\r\napp.use(BodyParser.urlencoded({ extended: false }));\r\nconst pgSession = ConnectPg(Session);\r\napp.use(CookieParser());\r\napp.use(Session({\r\n  store: new pgSession({\r\n    pg: Pg,\r\n    conString: config.dbUri,\r\n    tableName: 'session',\r\n    schemaName: 'public',\r\n  }),\r\n  secret: config.secret,\r\n  resave: false,\r\n  saveUninitialized: false,\r\n  cookie: {httpOnly: true, secure: false}\r\n}));\r\n\r\napp.use(Passport.initialize());\r\napp.use(Passport.session());\r\n\r\nPassport.use(user.createStrategy());\r\nPassport.serializeUser(user.serializeUser());\r\nPassport.deserializeUser(user.deserializeUser());\r\n\r\napp.get('/',(req,res)=>{\r\n    res.send('Hello World!');\r\n})\r\n\r\nconst isAuthenticated = (req, res, next) => {\r\n    if (req.isAuthenticated()) {\r\n      return next();\r\n    }\r\n    res.status(401).json({\r\n      error: 'Unauthorized access',\r\n      message: 'User must be logged to access the specified URI'\r\n    });\r\n};\r\n\r\napp.use(`/auth`, authRoutes);\r\napp.use(`/api`, isAuthenticated , apiRoutes); \r\n\r\nlet port = 3000;\r\n\r\nif (process.env.NODE_PORT) port = process.env.NODE_PORT;\r\n\r\napp.listen(port, () => {\r\n    console.log(`El servidor está escuchando en el puerto ${port}`);\r\n}); // escuchar el puerto"
      ]
    },
    "sourceType": "script",
    "mtime": 1564939359310
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\pivg\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\pivg\",\"filename\":\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\pivg\\\\src\\\\routes\\\\api.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\pivg\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\ASUS\\Desktop\\pivg\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\ASUS\\Desktop\\pivg",
      "filename": "C:\\Users\\ASUS\\Desktop\\pivg\\src\\routes\\api.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\ASUS\\Desktop\\pivg",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\ASUS\\Desktop\\pivg\\src\\routes\\api.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\ASUS\\Desktop\\pivg\\src\\routes\\api.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\ASUS\\Desktop\\pivg\\src\\routes",
        "sourceFileName": "api.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _postgresAPI = _interopRequireDefault(require(\"../middleware/postgresAPI\"));\n\nvar _FormValidator = _interopRequireDefault(require(\"../middleware/FormValidator\"));\n\nvar _multer = _interopRequireDefault(require(\"multer\"));\n\nvar _fsExtra = _interopRequireDefault(require(\"fs-extra\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar router = _express[\"default\"].Router();\n\nvar requestFormValidation = function requestFormValidation(preValidation, callback) {\n  return function (req, res, next) {\n    if (req.body && req.body.data) req.body = JSON.parse(req.body.data);\n    var formValidation = preValidation(req.body, req.method);\n    if (formValidation.isValid) return callback(req, res, next);\n    res.status(400).json(formValidation);\n  };\n};\n\nvar requestUpload = function requestUpload(preValidation, callback, _ref) {\n  var fileSize = _ref.fileSize;\n  return function (req, res, next) {\n    upload(fileSize).any()(req, res, function (err) {\n      if (req.body && req.body.data && Array.isArray(req.body.data)) {\n        req.body = req.body.data.map(JSON.parse);\n        req.body.map(function (row) {\n          if (!empty(row.file)) row.fileData = req.files.shift();\n        });\n      }\n\n      if (req.body && req.body.data) req.body = JSON.parse(req.body.data);\n      var formValidation = preValidation(req.body, err);\n\n      if (formValidation.isValid) {\n        return callback(req, res, next);\n      }\n\n      res.status(400).json(formValidation);\n      var pathList = req.files.map(function (row) {\n        return row.path;\n      });\n      return deleteFiles(pathList);\n    });\n  };\n};\n\nrouter.get('/userInfo', function (req, res) {\n  // cambiar los parametros con respecto al proyecto\n  res.status(200).json({\n    name: req.user.name,\n    rut: req.user['user_id'],\n    type: req.user['user_type_id']\n  });\n}); //GET\n//POST\n//PUT\n//DELETE\n\nrouter.all('*', function (req, res) {\n  res.status(404).json({\n    message: 'La ruta de la solicitud HTTP no es reconocida por el servidor.'\n  });\n});\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS5qcyJdLCJuYW1lcyI6WyJyb3V0ZXIiLCJFeHByZXNzIiwiUm91dGVyIiwicmVxdWVzdEZvcm1WYWxpZGF0aW9uIiwicHJlVmFsaWRhdGlvbiIsImNhbGxiYWNrIiwicmVxIiwicmVzIiwibmV4dCIsImJvZHkiLCJkYXRhIiwiSlNPTiIsInBhcnNlIiwiZm9ybVZhbGlkYXRpb24iLCJtZXRob2QiLCJpc1ZhbGlkIiwic3RhdHVzIiwianNvbiIsInJlcXVlc3RVcGxvYWQiLCJmaWxlU2l6ZSIsInVwbG9hZCIsImFueSIsImVyciIsIkFycmF5IiwiaXNBcnJheSIsIm1hcCIsInJvdyIsImVtcHR5IiwiZmlsZSIsImZpbGVEYXRhIiwiZmlsZXMiLCJzaGlmdCIsInBhdGhMaXN0IiwicGF0aCIsImRlbGV0ZUZpbGVzIiwiZ2V0IiwibmFtZSIsInVzZXIiLCJydXQiLCJ0eXBlIiwiYWxsIiwibWVzc2FnZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBRUEsSUFBTUEsTUFBTSxHQUFHQyxvQkFBUUMsTUFBUixFQUFmOztBQUVBLElBQU1DLHFCQUFxQixHQUFHLFNBQXhCQSxxQkFBd0IsQ0FBQ0MsYUFBRCxFQUFnQkMsUUFBaEIsRUFBNkI7QUFDdkQsU0FBTyxVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxFQUFvQjtBQUN2QixRQUFJRixHQUFHLENBQUNHLElBQUosSUFBWUgsR0FBRyxDQUFDRyxJQUFKLENBQVNDLElBQXpCLEVBQ0FKLEdBQUcsQ0FBQ0csSUFBSixHQUFXRSxJQUFJLENBQUNDLEtBQUwsQ0FBV04sR0FBRyxDQUFDRyxJQUFKLENBQVNDLElBQXBCLENBQVg7QUFDQSxRQUFNRyxjQUFjLEdBQUdULGFBQWEsQ0FBQ0UsR0FBRyxDQUFDRyxJQUFMLEVBQVdILEdBQUcsQ0FBQ1EsTUFBZixDQUFwQztBQUNBLFFBQUlELGNBQWMsQ0FBQ0UsT0FBbkIsRUFDQSxPQUFPVixRQUFRLENBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLENBQWY7QUFFQUQsSUFBQUEsR0FBRyxDQUFDUyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJKLGNBQXJCO0FBQ0gsR0FSRDtBQVNILENBVkQ7O0FBWUEsSUFBTUssYUFBYSxHQUFHLFNBQWhCQSxhQUFnQixDQUFDZCxhQUFELEVBQWdCQyxRQUFoQixRQUEyQztBQUFBLE1BQWZjLFFBQWUsUUFBZkEsUUFBZTtBQUMvRCxTQUFPLFVBQUNiLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLEVBQW9CO0FBQ3pCWSxJQUFBQSxNQUFNLENBQUNELFFBQUQsQ0FBTixDQUFpQkUsR0FBakIsR0FBdUJmLEdBQXZCLEVBQTRCQyxHQUE1QixFQUFpQyxVQUFBZSxHQUFHLEVBQUk7QUFDdEMsVUFBSWhCLEdBQUcsQ0FBQ0csSUFBSixJQUFZSCxHQUFHLENBQUNHLElBQUosQ0FBU0MsSUFBckIsSUFBNkJhLEtBQUssQ0FBQ0MsT0FBTixDQUFlbEIsR0FBRyxDQUFDRyxJQUFKLENBQVNDLElBQXhCLENBQWpDLEVBQWlFO0FBQy9ESixRQUFBQSxHQUFHLENBQUNHLElBQUosR0FBV0gsR0FBRyxDQUFDRyxJQUFKLENBQVNDLElBQVQsQ0FBY2UsR0FBZCxDQUFrQmQsSUFBSSxDQUFDQyxLQUF2QixDQUFYO0FBQ0FOLFFBQUFBLEdBQUcsQ0FBQ0csSUFBSixDQUFTZ0IsR0FBVCxDQUFhLFVBQUFDLEdBQUcsRUFBSTtBQUNsQixjQUFJLENBQUNDLEtBQUssQ0FBQ0QsR0FBRyxDQUFDRSxJQUFMLENBQVYsRUFDRUYsR0FBRyxDQUFDRyxRQUFKLEdBQWV2QixHQUFHLENBQUN3QixLQUFKLENBQVVDLEtBQVYsRUFBZjtBQUNILFNBSEQ7QUFJRDs7QUFFRCxVQUFJekIsR0FBRyxDQUFDRyxJQUFKLElBQVlILEdBQUcsQ0FBQ0csSUFBSixDQUFTQyxJQUF6QixFQUNFSixHQUFHLENBQUNHLElBQUosR0FBV0UsSUFBSSxDQUFDQyxLQUFMLENBQVdOLEdBQUcsQ0FBQ0csSUFBSixDQUFTQyxJQUFwQixDQUFYO0FBRUYsVUFBTUcsY0FBYyxHQUFHVCxhQUFhLENBQUNFLEdBQUcsQ0FBQ0csSUFBTCxFQUFXYSxHQUFYLENBQXBDOztBQUNBLFVBQUlULGNBQWMsQ0FBQ0UsT0FBbkIsRUFBMkI7QUFDekIsZUFBT1YsUUFBUSxDQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxDQUFmO0FBQ0Q7O0FBR0RELE1BQUFBLEdBQUcsQ0FBQ1MsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCSixjQUFyQjtBQUNBLFVBQU1tQixRQUFRLEdBQUcxQixHQUFHLENBQUN3QixLQUFKLENBQVVMLEdBQVYsQ0FBYyxVQUFBQyxHQUFHO0FBQUEsZUFBS0EsR0FBRyxDQUFDTyxJQUFUO0FBQUEsT0FBakIsQ0FBakI7QUFDQSxhQUFPQyxXQUFXLENBQUNGLFFBQUQsQ0FBbEI7QUFDRCxLQXJCRDtBQXNCRCxHQXZCRDtBQXdCRCxDQXpCRDs7QUEyQkFoQyxNQUFNLENBQUNtQyxHQUFQLENBQVcsV0FBWCxFQUF3QixVQUFDN0IsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFBRTtBQUNwQ0EsRUFBQUEsR0FBRyxDQUFDUyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDbkJtQixJQUFBQSxJQUFJLEVBQUU5QixHQUFHLENBQUMrQixJQUFKLENBQVNELElBREk7QUFFbkJFLElBQUFBLEdBQUcsRUFBRWhDLEdBQUcsQ0FBQytCLElBQUosQ0FBUyxTQUFULENBRmM7QUFHbkJFLElBQUFBLElBQUksRUFBRWpDLEdBQUcsQ0FBQytCLElBQUosQ0FBUyxjQUFUO0FBSGEsR0FBckI7QUFLSCxDQU5ELEUsQ0FTQTtBQUVBO0FBRUE7QUFFQTs7QUFFQXJDLE1BQU0sQ0FBQ3dDLEdBQVAsQ0FBVyxHQUFYLEVBQWdCLFVBQUNsQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUMxQkEsRUFBQUEsR0FBRyxDQUFDUyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFBRXdCLElBQUFBLE9BQU8sRUFBRTtBQUFYLEdBQXJCO0FBQ0gsQ0FGRDtlQUllekMsTSIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEFTVVNcXERlc2t0b3BcXHBpdmdcXHNyY1xccm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XHJcbmltcG9ydCBkYiBmcm9tICcuLi9taWRkbGV3YXJlL3Bvc3RncmVzQVBJJztcclxuaW1wb3J0IEZvcm1WYWxpZGF0b3IgZnJvbSAnLi4vbWlkZGxld2FyZS9Gb3JtVmFsaWRhdG9yJ1xyXG5pbXBvcnQgbXVsdGVyIGZyb20gJ211bHRlcidcclxuaW1wb3J0IGZzIGZyb20gJ2ZzLWV4dHJhJ1xyXG5cclxuY29uc3Qgcm91dGVyID0gRXhwcmVzcy5Sb3V0ZXIoKTtcclxuXHJcbmNvbnN0IHJlcXVlc3RGb3JtVmFsaWRhdGlvbiA9IChwcmVWYWxpZGF0aW9uLCBjYWxsYmFjaykgPT4ge1xyXG4gICAgcmV0dXJuIChyZXEsIHJlcywgbmV4dCkgPT4ge1xyXG4gICAgICAgIGlmIChyZXEuYm9keSAmJiByZXEuYm9keS5kYXRhKVxyXG4gICAgICAgIHJlcS5ib2R5ID0gSlNPTi5wYXJzZShyZXEuYm9keS5kYXRhKTtcclxuICAgICAgICBjb25zdCBmb3JtVmFsaWRhdGlvbiA9IHByZVZhbGlkYXRpb24ocmVxLmJvZHksIHJlcS5tZXRob2QpO1xyXG4gICAgICAgIGlmIChmb3JtVmFsaWRhdGlvbi5pc1ZhbGlkKVxyXG4gICAgICAgIHJldHVybiBjYWxsYmFjayhyZXEsIHJlcywgbmV4dCk7XHJcblxyXG4gICAgICAgIHJlcy5zdGF0dXMoNDAwKS5qc29uKGZvcm1WYWxpZGF0aW9uKTtcclxuICAgIH07XHJcbn07XHJcblxyXG5jb25zdCByZXF1ZXN0VXBsb2FkID0gKHByZVZhbGlkYXRpb24sIGNhbGxiYWNrLCB7IGZpbGVTaXplIH0pID0+IHtcclxuICByZXR1cm4gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XHJcbiAgICB1cGxvYWQoZmlsZVNpemUpLmFueSgpKHJlcSwgcmVzLCBlcnIgPT4ge1xyXG4gICAgICBpZiAocmVxLmJvZHkgJiYgcmVxLmJvZHkuZGF0YSAmJiBBcnJheS5pc0FycmF5KChyZXEuYm9keS5kYXRhKSkpIHsgXHJcbiAgICAgICAgcmVxLmJvZHkgPSByZXEuYm9keS5kYXRhLm1hcChKU09OLnBhcnNlKTtcclxuICAgICAgICByZXEuYm9keS5tYXAocm93ID0+IHtcclxuICAgICAgICAgIGlmICghZW1wdHkocm93LmZpbGUpKVxyXG4gICAgICAgICAgICByb3cuZmlsZURhdGEgPSByZXEuZmlsZXMuc2hpZnQoKTtcclxuICAgICAgICB9KTtcclxuICAgICAgfVxyXG5cclxuICAgICAgaWYgKHJlcS5ib2R5ICYmIHJlcS5ib2R5LmRhdGEpXHJcbiAgICAgICAgcmVxLmJvZHkgPSBKU09OLnBhcnNlKHJlcS5ib2R5LmRhdGEpO1xyXG5cclxuICAgICAgY29uc3QgZm9ybVZhbGlkYXRpb24gPSBwcmVWYWxpZGF0aW9uKHJlcS5ib2R5LCBlcnIpO1xyXG4gICAgICBpZiAoZm9ybVZhbGlkYXRpb24uaXNWYWxpZCl7XHJcbiAgICAgICAgcmV0dXJuIGNhbGxiYWNrKHJlcSwgcmVzLCBuZXh0KTtcclxuICAgICAgfVxyXG4gICAgICAgIFxyXG5cclxuICAgICAgcmVzLnN0YXR1cyg0MDApLmpzb24oZm9ybVZhbGlkYXRpb24pO1xyXG4gICAgICBjb25zdCBwYXRoTGlzdCA9IHJlcS5maWxlcy5tYXAocm93ID0+IChyb3cucGF0aCkpO1xyXG4gICAgICByZXR1cm4gZGVsZXRlRmlsZXMocGF0aExpc3QpO1xyXG4gICAgfSk7XHJcbiAgfTtcclxufTtcclxuXHJcbnJvdXRlci5nZXQoJy91c2VySW5mbycsIChyZXEsIHJlcykgPT4geyAvLyBjYW1iaWFyIGxvcyBwYXJhbWV0cm9zIGNvbiByZXNwZWN0byBhbCBwcm95ZWN0b1xyXG4gICAgcmVzLnN0YXR1cygyMDApLmpzb24oe1xyXG4gICAgICBuYW1lOiByZXEudXNlci5uYW1lLFxyXG4gICAgICBydXQ6IHJlcS51c2VyWyd1c2VyX2lkJ10sXHJcbiAgICAgIHR5cGU6IHJlcS51c2VyWyd1c2VyX3R5cGVfaWQnXVxyXG4gICAgfSk7XHJcbn0pO1xyXG5cclxuXHJcbi8vR0VUXHJcblxyXG4vL1BPU1RcclxuXHJcbi8vUFVUXHJcblxyXG4vL0RFTEVURVxyXG5cclxucm91dGVyLmFsbCgnKicsIChyZXEsIHJlcykgPT4ge1xyXG4gICAgcmVzLnN0YXR1cyg0MDQpLmpzb24oeyBtZXNzYWdlOiAnTGEgcnV0YSBkZSBsYSBzb2xpY2l0dWQgSFRUUCBubyBlcyByZWNvbm9jaWRhIHBvciBlbCBzZXJ2aWRvci4nIH0pO1xyXG59KTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "api.js"
      ],
      "names": [
        "router",
        "Express",
        "Router",
        "requestFormValidation",
        "preValidation",
        "callback",
        "req",
        "res",
        "next",
        "body",
        "data",
        "JSON",
        "parse",
        "formValidation",
        "method",
        "isValid",
        "status",
        "json",
        "requestUpload",
        "fileSize",
        "upload",
        "any",
        "err",
        "Array",
        "isArray",
        "map",
        "row",
        "empty",
        "file",
        "fileData",
        "files",
        "shift",
        "pathList",
        "path",
        "deleteFiles",
        "get",
        "name",
        "user",
        "rut",
        "type",
        "all",
        "message"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,MAAM,GAAGC,oBAAQC,MAAR,EAAf;;AAEA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,aAAD,EAAgBC,QAAhB,EAA6B;AACvD,SAAO,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACvB,QAAIF,GAAG,CAACG,IAAJ,IAAYH,GAAG,CAACG,IAAJ,CAASC,IAAzB,EACAJ,GAAG,CAACG,IAAJ,GAAWE,IAAI,CAACC,KAAL,CAAWN,GAAG,CAACG,IAAJ,CAASC,IAApB,CAAX;AACA,QAAMG,cAAc,GAAGT,aAAa,CAACE,GAAG,CAACG,IAAL,EAAWH,GAAG,CAACQ,MAAf,CAApC;AACA,QAAID,cAAc,CAACE,OAAnB,EACA,OAAOV,QAAQ,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,CAAf;AAEAD,IAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBJ,cAArB;AACH,GARD;AASH,CAVD;;AAYA,IAAMK,aAAa,GAAG,SAAhBA,aAAgB,CAACd,aAAD,EAAgBC,QAAhB,QAA2C;AAAA,MAAfc,QAAe,QAAfA,QAAe;AAC/D,SAAO,UAACb,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACzBY,IAAAA,MAAM,CAACD,QAAD,CAAN,CAAiBE,GAAjB,GAAuBf,GAAvB,EAA4BC,GAA5B,EAAiC,UAAAe,GAAG,EAAI;AACtC,UAAIhB,GAAG,CAACG,IAAJ,IAAYH,GAAG,CAACG,IAAJ,CAASC,IAArB,IAA6Ba,KAAK,CAACC,OAAN,CAAelB,GAAG,CAACG,IAAJ,CAASC,IAAxB,CAAjC,EAAiE;AAC/DJ,QAAAA,GAAG,CAACG,IAAJ,GAAWH,GAAG,CAACG,IAAJ,CAASC,IAAT,CAAce,GAAd,CAAkBd,IAAI,CAACC,KAAvB,CAAX;AACAN,QAAAA,GAAG,CAACG,IAAJ,CAASgB,GAAT,CAAa,UAAAC,GAAG,EAAI;AAClB,cAAI,CAACC,KAAK,CAACD,GAAG,CAACE,IAAL,CAAV,EACEF,GAAG,CAACG,QAAJ,GAAevB,GAAG,CAACwB,KAAJ,CAAUC,KAAV,EAAf;AACH,SAHD;AAID;;AAED,UAAIzB,GAAG,CAACG,IAAJ,IAAYH,GAAG,CAACG,IAAJ,CAASC,IAAzB,EACEJ,GAAG,CAACG,IAAJ,GAAWE,IAAI,CAACC,KAAL,CAAWN,GAAG,CAACG,IAAJ,CAASC,IAApB,CAAX;AAEF,UAAMG,cAAc,GAAGT,aAAa,CAACE,GAAG,CAACG,IAAL,EAAWa,GAAX,CAApC;;AACA,UAAIT,cAAc,CAACE,OAAnB,EAA2B;AACzB,eAAOV,QAAQ,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,CAAf;AACD;;AAGDD,MAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBJ,cAArB;AACA,UAAMmB,QAAQ,GAAG1B,GAAG,CAACwB,KAAJ,CAAUL,GAAV,CAAc,UAAAC,GAAG;AAAA,eAAKA,GAAG,CAACO,IAAT;AAAA,OAAjB,CAAjB;AACA,aAAOC,WAAW,CAACF,QAAD,CAAlB;AACD,KArBD;AAsBD,GAvBD;AAwBD,CAzBD;;AA2BAhC,MAAM,CAACmC,GAAP,CAAW,WAAX,EAAwB,UAAC7B,GAAD,EAAMC,GAAN,EAAc;AAAE;AACpCA,EAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBmB,IAAAA,IAAI,EAAE9B,GAAG,CAAC+B,IAAJ,CAASD,IADI;AAEnBE,IAAAA,GAAG,EAAEhC,GAAG,CAAC+B,IAAJ,CAAS,SAAT,CAFc;AAGnBE,IAAAA,IAAI,EAAEjC,GAAG,CAAC+B,IAAJ,CAAS,cAAT;AAHa,GAArB;AAKH,CAND,E,CASA;AAEA;AAEA;AAEA;;AAEArC,MAAM,CAACwC,GAAP,CAAW,GAAX,EAAgB,UAAClC,GAAD,EAAMC,GAAN,EAAc;AAC1BA,EAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEwB,IAAAA,OAAO,EAAE;AAAX,GAArB;AACH,CAFD;eAIezC,M",
      "sourceRoot": "C:\\Users\\ASUS\\Desktop\\pivg\\src\\routes",
      "sourcesContent": [
        "import Express from 'express';\r\nimport db from '../middleware/postgresAPI';\r\nimport FormValidator from '../middleware/FormValidator'\r\nimport multer from 'multer'\r\nimport fs from 'fs-extra'\r\n\r\nconst router = Express.Router();\r\n\r\nconst requestFormValidation = (preValidation, callback) => {\r\n    return (req, res, next) => {\r\n        if (req.body && req.body.data)\r\n        req.body = JSON.parse(req.body.data);\r\n        const formValidation = preValidation(req.body, req.method);\r\n        if (formValidation.isValid)\r\n        return callback(req, res, next);\r\n\r\n        res.status(400).json(formValidation);\r\n    };\r\n};\r\n\r\nconst requestUpload = (preValidation, callback, { fileSize }) => {\r\n  return (req, res, next) => {\r\n    upload(fileSize).any()(req, res, err => {\r\n      if (req.body && req.body.data && Array.isArray((req.body.data))) { \r\n        req.body = req.body.data.map(JSON.parse);\r\n        req.body.map(row => {\r\n          if (!empty(row.file))\r\n            row.fileData = req.files.shift();\r\n        });\r\n      }\r\n\r\n      if (req.body && req.body.data)\r\n        req.body = JSON.parse(req.body.data);\r\n\r\n      const formValidation = preValidation(req.body, err);\r\n      if (formValidation.isValid){\r\n        return callback(req, res, next);\r\n      }\r\n        \r\n\r\n      res.status(400).json(formValidation);\r\n      const pathList = req.files.map(row => (row.path));\r\n      return deleteFiles(pathList);\r\n    });\r\n  };\r\n};\r\n\r\nrouter.get('/userInfo', (req, res) => { // cambiar los parametros con respecto al proyecto\r\n    res.status(200).json({\r\n      name: req.user.name,\r\n      rut: req.user['user_id'],\r\n      type: req.user['user_type_id']\r\n    });\r\n});\r\n\r\n\r\n//GET\r\n\r\n//POST\r\n\r\n//PUT\r\n\r\n//DELETE\r\n\r\nrouter.all('*', (req, res) => {\r\n    res.status(404).json({ message: 'La ruta de la solicitud HTTP no es reconocida por el servidor.' });\r\n});\r\n\r\nexport default router;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1564939213394
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\pivg\\\\src\\\\middleware\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\pivg\",\"filename\":\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\pivg\\\\src\\\\middleware\\\\postgresAPI.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\pivg\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\ASUS\\Desktop\\pivg\\src\\middleware",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\ASUS\\Desktop\\pivg",
      "filename": "C:\\Users\\ASUS\\Desktop\\pivg\\src\\middleware\\postgresAPI.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\ASUS\\Desktop\\pivg",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\ASUS\\Desktop\\pivg\\src\\middleware\\postgresAPI.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\ASUS\\Desktop\\pivg\\src\\middleware\\postgresAPI.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\ASUS\\Desktop\\pivg\\src\\middleware",
        "sourceFileName": "postgresAPI.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _postgresConnection = _interopRequireDefault(require(\"./postgresConnection\"));\n\nvar _rutjs = _interopRequireDefault(require(\"rutjs\"));\n\nvar _user = _interopRequireDefault(require(\"../models/user\"));\n\nvar _isEmpty = _interopRequireDefault(require(\"is-empty\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar functionQueries = {};\n/**\r\n * Función que sirve para generar el menú lateral dado el tipo de usuario, por ejemplo si\r\n * el usuario que se intenta logear es de tipo Administrador, se muestra todo el menú pero si es por ejemplo\r\n * una secretaria, el menú solo contiene ciertos apartados.\r\n * También sirve para ver si el usuario está bloqueado o no.\r\n */\n\nfunctionQueries.getAuthenticatedUserData = function (req, res, next) {\n  var user = {\n    id: req.user.id,\n    userId: req.user['user_id'],\n    name: req.user.name,\n    type: req.user['user_type_id'],\n    state: req.user.state\n  };\n  req.body.pathname = req.body.pathname.substring(1, req.body.pathname.length);\n  var data = {\n    type: user.type,\n    pathname: req.body.pathname || ''\n  };\n\n  _postgresConnection[\"default\"].tx(function (t) {\n    var queries = []; // Consulta que toma la ruta actual y le pregunta a la base de datos si este usuario tiene permiso para entrar a ese link\n    //en especifico\n\n    var query = 'SELECT COUNT(*)\\\r\n                  FROM user_permission INNER JOIN system_page ON user_permission.system_page_id = system_page.id\\\r\n                  WHERE user_permission.user_type_id = ${type} AND system_page.link = ${pathname}';\n    queries.push(t.one(query, data)); //La consulta que devuelve todo el menu lateral dado el tipo de usuario , la respuesta que se espera es como la siguiente:\n    // Menu Grande -> json{Sub-Menu1, Sub-Menu2, .... , Sub-Menu n}\n\n    query = \"SELECT menu_group.iconclass, menu_group.id, menu_group.menu, CASE WHEN menu_group.menu_order IS NULL THEN 0 ELSE menu_group.menu_order END AS menu_order,\\\r\n                json_agg(json_build_object('titulo', system_page.text, 'link', system_page.link, 'icon', system_page.icon) ORDER BY user_permission.menu_order) AS link\\\r\n              FROM user_permission\\\r\n                INNER JOIN system_page ON user_permission.system_page_id = system_page.id\\\r\n                LEFT JOIN menu_group ON user_permission.menu_group_id = menu_group.id\\\r\n              WHERE user_type_id = ${type} AND in_menu AND system_page.id != 14\\\r\n              GROUP BY menu_group.menu_order, menu_group.menu, menu_group.id, menu_group.iconclass\\\r\n              ORDER BY menu_order\";\n    queries.push(t.any(query, data)); // Ejecuto las dos consultas simultaneamente con batch\n\n    return t.batch(queries);\n  }) //Si el menu lateral no tiene submenu solamente agrego el titulo, pero si tiene sub-menus agrego cada sub-menu a ese menú\n  //en particular\n  .then(function (result) {\n    var menu = [];\n    result[1].map(function (row) {\n      if (!row.menu) row.link.map(function (menuItem) {\n        return menu.push(menuItem);\n      });else menu.push(row);\n    }); //let permission = ['/login','/', '*'].indexOf(data.pathname) != -1 || result[0].count > 0;\n\n    res.status(user.state ? 200 : 403).json({\n      logged: true,\n      hasPermission: user.state,\n      user: user,\n      menu: menu\n    });\n  })[\"catch\"](function (err) {\n    console.log(err);\n    res.status(500).json({\n      error: err,\n      message: 'Error al obtener los datos del usuario.'\n    });\n  });\n};\n\nvar _default = functionQueries;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "postgresAPI.js"
      ],
      "names": [
        "functionQueries",
        "getAuthenticatedUserData",
        "req",
        "res",
        "next",
        "user",
        "id",
        "userId",
        "name",
        "type",
        "state",
        "body",
        "pathname",
        "substring",
        "length",
        "data",
        "connection",
        "tx",
        "t",
        "queries",
        "query",
        "push",
        "one",
        "any",
        "batch",
        "then",
        "result",
        "menu",
        "map",
        "row",
        "link",
        "menuItem",
        "status",
        "json",
        "logged",
        "hasPermission",
        "err",
        "console",
        "log",
        "error",
        "message"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,eAAe,GAAG,EAAxB;AAEA;;;;;;;AAOAA,eAAe,CAACC,wBAAhB,GAA2C,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC3D,MAAIC,IAAI,GAAG;AACPC,IAAAA,EAAE,EAAEJ,GAAG,CAACG,IAAJ,CAASC,EADN;AAEPC,IAAAA,MAAM,EAAEL,GAAG,CAACG,IAAJ,CAAS,SAAT,CAFD;AAGPG,IAAAA,IAAI,EAAEN,GAAG,CAACG,IAAJ,CAASG,IAHR;AAIPC,IAAAA,IAAI,EAAEP,GAAG,CAACG,IAAJ,CAAS,cAAT,CAJC;AAKPK,IAAAA,KAAK,EAAER,GAAG,CAACG,IAAJ,CAASK;AALT,GAAX;AAOAR,EAAAA,GAAG,CAACS,IAAJ,CAASC,QAAT,GAAoBV,GAAG,CAACS,IAAJ,CAASC,QAAT,CAAkBC,SAAlB,CAA4B,CAA5B,EAA+BX,GAAG,CAACS,IAAJ,CAASC,QAAT,CAAkBE,MAAjD,CAApB;AACA,MAAIC,IAAI,GAAG;AAAEN,IAAAA,IAAI,EAAEJ,IAAI,CAACI,IAAb;AAAmBG,IAAAA,QAAQ,EAAEV,GAAG,CAACS,IAAJ,CAASC,QAAT,IAAqB;AAAlD,GAAX;;AAEAI,iCAAWC,EAAX,CAAc,UAAAC,CAAC,EAAI;AACf,QAAIC,OAAO,GAAG,EAAd,CADe,CAEf;AACA;;AACA,QAAIC,KAAK,GAAG;;kGAAZ;AAGAD,IAAAA,OAAO,CAACE,IAAR,CAAaH,CAAC,CAACI,GAAF,CAAMF,KAAN,EAAaL,IAAb,CAAb,EAPe,CAQf;AACA;;AACAK,IAAAA,KAAK,GAAG;;;;;;;kCAAR;AASAD,IAAAA,OAAO,CAACE,IAAR,CAAaH,CAAC,CAACK,GAAF,CAAMH,KAAN,EAAaL,IAAb,CAAb,EAnBe,CAoBf;;AACA,WAAOG,CAAC,CAACM,KAAF,CAAQL,OAAR,CAAP;AACH,GAtBD,EAuBI;AACA;AAxBJ,GAyBKM,IAzBL,CAyBU,UAAAC,MAAM,EAAI;AACZ,QAAIC,IAAI,GAAG,EAAX;AACAD,IAAAA,MAAM,CAAC,CAAD,CAAN,CAAUE,GAAV,CAAc,UAAAC,GAAG,EAAI;AACjB,UAAI,CAACA,GAAG,CAACF,IAAT,EACIE,GAAG,CAACC,IAAJ,CAASF,GAAT,CAAa,UAAAG,QAAQ;AAAA,eAAIJ,IAAI,CAACN,IAAL,CAAUU,QAAV,CAAJ;AAAA,OAArB,EADJ,KAGIJ,IAAI,CAACN,IAAL,CAAUQ,GAAV;AACP,KALD,EAFY,CASZ;;AACA1B,IAAAA,GAAG,CAAC6B,MAAJ,CAAW3B,IAAI,CAACK,KAAL,GAAa,GAAb,GAAmB,GAA9B,EAAmCuB,IAAnC,CAAwC;AACpCC,MAAAA,MAAM,EAAE,IAD4B;AAEpCC,MAAAA,aAAa,EAAE9B,IAAI,CAACK,KAFgB;AAGpCL,MAAAA,IAAI,EAAJA,IAHoC;AAIpCsB,MAAAA,IAAI,EAAJA;AAJoC,KAAxC;AAMH,GAzCL,WA0CW,UAAAS,GAAG,EAAI;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAjC,IAAAA,GAAG,CAAC6B,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEM,MAAAA,KAAK,EAAEH,GAAT;AAAcI,MAAAA,OAAO,EAAE;AAAvB,KAArB;AACH,GA7CL;AA8CH,CAzDD;;eA2DexC,e",
      "sourceRoot": "C:\\Users\\ASUS\\Desktop\\pivg\\src\\middleware",
      "sourcesContent": [
        "import connection from './postgresConnection';\r\nimport Rut from 'rutjs';\r\nimport User from '../models/user';\r\nimport empty from 'is-empty';\r\n\r\nconst functionQueries = {};\r\n\r\n/**\r\n * Función que sirve para generar el menú lateral dado el tipo de usuario, por ejemplo si\r\n * el usuario que se intenta logear es de tipo Administrador, se muestra todo el menú pero si es por ejemplo\r\n * una secretaria, el menú solo contiene ciertos apartados.\r\n * También sirve para ver si el usuario está bloqueado o no.\r\n */\r\n\r\nfunctionQueries.getAuthenticatedUserData = (req, res, next) => {\r\n    let user = {\r\n        id: req.user.id,\r\n        userId: req.user['user_id'],\r\n        name: req.user.name,\r\n        type: req.user['user_type_id'],\r\n        state: req.user.state\r\n    };\r\n    req.body.pathname = req.body.pathname.substring(1, req.body.pathname.length);\r\n    let data = { type: user.type, pathname: req.body.pathname || '' };\r\n\r\n    connection.tx(t => {\r\n        let queries = [];\r\n        // Consulta que toma la ruta actual y le pregunta a la base de datos si este usuario tiene permiso para entrar a ese link\r\n        //en especifico\r\n        let query = 'SELECT COUNT(*)\\\r\n                  FROM user_permission INNER JOIN system_page ON user_permission.system_page_id = system_page.id\\\r\n                  WHERE user_permission.user_type_id = ${type} AND system_page.link = ${pathname}';\r\n        queries.push(t.one(query, data));\r\n        //La consulta que devuelve todo el menu lateral dado el tipo de usuario , la respuesta que se espera es como la siguiente:\r\n        // Menu Grande -> json{Sub-Menu1, Sub-Menu2, .... , Sub-Menu n}\r\n        query = \"SELECT menu_group.iconclass, menu_group.id, menu_group.menu, CASE WHEN menu_group.menu_order IS NULL THEN 0 ELSE menu_group.menu_order END AS menu_order,\\\r\n                json_agg(json_build_object('titulo', system_page.text, 'link', system_page.link, 'icon', system_page.icon) ORDER BY user_permission.menu_order) AS link\\\r\n              FROM user_permission\\\r\n                INNER JOIN system_page ON user_permission.system_page_id = system_page.id\\\r\n                LEFT JOIN menu_group ON user_permission.menu_group_id = menu_group.id\\\r\n              WHERE user_type_id = ${type} AND in_menu AND system_page.id != 14\\\r\n              GROUP BY menu_group.menu_order, menu_group.menu, menu_group.id, menu_group.iconclass\\\r\n              ORDER BY menu_order\";\r\n\r\n        queries.push(t.any(query, data));\r\n        // Ejecuto las dos consultas simultaneamente con batch\r\n        return t.batch(queries);\r\n    })\r\n        //Si el menu lateral no tiene submenu solamente agrego el titulo, pero si tiene sub-menus agrego cada sub-menu a ese menú\r\n        //en particular\r\n        .then(result => {\r\n            let menu = [];\r\n            result[1].map(row => {\r\n                if (!row.menu)\r\n                    row.link.map(menuItem => menu.push(menuItem));\r\n                else\r\n                    menu.push(row);\r\n            });\r\n\r\n            //let permission = ['/login','/', '*'].indexOf(data.pathname) != -1 || result[0].count > 0;\r\n            res.status(user.state ? 200 : 403).json({\r\n                logged: true,\r\n                hasPermission: user.state,\r\n                user,\r\n                menu\r\n            });\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n            res.status(500).json({ error: err, message: 'Error al obtener los datos del usuario.' });\r\n        });\r\n};\r\n\r\nexport default functionQueries;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1564939292380
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\pivg\\\\src\\\\middleware\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\pivg\",\"filename\":\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\pivg\\\\src\\\\middleware\\\\postgresConnection.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\pivg\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\ASUS\\Desktop\\pivg\\src\\middleware",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\ASUS\\Desktop\\pivg",
      "filename": "C:\\Users\\ASUS\\Desktop\\pivg\\src\\middleware\\postgresConnection.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\ASUS\\Desktop\\pivg",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\ASUS\\Desktop\\pivg\\src\\middleware\\postgresConnection.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\ASUS\\Desktop\\pivg\\src\\middleware\\postgresConnection.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\ASUS\\Desktop\\pivg\\src\\middleware",
        "sourceFileName": "postgresConnection.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _bluebird = _interopRequireDefault(require(\"bluebird\"));\n\nvar _pgPromise = _interopRequireDefault(require(\"pg-promise\"));\n\nvar _config = _interopRequireDefault(require(\"../config.json\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar camelizeColumns = function camelizeColumns(data) {\n  var template = data[0];\n\n  for (var prop in template) {\n    var camel = _pgPromise[\"default\"].utils.camelize(prop);\n\n    if (!(camel in template)) {\n      for (var i = 0; i < data.length; i++) {\n        var d = data[i];\n        d[camel] = d[prop];\n        delete d[prop];\n      }\n    }\n  }\n};\n\nvar postgres = (0, _pgPromise[\"default\"])({\n  promiseLib: _bluebird[\"default\"],\n  receive: function receive(data, result, e) {\n    camelizeColumns(data);\n  }\n});\nvar connection = postgres(_config[\"default\"].dbUri);\nvar _default = connection;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBvc3RncmVzQ29ubmVjdGlvbi5qcyJdLCJuYW1lcyI6WyJjYW1lbGl6ZUNvbHVtbnMiLCJkYXRhIiwidGVtcGxhdGUiLCJwcm9wIiwiY2FtZWwiLCJwZ3AiLCJ1dGlscyIsImNhbWVsaXplIiwiaSIsImxlbmd0aCIsImQiLCJwb3N0Z3JlcyIsInByb21pc2VMaWIiLCJQcm9taXNlIiwicmVjZWl2ZSIsInJlc3VsdCIsImUiLCJjb25uZWN0aW9uIiwiY29uZmlnIiwiZGJVcmkiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7OztBQUVBLElBQU1BLGVBQWUsR0FBRyxTQUFsQkEsZUFBa0IsQ0FBQ0MsSUFBRCxFQUFVO0FBQ2hDLE1BQU1DLFFBQVEsR0FBR0QsSUFBSSxDQUFDLENBQUQsQ0FBckI7O0FBRUEsT0FBSyxJQUFJRSxJQUFULElBQWlCRCxRQUFqQixFQUEyQjtBQUN6QixRQUFNRSxLQUFLLEdBQUdDLHNCQUFJQyxLQUFKLENBQVVDLFFBQVYsQ0FBbUJKLElBQW5CLENBQWQ7O0FBRUEsUUFBSSxFQUFFQyxLQUFLLElBQUlGLFFBQVgsQ0FBSixFQUEwQjtBQUN4QixXQUFLLElBQUlNLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLEdBQUdQLElBQUksQ0FBQ1EsTUFBekIsRUFBaUNELENBQUMsRUFBbEMsRUFBc0M7QUFDcEMsWUFBSUUsQ0FBQyxHQUFHVCxJQUFJLENBQUNPLENBQUQsQ0FBWjtBQUNBRSxRQUFBQSxDQUFDLENBQUNOLEtBQUQsQ0FBRCxHQUFXTSxDQUFDLENBQUNQLElBQUQsQ0FBWjtBQUNBLGVBQU9PLENBQUMsQ0FBQ1AsSUFBRCxDQUFSO0FBQ0Q7QUFDRjtBQUNGO0FBQ0YsQ0FkRDs7QUFnQkEsSUFBTVEsUUFBUSxHQUFHLDJCQUFJO0FBQ25CQyxFQUFBQSxVQUFVLEVBQUVDLG9CQURPO0FBRW5CQyxFQUFBQSxPQUFPLEVBQUUsaUJBQUNiLElBQUQsRUFBT2MsTUFBUCxFQUFlQyxDQUFmLEVBQXFCO0FBQUVoQixJQUFBQSxlQUFlLENBQUNDLElBQUQsQ0FBZjtBQUF3QjtBQUZyQyxDQUFKLENBQWpCO0FBSUEsSUFBTWdCLFVBQVUsR0FBR04sUUFBUSxDQUFDTyxtQkFBT0MsS0FBUixDQUEzQjtlQUVlRixVIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcQVNVU1xcRGVza3RvcFxccGl2Z1xcc3JjXFxtaWRkbGV3YXJlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFByb21pc2UgZnJvbSAnYmx1ZWJpcmQnO1xyXG5pbXBvcnQgcGdwIGZyb20gJ3BnLXByb21pc2UnO1xyXG5pbXBvcnQgY29uZmlnIGZyb20gJy4uL2NvbmZpZy5qc29uJztcclxuXHJcbmNvbnN0IGNhbWVsaXplQ29sdW1ucyA9IChkYXRhKSA9PiB7XHJcbiAgY29uc3QgdGVtcGxhdGUgPSBkYXRhWzBdO1xyXG5cclxuICBmb3IgKGxldCBwcm9wIGluIHRlbXBsYXRlKSB7XHJcbiAgICBjb25zdCBjYW1lbCA9IHBncC51dGlscy5jYW1lbGl6ZShwcm9wKTtcclxuXHJcbiAgICBpZiAoIShjYW1lbCBpbiB0ZW1wbGF0ZSkpIHtcclxuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBkYXRhLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgbGV0IGQgPSBkYXRhW2ldO1xyXG4gICAgICAgIGRbY2FtZWxdID0gZFtwcm9wXTtcclxuICAgICAgICBkZWxldGUgZFtwcm9wXTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufTtcclxuXHJcbmNvbnN0IHBvc3RncmVzID0gcGdwKHtcclxuICBwcm9taXNlTGliOiBQcm9taXNlLFxyXG4gIHJlY2VpdmU6IChkYXRhLCByZXN1bHQsIGUpID0+IHsgY2FtZWxpemVDb2x1bW5zKGRhdGEpOyB9XHJcbn0pO1xyXG5jb25zdCBjb25uZWN0aW9uID0gcG9zdGdyZXMoY29uZmlnLmRiVXJpKTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3Rpb247Il19",
    "map": {
      "version": 3,
      "sources": [
        "postgresConnection.js"
      ],
      "names": [
        "camelizeColumns",
        "data",
        "template",
        "prop",
        "camel",
        "pgp",
        "utils",
        "camelize",
        "i",
        "length",
        "d",
        "postgres",
        "promiseLib",
        "Promise",
        "receive",
        "result",
        "e",
        "connection",
        "config",
        "dbUri"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;AAEA,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAACC,IAAD,EAAU;AAChC,MAAMC,QAAQ,GAAGD,IAAI,CAAC,CAAD,CAArB;;AAEA,OAAK,IAAIE,IAAT,IAAiBD,QAAjB,EAA2B;AACzB,QAAME,KAAK,GAAGC,sBAAIC,KAAJ,CAAUC,QAAV,CAAmBJ,IAAnB,CAAd;;AAEA,QAAI,EAAEC,KAAK,IAAIF,QAAX,CAAJ,EAA0B;AACxB,WAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,IAAI,CAACQ,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,YAAIE,CAAC,GAAGT,IAAI,CAACO,CAAD,CAAZ;AACAE,QAAAA,CAAC,CAACN,KAAD,CAAD,GAAWM,CAAC,CAACP,IAAD,CAAZ;AACA,eAAOO,CAAC,CAACP,IAAD,CAAR;AACD;AACF;AACF;AACF,CAdD;;AAgBA,IAAMQ,QAAQ,GAAG,2BAAI;AACnBC,EAAAA,UAAU,EAAEC,oBADO;AAEnBC,EAAAA,OAAO,EAAE,iBAACb,IAAD,EAAOc,MAAP,EAAeC,CAAf,EAAqB;AAAEhB,IAAAA,eAAe,CAACC,IAAD,CAAf;AAAwB;AAFrC,CAAJ,CAAjB;AAIA,IAAMgB,UAAU,GAAGN,QAAQ,CAACO,mBAAOC,KAAR,CAA3B;eAEeF,U",
      "sourceRoot": "C:\\Users\\ASUS\\Desktop\\pivg\\src\\middleware",
      "sourcesContent": [
        "import Promise from 'bluebird';\r\nimport pgp from 'pg-promise';\r\nimport config from '../config.json';\r\n\r\nconst camelizeColumns = (data) => {\r\n  const template = data[0];\r\n\r\n  for (let prop in template) {\r\n    const camel = pgp.utils.camelize(prop);\r\n\r\n    if (!(camel in template)) {\r\n      for (let i = 0; i < data.length; i++) {\r\n        let d = data[i];\r\n        d[camel] = d[prop];\r\n        delete d[prop];\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nconst postgres = pgp({\r\n  promiseLib: Promise,\r\n  receive: (data, result, e) => { camelizeColumns(data); }\r\n});\r\nconst connection = postgres(config.dbUri);\r\n\r\nexport default connection;"
      ]
    },
    "sourceType": "script",
    "mtime": 1563072915594
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\pivg\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\pivg\",\"filename\":\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\pivg\\\\src\\\\models\\\\user.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\pivg\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\ASUS\\Desktop\\pivg\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\ASUS\\Desktop\\pivg",
      "filename": "C:\\Users\\ASUS\\Desktop\\pivg\\src\\models\\user.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\ASUS\\Desktop\\pivg",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\ASUS\\Desktop\\pivg\\src\\models\\user.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\ASUS\\Desktop\\pivg\\src\\models\\user.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\ASUS\\Desktop\\pivg\\src\\models",
        "sourceFileName": "user.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nvar _passportLocalSequelize = _interopRequireDefault(require(\"passport-local-sequelize\"));\n\nvar _config = _interopRequireDefault(require(\"../config.json\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar db = new _sequelize[\"default\"](_config[\"default\"].dbUri, {\n  logging: false\n});\nvar User = db.define('user', {\n  user_id: {\n    type: _sequelize[\"default\"].STRING,\n    primaryKey: true\n  },\n  name: _sequelize[\"default\"].STRING,\n  password_hash: _sequelize[\"default\"].STRING,\n  password_salt: _sequelize[\"default\"].STRING,\n  user_type_id: _sequelize[\"default\"].STRING,\n  email: _sequelize[\"default\"].STRING\n}, {\n  freezeTableName: true,\n  timestamps: false\n});\n\n_passportLocalSequelize[\"default\"].attachToUser(User, {\n  usernameField: 'user_id',\n  hashField: 'password_hash',\n  saltField: 'password_salt'\n});\n\nUser.update = function (id, password, cb) {\n  User.findByUsername(id, function (err, user) {\n    if (err) return cb(err);\n    if (!user) return cb(new Error('El usuario no existe.'));\n    user.setPassword(password, function (err, user) {\n      if (err) return cb(err);\n      user.setActivationKey(function (err, user) {\n        if (err) return cb(err);\n        user['user_id'] = id;\n        user.save().then(function () {\n          cb(null, user);\n        })[\"catch\"](function (err) {\n          cb(err);\n        });\n      });\n    });\n  });\n};\n\nvar _default = User;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuanMiXSwibmFtZXMiOlsiZGIiLCJTZXF1ZWxpemUiLCJjb25maWciLCJkYlVyaSIsImxvZ2dpbmciLCJVc2VyIiwiZGVmaW5lIiwidXNlcl9pZCIsInR5cGUiLCJTVFJJTkciLCJwcmltYXJ5S2V5IiwibmFtZSIsInBhc3N3b3JkX2hhc2giLCJwYXNzd29yZF9zYWx0IiwidXNlcl90eXBlX2lkIiwiZW1haWwiLCJmcmVlemVUYWJsZU5hbWUiLCJ0aW1lc3RhbXBzIiwiUGFzc3BvcnRMb2NhbFNlcXVlbGl6ZSIsImF0dGFjaFRvVXNlciIsInVzZXJuYW1lRmllbGQiLCJoYXNoRmllbGQiLCJzYWx0RmllbGQiLCJ1cGRhdGUiLCJpZCIsInBhc3N3b3JkIiwiY2IiLCJmaW5kQnlVc2VybmFtZSIsImVyciIsInVzZXIiLCJFcnJvciIsInNldFBhc3N3b3JkIiwic2V0QWN0aXZhdGlvbktleSIsInNhdmUiLCJ0aGVuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxFQUFFLEdBQUcsSUFBSUMscUJBQUosQ0FBY0MsbUJBQU9DLEtBQXJCLEVBQTRCO0FBQUVDLEVBQUFBLE9BQU8sRUFBRTtBQUFYLENBQTVCLENBQVg7QUFFQSxJQUFNQyxJQUFJLEdBQUdMLEVBQUUsQ0FBQ00sTUFBSCxDQUNYLE1BRFcsRUFFWDtBQUNFQyxFQUFBQSxPQUFPLEVBQUU7QUFDUEMsSUFBQUEsSUFBSSxFQUFFUCxzQkFBVVEsTUFEVDtBQUVQQyxJQUFBQSxVQUFVLEVBQUU7QUFGTCxHQURYO0FBS0VDLEVBQUFBLElBQUksRUFBRVYsc0JBQVVRLE1BTGxCO0FBTUVHLEVBQUFBLGFBQWEsRUFBRVgsc0JBQVVRLE1BTjNCO0FBT0VJLEVBQUFBLGFBQWEsRUFBRVosc0JBQVVRLE1BUDNCO0FBUUVLLEVBQUFBLFlBQVksRUFBRWIsc0JBQVVRLE1BUjFCO0FBU0VNLEVBQUFBLEtBQUssRUFBRWQsc0JBQVVRO0FBVG5CLENBRlcsRUFhWDtBQUNFTyxFQUFBQSxlQUFlLEVBQUUsSUFEbkI7QUFFRUMsRUFBQUEsVUFBVSxFQUFFO0FBRmQsQ0FiVyxDQUFiOztBQW1CQUMsbUNBQXVCQyxZQUF2QixDQUFvQ2QsSUFBcEMsRUFBMEM7QUFDeENlLEVBQUFBLGFBQWEsRUFBRSxTQUR5QjtBQUV4Q0MsRUFBQUEsU0FBUyxFQUFFLGVBRjZCO0FBR3hDQyxFQUFBQSxTQUFTLEVBQUU7QUFINkIsQ0FBMUM7O0FBTUFqQixJQUFJLENBQUNrQixNQUFMLEdBQWMsVUFBQ0MsRUFBRCxFQUFLQyxRQUFMLEVBQWVDLEVBQWYsRUFBc0I7QUFDbENyQixFQUFBQSxJQUFJLENBQUNzQixjQUFMLENBQW9CSCxFQUFwQixFQUF3QixVQUFDSSxHQUFELEVBQU1DLElBQU4sRUFBZTtBQUNyQyxRQUFJRCxHQUFKLEVBQ0UsT0FBT0YsRUFBRSxDQUFDRSxHQUFELENBQVQ7QUFFRixRQUFJLENBQUNDLElBQUwsRUFDRSxPQUFPSCxFQUFFLENBQUMsSUFBSUksS0FBSixDQUFVLHVCQUFWLENBQUQsQ0FBVDtBQUVGRCxJQUFBQSxJQUFJLENBQUNFLFdBQUwsQ0FBaUJOLFFBQWpCLEVBQTJCLFVBQUNHLEdBQUQsRUFBTUMsSUFBTixFQUFlO0FBQ3hDLFVBQUlELEdBQUosRUFDRSxPQUFPRixFQUFFLENBQUNFLEdBQUQsQ0FBVDtBQUVGQyxNQUFBQSxJQUFJLENBQUNHLGdCQUFMLENBQXNCLFVBQUNKLEdBQUQsRUFBTUMsSUFBTixFQUFlO0FBQ25DLFlBQUlELEdBQUosRUFDRSxPQUFPRixFQUFFLENBQUNFLEdBQUQsQ0FBVDtBQUVGQyxRQUFBQSxJQUFJLENBQUMsU0FBRCxDQUFKLEdBQWtCTCxFQUFsQjtBQUVBSyxRQUFBQSxJQUFJLENBQUNJLElBQUwsR0FDR0MsSUFESCxDQUNRLFlBQU07QUFDVlIsVUFBQUEsRUFBRSxDQUFDLElBQUQsRUFBT0csSUFBUCxDQUFGO0FBQ0QsU0FISCxXQUlTLFVBQUNELEdBQUQsRUFBUztBQUNkRixVQUFBQSxFQUFFLENBQUNFLEdBQUQsQ0FBRjtBQUNELFNBTkg7QUFPRCxPQWJEO0FBY0QsS0FsQkQ7QUFtQkQsR0ExQkQ7QUEyQkQsQ0E1QkQ7O2VBOEJldkIsSSIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEFTVVNcXERlc2t0b3BcXHBpdmdcXHNyY1xcbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFNlcXVlbGl6ZSBmcm9tICdzZXF1ZWxpemUnO1xyXG5pbXBvcnQgUGFzc3BvcnRMb2NhbFNlcXVlbGl6ZSBmcm9tICdwYXNzcG9ydC1sb2NhbC1zZXF1ZWxpemUnO1xyXG5pbXBvcnQgY29uZmlnIGZyb20gJy4uL2NvbmZpZy5qc29uJztcclxuXHJcbmNvbnN0IGRiID0gbmV3IFNlcXVlbGl6ZShjb25maWcuZGJVcmksIHsgbG9nZ2luZzogZmFsc2UgfSk7XHJcblxyXG5jb25zdCBVc2VyID0gZGIuZGVmaW5lKFxyXG4gICd1c2VyJyxcclxuICB7XHJcbiAgICB1c2VyX2lkOiB7XHJcbiAgICAgIHR5cGU6IFNlcXVlbGl6ZS5TVFJJTkcsXHJcbiAgICAgIHByaW1hcnlLZXk6IHRydWVcclxuICAgIH0sXHJcbiAgICBuYW1lOiBTZXF1ZWxpemUuU1RSSU5HLFxyXG4gICAgcGFzc3dvcmRfaGFzaDogU2VxdWVsaXplLlNUUklORyxcclxuICAgIHBhc3N3b3JkX3NhbHQ6IFNlcXVlbGl6ZS5TVFJJTkcsXHJcbiAgICB1c2VyX3R5cGVfaWQ6IFNlcXVlbGl6ZS5TVFJJTkcsXHJcbiAgICBlbWFpbDogU2VxdWVsaXplLlNUUklORyxcclxuICB9LFxyXG4gIHtcclxuICAgIGZyZWV6ZVRhYmxlTmFtZTogdHJ1ZSxcclxuICAgIHRpbWVzdGFtcHM6IGZhbHNlXHJcbiAgfVxyXG4pO1xyXG5cclxuUGFzc3BvcnRMb2NhbFNlcXVlbGl6ZS5hdHRhY2hUb1VzZXIoVXNlciwge1xyXG4gIHVzZXJuYW1lRmllbGQ6ICd1c2VyX2lkJyxcclxuICBoYXNoRmllbGQ6ICdwYXNzd29yZF9oYXNoJyxcclxuICBzYWx0RmllbGQ6ICdwYXNzd29yZF9zYWx0J1xyXG59KTtcclxuXHJcblVzZXIudXBkYXRlID0gKGlkLCBwYXNzd29yZCwgY2IpID0+IHtcclxuICBVc2VyLmZpbmRCeVVzZXJuYW1lKGlkLCAoZXJyLCB1c2VyKSA9PiB7XHJcbiAgICBpZiAoZXJyKVxyXG4gICAgICByZXR1cm4gY2IoZXJyKTtcclxuXHJcbiAgICBpZiAoIXVzZXIpXHJcbiAgICAgIHJldHVybiBjYihuZXcgRXJyb3IoJ0VsIHVzdWFyaW8gbm8gZXhpc3RlLicpKTtcclxuXHJcbiAgICB1c2VyLnNldFBhc3N3b3JkKHBhc3N3b3JkLCAoZXJyLCB1c2VyKSA9PiB7XHJcbiAgICAgIGlmIChlcnIpXHJcbiAgICAgICAgcmV0dXJuIGNiKGVycik7XHJcblxyXG4gICAgICB1c2VyLnNldEFjdGl2YXRpb25LZXkoKGVyciwgdXNlcikgPT4ge1xyXG4gICAgICAgIGlmIChlcnIpXHJcbiAgICAgICAgICByZXR1cm4gY2IoZXJyKTtcclxuXHJcbiAgICAgICAgdXNlclsndXNlcl9pZCddID0gaWQ7XHJcblxyXG4gICAgICAgIHVzZXIuc2F2ZSgpXHJcbiAgICAgICAgICAudGhlbigoKSA9PiB7XHJcbiAgICAgICAgICAgIGNiKG51bGwsIHVzZXIpO1xyXG4gICAgICAgICAgfSlcclxuICAgICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgICAgIGNiKGVycilcclxuICAgICAgICAgIH0pO1xyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gIH0pO1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgVXNlcjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "user.js"
      ],
      "names": [
        "db",
        "Sequelize",
        "config",
        "dbUri",
        "logging",
        "User",
        "define",
        "user_id",
        "type",
        "STRING",
        "primaryKey",
        "name",
        "password_hash",
        "password_salt",
        "user_type_id",
        "email",
        "freezeTableName",
        "timestamps",
        "PassportLocalSequelize",
        "attachToUser",
        "usernameField",
        "hashField",
        "saltField",
        "update",
        "id",
        "password",
        "cb",
        "findByUsername",
        "err",
        "user",
        "Error",
        "setPassword",
        "setActivationKey",
        "save",
        "then"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;AAEA,IAAMA,EAAE,GAAG,IAAIC,qBAAJ,CAAcC,mBAAOC,KAArB,EAA4B;AAAEC,EAAAA,OAAO,EAAE;AAAX,CAA5B,CAAX;AAEA,IAAMC,IAAI,GAAGL,EAAE,CAACM,MAAH,CACX,MADW,EAEX;AACEC,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAEP,sBAAUQ,MADT;AAEPC,IAAAA,UAAU,EAAE;AAFL,GADX;AAKEC,EAAAA,IAAI,EAAEV,sBAAUQ,MALlB;AAMEG,EAAAA,aAAa,EAAEX,sBAAUQ,MAN3B;AAOEI,EAAAA,aAAa,EAAEZ,sBAAUQ,MAP3B;AAQEK,EAAAA,YAAY,EAAEb,sBAAUQ,MAR1B;AASEM,EAAAA,KAAK,EAAEd,sBAAUQ;AATnB,CAFW,EAaX;AACEO,EAAAA,eAAe,EAAE,IADnB;AAEEC,EAAAA,UAAU,EAAE;AAFd,CAbW,CAAb;;AAmBAC,mCAAuBC,YAAvB,CAAoCd,IAApC,EAA0C;AACxCe,EAAAA,aAAa,EAAE,SADyB;AAExCC,EAAAA,SAAS,EAAE,eAF6B;AAGxCC,EAAAA,SAAS,EAAE;AAH6B,CAA1C;;AAMAjB,IAAI,CAACkB,MAAL,GAAc,UAACC,EAAD,EAAKC,QAAL,EAAeC,EAAf,EAAsB;AAClCrB,EAAAA,IAAI,CAACsB,cAAL,CAAoBH,EAApB,EAAwB,UAACI,GAAD,EAAMC,IAAN,EAAe;AACrC,QAAID,GAAJ,EACE,OAAOF,EAAE,CAACE,GAAD,CAAT;AAEF,QAAI,CAACC,IAAL,EACE,OAAOH,EAAE,CAAC,IAAII,KAAJ,CAAU,uBAAV,CAAD,CAAT;AAEFD,IAAAA,IAAI,CAACE,WAAL,CAAiBN,QAAjB,EAA2B,UAACG,GAAD,EAAMC,IAAN,EAAe;AACxC,UAAID,GAAJ,EACE,OAAOF,EAAE,CAACE,GAAD,CAAT;AAEFC,MAAAA,IAAI,CAACG,gBAAL,CAAsB,UAACJ,GAAD,EAAMC,IAAN,EAAe;AACnC,YAAID,GAAJ,EACE,OAAOF,EAAE,CAACE,GAAD,CAAT;AAEFC,QAAAA,IAAI,CAAC,SAAD,CAAJ,GAAkBL,EAAlB;AAEAK,QAAAA,IAAI,CAACI,IAAL,GACGC,IADH,CACQ,YAAM;AACVR,UAAAA,EAAE,CAAC,IAAD,EAAOG,IAAP,CAAF;AACD,SAHH,WAIS,UAACD,GAAD,EAAS;AACdF,UAAAA,EAAE,CAACE,GAAD,CAAF;AACD,SANH;AAOD,OAbD;AAcD,KAlBD;AAmBD,GA1BD;AA2BD,CA5BD;;eA8BevB,I",
      "sourceRoot": "C:\\Users\\ASUS\\Desktop\\pivg\\src\\models",
      "sourcesContent": [
        "import Sequelize from 'sequelize';\r\nimport PassportLocalSequelize from 'passport-local-sequelize';\r\nimport config from '../config.json';\r\n\r\nconst db = new Sequelize(config.dbUri, { logging: false });\r\n\r\nconst User = db.define(\r\n  'user',\r\n  {\r\n    user_id: {\r\n      type: Sequelize.STRING,\r\n      primaryKey: true\r\n    },\r\n    name: Sequelize.STRING,\r\n    password_hash: Sequelize.STRING,\r\n    password_salt: Sequelize.STRING,\r\n    user_type_id: Sequelize.STRING,\r\n    email: Sequelize.STRING,\r\n  },\r\n  {\r\n    freezeTableName: true,\r\n    timestamps: false\r\n  }\r\n);\r\n\r\nPassportLocalSequelize.attachToUser(User, {\r\n  usernameField: 'user_id',\r\n  hashField: 'password_hash',\r\n  saltField: 'password_salt'\r\n});\r\n\r\nUser.update = (id, password, cb) => {\r\n  User.findByUsername(id, (err, user) => {\r\n    if (err)\r\n      return cb(err);\r\n\r\n    if (!user)\r\n      return cb(new Error('El usuario no existe.'));\r\n\r\n    user.setPassword(password, (err, user) => {\r\n      if (err)\r\n        return cb(err);\r\n\r\n      user.setActivationKey((err, user) => {\r\n        if (err)\r\n          return cb(err);\r\n\r\n        user['user_id'] = id;\r\n\r\n        user.save()\r\n          .then(() => {\r\n            cb(null, user);\r\n          })\r\n          .catch((err) => {\r\n            cb(err)\r\n          });\r\n      });\r\n    });\r\n  });\r\n};\r\n\r\nexport default User;"
      ]
    },
    "sourceType": "script",
    "mtime": 1564939130526
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\pivg\\\\src\\\\middleware\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\pivg\",\"filename\":\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\pivg\\\\src\\\\middleware\\\\FormValidator.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\pivg\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\ASUS\\Desktop\\pivg\\src\\middleware",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\ASUS\\Desktop\\pivg",
      "filename": "C:\\Users\\ASUS\\Desktop\\pivg\\src\\middleware\\FormValidator.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\ASUS\\Desktop\\pivg",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\ASUS\\Desktop\\pivg\\src\\middleware\\FormValidator.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\ASUS\\Desktop\\pivg\\src\\middleware\\FormValidator.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\ASUS\\Desktop\\pivg\\src\\middleware",
        "sourceFileName": "FormValidator.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _isEmpty = _interopRequireDefault(require(\"is-empty\"));\n\nvar _rutjs = _interopRequireDefault(require(\"rutjs\"));\n\nvar _validator = _interopRequireDefault(require(\"validator\"));\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar validationFunctions = {};\nvar _default = validationFunctions;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkZvcm1WYWxpZGF0b3IuanMiXSwibmFtZXMiOlsidmFsaWRhdGlvbkZ1bmN0aW9ucyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBRUEsSUFBTUEsbUJBQW1CLEdBQUcsRUFBNUI7ZUFHZUEsbUIiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxBU1VTXFxEZXNrdG9wXFxwaXZnXFxzcmNcXG1pZGRsZXdhcmUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZW1wdHkgZnJvbSAnaXMtZW1wdHknO1xyXG5pbXBvcnQgUnV0IGZyb20gJ3J1dGpzJztcclxuaW1wb3J0IHZhbGlkYXRvciBmcm9tICd2YWxpZGF0b3InO1xyXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCc7XHJcblxyXG5jb25zdCB2YWxpZGF0aW9uRnVuY3Rpb25zID0ge307XHJcblxyXG5cclxuZXhwb3J0IGRlZmF1bHQgdmFsaWRhdGlvbkZ1bmN0aW9uczsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "FormValidator.js"
      ],
      "names": [
        "validationFunctions"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,mBAAmB,GAAG,EAA5B;eAGeA,mB",
      "sourceRoot": "C:\\Users\\ASUS\\Desktop\\pivg\\src\\middleware",
      "sourcesContent": [
        "import empty from 'is-empty';\r\nimport Rut from 'rutjs';\r\nimport validator from 'validator';\r\nimport moment from 'moment';\r\n\r\nconst validationFunctions = {};\r\n\r\n\r\nexport default validationFunctions;"
      ]
    },
    "sourceType": "script",
    "mtime": 1564938906744
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\pivg\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\pivg\",\"filename\":\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\pivg\\\\src\\\\routes\\\\auth.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\pivg\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\ASUS\\Desktop\\pivg\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\ASUS\\Desktop\\pivg",
      "filename": "C:\\Users\\ASUS\\Desktop\\pivg\\src\\routes\\auth.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\ASUS\\Desktop\\pivg",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\ASUS\\Desktop\\pivg\\src\\routes\\auth.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\ASUS\\Desktop\\pivg\\src\\routes\\auth.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\ASUS\\Desktop\\pivg\\src\\routes",
        "sourceFileName": "auth.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _passport = _interopRequireDefault(require(\"passport\"));\n\nvar _user = _interopRequireDefault(require(\"../models/user\"));\n\nvar _postgresAPI = _interopRequireDefault(require(\"../middleware/postgresAPI\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar router = new _express[\"default\"].Router();\nrouter.post('/login', _passport[\"default\"].authenticate('local'), function (req, res) {\n  return res.json({\n    success: true,\n    message: 'Ha logrado ingresar al sistema con éxito!',\n    user: req.user\n  });\n});\nrouter.get('/checkLogin', function (req, res) {\n  res.status(200).json({\n    logged: true\n  });\n});\nrouter.get('/logout', function (req, res) {\n  req.logOut();\n  res.redirect('/login');\n});\nrouter.get('/update', function (req, res) {\n  _user[\"default\"].update('19.207.278-6', 'Eduardyto68', function (err, user) {\n    if (err) {\n      return res.status(400).json({\n        success: false,\n        message: 'Error al actualizar la contraseña.',\n        error: err\n      });\n    } else {\n      return res.status(200).json({\n        success: true,\n        message: 'La contraseña fue actualizada'\n      });\n    }\n  });\n});\nrouter.get('/register', function (req, res) {\n  _user[\"default\"].register({\n    user_id: '19.422.959-3',\n    user_type_id: 'AD',\n    name: 'Francisca Hernández'\n  }, 'proyectopenuelas18', {\n    user_id: '19.207.278-6',\n    user_type_id: 'AD',\n    name: 'Eduardo González',\n    state: true\n  }, 'Eduardyto68', function (err, user) {\n    console.log(err);\n    res.json({\n      user: user,\n      err: err\n    });\n  });\n});\n/* router.get('/register', (req, res) => {\r\n  User.register(\r\n    {user_id: '19.153.962-1', user_type_id: 'AD', name: 'Rosita Hormann'},\r\n    'asd123',\r\n    (err, user) => \r\n    {\r\n      console.log(err);\r\n      res.json({user, err})\r\n    }\r\n  );\r\n}); */\n\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGguanMiXSwibmFtZXMiOlsicm91dGVyIiwiRXhwcmVzcyIsIlJvdXRlciIsInBvc3QiLCJQYXNzcG9ydCIsImF1dGhlbnRpY2F0ZSIsInJlcSIsInJlcyIsImpzb24iLCJzdWNjZXNzIiwibWVzc2FnZSIsInVzZXIiLCJnZXQiLCJzdGF0dXMiLCJsb2dnZWQiLCJsb2dPdXQiLCJyZWRpcmVjdCIsIlVzZXIiLCJ1cGRhdGUiLCJlcnIiLCJlcnJvciIsInJlZ2lzdGVyIiwidXNlcl9pZCIsInVzZXJfdHlwZV9pZCIsIm5hbWUiLCJzdGF0ZSIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUVBLElBQU1BLE1BQU0sR0FBRyxJQUFJQyxvQkFBUUMsTUFBWixFQUFmO0FBRUFGLE1BQU0sQ0FBQ0csSUFBUCxDQUFZLFFBQVosRUFBc0JDLHFCQUFTQyxZQUFULENBQXNCLE9BQXRCLENBQXRCLEVBQXNELFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ2xFLFNBQU9BLEdBQUcsQ0FBQ0MsSUFBSixDQUFTO0FBQ2RDLElBQUFBLE9BQU8sRUFBRSxJQURLO0FBRWRDLElBQUFBLE9BQU8sRUFBRSwyQ0FGSztBQUdkQyxJQUFBQSxJQUFJLEVBQUVMLEdBQUcsQ0FBQ0s7QUFISSxHQUFULENBQVA7QUFLRCxDQU5EO0FBUUFYLE1BQU0sQ0FBQ1ksR0FBUCxDQUFXLGFBQVgsRUFBMEIsVUFBQ04sR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDdENBLEVBQUFBLEdBQUcsQ0FBQ00sTUFBSixDQUFXLEdBQVgsRUFBZ0JMLElBQWhCLENBQXFCO0FBQ25CTSxJQUFBQSxNQUFNLEVBQUU7QUFEVyxHQUFyQjtBQUdELENBSkQ7QUFNQWQsTUFBTSxDQUFDWSxHQUFQLENBQVcsU0FBWCxFQUFzQixVQUFDTixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNsQ0QsRUFBQUEsR0FBRyxDQUFDUyxNQUFKO0FBQ0FSLEVBQUFBLEdBQUcsQ0FBQ1MsUUFBSixDQUFhLFFBQWI7QUFDRCxDQUhEO0FBS0FoQixNQUFNLENBQUNZLEdBQVAsQ0FBVyxTQUFYLEVBQXNCLFVBQUNOLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ2xDVSxtQkFBS0MsTUFBTCxDQUNFLGNBREYsRUFDaUIsYUFEakIsRUFFRSxVQUFDQyxHQUFELEVBQU1SLElBQU4sRUFBZTtBQUNiLFFBQUdRLEdBQUgsRUFBUTtBQUNOLGFBQU9aLEdBQUcsQ0FBQ00sTUFBSixDQUFXLEdBQVgsRUFBZ0JMLElBQWhCLENBQXFCO0FBQzFCQyxRQUFBQSxPQUFPLEVBQUUsS0FEaUI7QUFFMUJDLFFBQUFBLE9BQU8sRUFBRSxvQ0FGaUI7QUFHMUJVLFFBQUFBLEtBQUssRUFBRUQ7QUFIbUIsT0FBckIsQ0FBUDtBQUtELEtBTkQsTUFNTztBQUNMLGFBQU9aLEdBQUcsQ0FBQ00sTUFBSixDQUFXLEdBQVgsRUFBZ0JMLElBQWhCLENBQXFCO0FBQzFCQyxRQUFBQSxPQUFPLEVBQUUsSUFEaUI7QUFFMUJDLFFBQUFBLE9BQU8sRUFBRTtBQUZpQixPQUFyQixDQUFQO0FBSUQ7QUFDRixHQWZIO0FBaUJELENBbEJEO0FBcUJBVixNQUFNLENBQUNZLEdBQVAsQ0FBVyxXQUFYLEVBQXdCLFVBQUNOLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ3BDVSxtQkFBS0ksUUFBTCxDQUNFO0FBQUNDLElBQUFBLE9BQU8sRUFBRSxjQUFWO0FBQTBCQyxJQUFBQSxZQUFZLEVBQUUsSUFBeEM7QUFBOENDLElBQUFBLElBQUksRUFBRTtBQUFwRCxHQURGLEVBRUUsb0JBRkYsRUFHRTtBQUFDRixJQUFBQSxPQUFPLEVBQUUsY0FBVjtBQUEwQkMsSUFBQUEsWUFBWSxFQUFFLElBQXhDO0FBQThDQyxJQUFBQSxJQUFJLEVBQUUsa0JBQXBEO0FBQXdFQyxJQUFBQSxLQUFLLEVBQUU7QUFBL0UsR0FIRixFQUlFLGFBSkYsRUFLRSxVQUFDTixHQUFELEVBQU1SLElBQU4sRUFDQTtBQUNFZSxJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWVIsR0FBWjtBQUNBWixJQUFBQSxHQUFHLENBQUNDLElBQUosQ0FBUztBQUFDRyxNQUFBQSxJQUFJLEVBQUpBLElBQUQ7QUFBT1EsTUFBQUEsR0FBRyxFQUFIQTtBQUFQLEtBQVQ7QUFDRCxHQVRIO0FBV0QsQ0FaRDtBQWVBOzs7Ozs7Ozs7Ozs7ZUFjZW5CLE0iLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxBU1VTXFxEZXNrdG9wXFxwaXZnXFxzcmNcXHJvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBFeHByZXNzIGZyb20gJ2V4cHJlc3MnO1xyXG5pbXBvcnQgUGFzc3BvcnQgZnJvbSAncGFzc3BvcnQnO1xyXG5pbXBvcnQgVXNlciBmcm9tICcuLi9tb2RlbHMvdXNlcic7XHJcbmltcG9ydCBkYiBmcm9tICcuLi9taWRkbGV3YXJlL3Bvc3RncmVzQVBJJztcclxuXHJcbmNvbnN0IHJvdXRlciA9IG5ldyBFeHByZXNzLlJvdXRlcigpO1xyXG5cclxucm91dGVyLnBvc3QoJy9sb2dpbicsIFBhc3Nwb3J0LmF1dGhlbnRpY2F0ZSgnbG9jYWwnKSwgKHJlcSwgcmVzKSA9PiB7XHJcbiAgcmV0dXJuIHJlcy5qc29uKHtcclxuICAgIHN1Y2Nlc3M6IHRydWUsXHJcbiAgICBtZXNzYWdlOiAnSGEgbG9ncmFkbyBpbmdyZXNhciBhbCBzaXN0ZW1hIGNvbiDDqXhpdG8hJyxcclxuICAgIHVzZXI6IHJlcS51c2VyXHJcbiAgfSk7XHJcbn0pO1xyXG5cclxucm91dGVyLmdldCgnL2NoZWNrTG9naW4nLCAocmVxLCByZXMpID0+IHtcclxuICByZXMuc3RhdHVzKDIwMCkuanNvbih7XHJcbiAgICBsb2dnZWQ6IHRydWVcclxuICB9KTtcclxufSk7XHJcblxyXG5yb3V0ZXIuZ2V0KCcvbG9nb3V0JywgKHJlcSwgcmVzKSA9PiB7XHJcbiAgcmVxLmxvZ091dCgpO1xyXG4gIHJlcy5yZWRpcmVjdCgnL2xvZ2luJyk7XHJcbn0pO1xyXG5cclxucm91dGVyLmdldCgnL3VwZGF0ZScsIChyZXEsIHJlcykgPT4ge1xyXG4gIFVzZXIudXBkYXRlKFxyXG4gICAgJzE5LjIwNy4yNzgtNicsJ0VkdWFyZHl0bzY4JyxcclxuICAgIChlcnIsIHVzZXIpID0+IHtcclxuICAgICAgaWYoZXJyKSB7XHJcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHtcclxuICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxyXG4gICAgICAgICAgbWVzc2FnZTogJ0Vycm9yIGFsIGFjdHVhbGl6YXIgbGEgY29udHJhc2XDsWEuJyxcclxuICAgICAgICAgIGVycm9yOiBlcnJcclxuICAgICAgICB9KVxyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbih7XHJcbiAgICAgICAgICBzdWNjZXNzOiB0cnVlLFxyXG4gICAgICAgICAgbWVzc2FnZTogJ0xhIGNvbnRyYXNlw7FhIGZ1ZSBhY3R1YWxpemFkYSdcclxuICAgICAgICB9KVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgKTtcclxufSk7XHJcblxyXG5cclxucm91dGVyLmdldCgnL3JlZ2lzdGVyJywgKHJlcSwgcmVzKSA9PiB7XHJcbiAgVXNlci5yZWdpc3RlcihcclxuICAgIHt1c2VyX2lkOiAnMTkuNDIyLjk1OS0zJywgdXNlcl90eXBlX2lkOiAnQUQnLCBuYW1lOiAnRnJhbmNpc2NhIEhlcm7DoW5kZXonfSxcclxuICAgICdwcm95ZWN0b3BlbnVlbGFzMTgnLFxyXG4gICAge3VzZXJfaWQ6ICcxOS4yMDcuMjc4LTYnLCB1c2VyX3R5cGVfaWQ6ICdBRCcsIG5hbWU6ICdFZHVhcmRvIEdvbnrDoWxleicsIHN0YXRlOiB0cnVlfSxcclxuICAgICdFZHVhcmR5dG82OCcsXHJcbiAgICAoZXJyLCB1c2VyKSA9PiBcclxuICAgIHtcclxuICAgICAgY29uc29sZS5sb2coZXJyKTtcclxuICAgICAgcmVzLmpzb24oe3VzZXIsIGVycn0pXHJcbiAgICB9XHJcbiAgKTtcclxufSk7XHJcblxyXG5cclxuLyogcm91dGVyLmdldCgnL3JlZ2lzdGVyJywgKHJlcSwgcmVzKSA9PiB7XHJcbiAgVXNlci5yZWdpc3RlcihcclxuICAgIHt1c2VyX2lkOiAnMTkuMTUzLjk2Mi0xJywgdXNlcl90eXBlX2lkOiAnQUQnLCBuYW1lOiAnUm9zaXRhIEhvcm1hbm4nfSxcclxuICAgICdhc2QxMjMnLFxyXG4gICAgKGVyciwgdXNlcikgPT4gXHJcbiAgICB7XHJcbiAgICAgIGNvbnNvbGUubG9nKGVycik7XHJcbiAgICAgIHJlcy5qc29uKHt1c2VyLCBlcnJ9KVxyXG4gICAgfVxyXG4gICk7XHJcbn0pOyAqL1xyXG5cclxuXHJcblxyXG5leHBvcnQgZGVmYXVsdCByb3V0ZXI7Il19",
    "map": {
      "version": 3,
      "sources": [
        "auth.js"
      ],
      "names": [
        "router",
        "Express",
        "Router",
        "post",
        "Passport",
        "authenticate",
        "req",
        "res",
        "json",
        "success",
        "message",
        "user",
        "get",
        "status",
        "logged",
        "logOut",
        "redirect",
        "User",
        "update",
        "err",
        "error",
        "register",
        "user_id",
        "user_type_id",
        "name",
        "state",
        "console",
        "log"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,MAAM,GAAG,IAAIC,oBAAQC,MAAZ,EAAf;AAEAF,MAAM,CAACG,IAAP,CAAY,QAAZ,EAAsBC,qBAASC,YAAT,CAAsB,OAAtB,CAAtB,EAAsD,UAACC,GAAD,EAAMC,GAAN,EAAc;AAClE,SAAOA,GAAG,CAACC,IAAJ,CAAS;AACdC,IAAAA,OAAO,EAAE,IADK;AAEdC,IAAAA,OAAO,EAAE,2CAFK;AAGdC,IAAAA,IAAI,EAAEL,GAAG,CAACK;AAHI,GAAT,CAAP;AAKD,CAND;AAQAX,MAAM,CAACY,GAAP,CAAW,aAAX,EAA0B,UAACN,GAAD,EAAMC,GAAN,EAAc;AACtCA,EAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBL,IAAhB,CAAqB;AACnBM,IAAAA,MAAM,EAAE;AADW,GAArB;AAGD,CAJD;AAMAd,MAAM,CAACY,GAAP,CAAW,SAAX,EAAsB,UAACN,GAAD,EAAMC,GAAN,EAAc;AAClCD,EAAAA,GAAG,CAACS,MAAJ;AACAR,EAAAA,GAAG,CAACS,QAAJ,CAAa,QAAb;AACD,CAHD;AAKAhB,MAAM,CAACY,GAAP,CAAW,SAAX,EAAsB,UAACN,GAAD,EAAMC,GAAN,EAAc;AAClCU,mBAAKC,MAAL,CACE,cADF,EACiB,aADjB,EAEE,UAACC,GAAD,EAAMR,IAAN,EAAe;AACb,QAAGQ,GAAH,EAAQ;AACN,aAAOZ,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBL,IAAhB,CAAqB;AAC1BC,QAAAA,OAAO,EAAE,KADiB;AAE1BC,QAAAA,OAAO,EAAE,oCAFiB;AAG1BU,QAAAA,KAAK,EAAED;AAHmB,OAArB,CAAP;AAKD,KAND,MAMO;AACL,aAAOZ,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBL,IAAhB,CAAqB;AAC1BC,QAAAA,OAAO,EAAE,IADiB;AAE1BC,QAAAA,OAAO,EAAE;AAFiB,OAArB,CAAP;AAID;AACF,GAfH;AAiBD,CAlBD;AAqBAV,MAAM,CAACY,GAAP,CAAW,WAAX,EAAwB,UAACN,GAAD,EAAMC,GAAN,EAAc;AACpCU,mBAAKI,QAAL,CACE;AAACC,IAAAA,OAAO,EAAE,cAAV;AAA0BC,IAAAA,YAAY,EAAE,IAAxC;AAA8CC,IAAAA,IAAI,EAAE;AAApD,GADF,EAEE,oBAFF,EAGE;AAACF,IAAAA,OAAO,EAAE,cAAV;AAA0BC,IAAAA,YAAY,EAAE,IAAxC;AAA8CC,IAAAA,IAAI,EAAE,kBAApD;AAAwEC,IAAAA,KAAK,EAAE;AAA/E,GAHF,EAIE,aAJF,EAKE,UAACN,GAAD,EAAMR,IAAN,EACA;AACEe,IAAAA,OAAO,CAACC,GAAR,CAAYR,GAAZ;AACAZ,IAAAA,GAAG,CAACC,IAAJ,CAAS;AAACG,MAAAA,IAAI,EAAJA,IAAD;AAAOQ,MAAAA,GAAG,EAAHA;AAAP,KAAT;AACD,GATH;AAWD,CAZD;AAeA;;;;;;;;;;;;eAcenB,M",
      "sourceRoot": "C:\\Users\\ASUS\\Desktop\\pivg\\src\\routes",
      "sourcesContent": [
        "import Express from 'express';\r\nimport Passport from 'passport';\r\nimport User from '../models/user';\r\nimport db from '../middleware/postgresAPI';\r\n\r\nconst router = new Express.Router();\r\n\r\nrouter.post('/login', Passport.authenticate('local'), (req, res) => {\r\n  return res.json({\r\n    success: true,\r\n    message: 'Ha logrado ingresar al sistema con éxito!',\r\n    user: req.user\r\n  });\r\n});\r\n\r\nrouter.get('/checkLogin', (req, res) => {\r\n  res.status(200).json({\r\n    logged: true\r\n  });\r\n});\r\n\r\nrouter.get('/logout', (req, res) => {\r\n  req.logOut();\r\n  res.redirect('/login');\r\n});\r\n\r\nrouter.get('/update', (req, res) => {\r\n  User.update(\r\n    '19.207.278-6','Eduardyto68',\r\n    (err, user) => {\r\n      if(err) {\r\n        return res.status(400).json({\r\n          success: false,\r\n          message: 'Error al actualizar la contraseña.',\r\n          error: err\r\n        })\r\n      } else {\r\n        return res.status(200).json({\r\n          success: true,\r\n          message: 'La contraseña fue actualizada'\r\n        })\r\n      }\r\n    }\r\n  );\r\n});\r\n\r\n\r\nrouter.get('/register', (req, res) => {\r\n  User.register(\r\n    {user_id: '19.422.959-3', user_type_id: 'AD', name: 'Francisca Hernández'},\r\n    'proyectopenuelas18',\r\n    {user_id: '19.207.278-6', user_type_id: 'AD', name: 'Eduardo González', state: true},\r\n    'Eduardyto68',\r\n    (err, user) => \r\n    {\r\n      console.log(err);\r\n      res.json({user, err})\r\n    }\r\n  );\r\n});\r\n\r\n\r\n/* router.get('/register', (req, res) => {\r\n  User.register(\r\n    {user_id: '19.153.962-1', user_type_id: 'AD', name: 'Rosita Hormann'},\r\n    'asd123',\r\n    (err, user) => \r\n    {\r\n      console.log(err);\r\n      res.json({user, err})\r\n    }\r\n  );\r\n}); */\r\n\r\n\r\n\r\nexport default router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1564939247422
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\ASUS\\\\Documents\\\\ucn\\\\Sistemas NodeJs Base\\\\Base Html + Node js\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\ASUS\\\\Documents\\\\ucn\\\\Sistemas NodeJs Base\\\\Base Html + Node js\",\"filename\":\"C:\\\\Users\\\\ASUS\\\\Documents\\\\ucn\\\\Sistemas NodeJs Base\\\\Base Html + Node js\\\\src\\\\server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\ASUS\\\\Documents\\\\ucn\\\\Sistemas NodeJs Base\\\\Base Html + Node js\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\ASUS\\Documents\\ucn\\Sistemas NodeJs Base\\Base Html + Node js\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\ASUS\\Documents\\ucn\\Sistemas NodeJs Base\\Base Html + Node js",
      "filename": "C:\\Users\\ASUS\\Documents\\ucn\\Sistemas NodeJs Base\\Base Html + Node js\\src\\server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\ASUS\\Documents\\ucn\\Sistemas NodeJs Base\\Base Html + Node js",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\ASUS\\Documents\\ucn\\Sistemas NodeJs Base\\Base Html + Node js\\src\\server.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\ASUS\\Documents\\ucn\\Sistemas NodeJs Base\\Base Html + Node js\\src\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\ASUS\\Documents\\ucn\\Sistemas NodeJs Base\\Base Html + Node js\\src",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _config = _interopRequireDefault(require(\"./config.json\"));\n\nvar _api = _interopRequireDefault(require(\"./routes/api\"));\n\nvar _pg = _interopRequireDefault(require(\"pg\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _methodOverride = _interopRequireDefault(require(\"method-override\"));\n\nvar _connectPgSimple = _interopRequireDefault(require(\"connect-pg-simple\"));\n\nvar _passport = _interopRequireDefault(require(\"passport\"));\n\nvar _expressSession = _interopRequireDefault(require(\"express-session\"));\n\nvar _cookieParser = _interopRequireDefault(require(\"cookie-parser\"));\n\nvar _auth = _interopRequireDefault(require(\"./routes/auth\"));\n\nvar _user = _interopRequireDefault(require(\"./models/user\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar app = (0, _express[\"default\"])();\napp.set('view engine', 'ejs');\napp.set('views', _path[\"default\"].join(__dirname, 'views'));\napp.use(_express[\"default\"][\"static\"](_path[\"default\"].join(__dirname, 'static')));\napp.use((0, _methodOverride[\"default\"])());\napp.use(_bodyParser[\"default\"].urlencoded({\n  extended: false\n}));\nvar pgSession = (0, _connectPgSimple[\"default\"])(_expressSession[\"default\"]);\napp.use((0, _cookieParser[\"default\"])());\napp.use((0, _expressSession[\"default\"])({\n  store: new pgSession({\n    pg: _pg[\"default\"],\n    conString: _config[\"default\"].dbUri,\n    tableName: 'session',\n    schemaName: 'public'\n  }),\n  secret: _config[\"default\"].secret,\n  resave: false,\n  saveUninitialized: false,\n  cookie: {\n    httpOnly: true,\n    secure: false\n  }\n}));\napp.use(_passport[\"default\"].initialize());\napp.use(_passport[\"default\"].session());\n\n_passport[\"default\"].use(_user[\"default\"].createStrategy());\n\n_passport[\"default\"].serializeUser(_user[\"default\"].serializeUser());\n\n_passport[\"default\"].deserializeUser(_user[\"default\"].deserializeUser());\n\napp.get('/', function (req, res) {\n  res.send('Hello World!');\n});\n\nvar isAuthenticated = function isAuthenticated(req, res, next) {\n  if (req.isAuthenticated()) {\n    return next();\n  }\n\n  res.status(401).json({\n    error: 'Unauthorized access',\n    message: 'User must be logged to access the specified URI'\n  });\n};\n\napp.use(\"/auth\", _auth[\"default\"]);\napp.use(\"/api\", isAuthenticated, _api[\"default\"]);\nvar port = 3000;\nif (process.env.NODE_PORT) port = process.env.NODE_PORT;\napp.listen(port, function () {\n  console.log(\"El servidor est\\xE1 escuchando en el puerto \".concat(port));\n}); // escuchar el puerto\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJhcHAiLCJzZXQiLCJwYXRoIiwiam9pbiIsIl9fZGlybmFtZSIsInVzZSIsImV4cHJlc3MiLCJCb2R5UGFyc2VyIiwidXJsZW5jb2RlZCIsImV4dGVuZGVkIiwicGdTZXNzaW9uIiwiU2Vzc2lvbiIsInN0b3JlIiwicGciLCJQZyIsImNvblN0cmluZyIsImNvbmZpZyIsImRiVXJpIiwidGFibGVOYW1lIiwic2NoZW1hTmFtZSIsInNlY3JldCIsInJlc2F2ZSIsInNhdmVVbmluaXRpYWxpemVkIiwiY29va2llIiwiaHR0cE9ubHkiLCJzZWN1cmUiLCJQYXNzcG9ydCIsImluaXRpYWxpemUiLCJzZXNzaW9uIiwidXNlciIsImNyZWF0ZVN0cmF0ZWd5Iiwic2VyaWFsaXplVXNlciIsImRlc2VyaWFsaXplVXNlciIsImdldCIsInJlcSIsInJlcyIsInNlbmQiLCJpc0F1dGhlbnRpY2F0ZWQiLCJuZXh0Iiwic3RhdHVzIiwianNvbiIsImVycm9yIiwibWVzc2FnZSIsImF1dGhSb3V0ZXMiLCJhcGlSb3V0ZXMiLCJwb3J0IiwicHJvY2VzcyIsImVudiIsIk5PREVfUE9SVCIsImxpc3RlbiIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxHQUFHLEdBQUcsMEJBQVo7QUFFQUEsR0FBRyxDQUFDQyxHQUFKLENBQVEsYUFBUixFQUF1QixLQUF2QjtBQUNBRCxHQUFHLENBQUNDLEdBQUosQ0FBUSxPQUFSLEVBQWlCQyxpQkFBS0MsSUFBTCxDQUFVQyxTQUFWLEVBQXFCLE9BQXJCLENBQWpCO0FBQ0FKLEdBQUcsQ0FBQ0ssR0FBSixDQUFRQyw4QkFBZUosaUJBQUtDLElBQUwsQ0FBVUMsU0FBVixFQUFxQixRQUFyQixDQUFmLENBQVI7QUFDQUosR0FBRyxDQUFDSyxHQUFKLENBQVEsaUNBQVI7QUFDQUwsR0FBRyxDQUFDSyxHQUFKLENBQVFFLHVCQUFXQyxVQUFYLENBQXNCO0FBQUVDLEVBQUFBLFFBQVEsRUFBRTtBQUFaLENBQXRCLENBQVI7QUFDQSxJQUFNQyxTQUFTLEdBQUcsaUNBQVVDLDBCQUFWLENBQWxCO0FBQ0FYLEdBQUcsQ0FBQ0ssR0FBSixDQUFRLCtCQUFSO0FBQ0FMLEdBQUcsQ0FBQ0ssR0FBSixDQUFRLGdDQUFRO0FBQ2RPLEVBQUFBLEtBQUssRUFBRSxJQUFJRixTQUFKLENBQWM7QUFDbkJHLElBQUFBLEVBQUUsRUFBRUMsY0FEZTtBQUVuQkMsSUFBQUEsU0FBUyxFQUFFQyxtQkFBT0MsS0FGQztBQUduQkMsSUFBQUEsU0FBUyxFQUFFLFNBSFE7QUFJbkJDLElBQUFBLFVBQVUsRUFBRTtBQUpPLEdBQWQsQ0FETztBQU9kQyxFQUFBQSxNQUFNLEVBQUVKLG1CQUFPSSxNQVBEO0FBUWRDLEVBQUFBLE1BQU0sRUFBRSxLQVJNO0FBU2RDLEVBQUFBLGlCQUFpQixFQUFFLEtBVEw7QUFVZEMsRUFBQUEsTUFBTSxFQUFFO0FBQUNDLElBQUFBLFFBQVEsRUFBRSxJQUFYO0FBQWlCQyxJQUFBQSxNQUFNLEVBQUU7QUFBekI7QUFWTSxDQUFSLENBQVI7QUFhQXpCLEdBQUcsQ0FBQ0ssR0FBSixDQUFRcUIscUJBQVNDLFVBQVQsRUFBUjtBQUNBM0IsR0FBRyxDQUFDSyxHQUFKLENBQVFxQixxQkFBU0UsT0FBVCxFQUFSOztBQUVBRixxQkFBU3JCLEdBQVQsQ0FBYXdCLGlCQUFLQyxjQUFMLEVBQWI7O0FBQ0FKLHFCQUFTSyxhQUFULENBQXVCRixpQkFBS0UsYUFBTCxFQUF2Qjs7QUFDQUwscUJBQVNNLGVBQVQsQ0FBeUJILGlCQUFLRyxlQUFMLEVBQXpCOztBQUVBaEMsR0FBRyxDQUFDaUMsR0FBSixDQUFRLEdBQVIsRUFBWSxVQUFDQyxHQUFELEVBQUtDLEdBQUwsRUFBVztBQUNuQkEsRUFBQUEsR0FBRyxDQUFDQyxJQUFKLENBQVMsY0FBVDtBQUNILENBRkQ7O0FBSUEsSUFBTUMsZUFBZSxHQUFHLFNBQWxCQSxlQUFrQixDQUFDSCxHQUFELEVBQU1DLEdBQU4sRUFBV0csSUFBWCxFQUFvQjtBQUN4QyxNQUFJSixHQUFHLENBQUNHLGVBQUosRUFBSixFQUEyQjtBQUN6QixXQUFPQyxJQUFJLEVBQVg7QUFDRDs7QUFDREgsRUFBQUEsR0FBRyxDQUFDSSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDbkJDLElBQUFBLEtBQUssRUFBRSxxQkFEWTtBQUVuQkMsSUFBQUEsT0FBTyxFQUFFO0FBRlUsR0FBckI7QUFJSCxDQVJEOztBQVVBMUMsR0FBRyxDQUFDSyxHQUFKLFVBQWlCc0MsZ0JBQWpCO0FBQ0EzQyxHQUFHLENBQUNLLEdBQUosU0FBZ0JnQyxlQUFoQixFQUFrQ08sZUFBbEM7QUFFQSxJQUFJQyxJQUFJLEdBQUcsSUFBWDtBQUVBLElBQUlDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxTQUFoQixFQUEyQkgsSUFBSSxHQUFHQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsU0FBbkI7QUFFM0JoRCxHQUFHLENBQUNpRCxNQUFKLENBQVdKLElBQVgsRUFBaUIsWUFBTTtBQUNuQkssRUFBQUEsT0FBTyxDQUFDQyxHQUFSLHVEQUF3RE4sSUFBeEQ7QUFDSCxDQUZELEUsQ0FFSSIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEFTVVNcXERvY3VtZW50c1xcdWNuXFxTaXN0ZW1hcyBOb2RlSnMgQmFzZVxcQmFzZSBIdG1sICsgTm9kZSBqc1xcc3JjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XHJcbmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnO1xyXG5pbXBvcnQgY29uZmlnIGZyb20gJy4vY29uZmlnLmpzb24nO1xyXG5pbXBvcnQgYXBpUm91dGVzIGZyb20gJy4vcm91dGVzL2FwaSc7XHJcbmltcG9ydCBQZyBmcm9tICdwZyc7XHJcbmltcG9ydCBCb2R5UGFyc2VyIGZyb20gJ2JvZHktcGFyc2VyJztcclxuaW1wb3J0IE1ldGhvZE92ZXJyaWRlIGZyb20gJ21ldGhvZC1vdmVycmlkZSc7XHJcbmltcG9ydCBDb25uZWN0UGcgZnJvbSAnY29ubmVjdC1wZy1zaW1wbGUnO1xyXG5pbXBvcnQgUGFzc3BvcnQgZnJvbSAncGFzc3BvcnQnO1xyXG5pbXBvcnQgU2Vzc2lvbiBmcm9tICdleHByZXNzLXNlc3Npb24nO1xyXG5pbXBvcnQgQ29va2llUGFyc2VyIGZyb20gJ2Nvb2tpZS1wYXJzZXInO1xyXG5pbXBvcnQgYXV0aFJvdXRlcyBmcm9tICcuL3JvdXRlcy9hdXRoJztcclxuaW1wb3J0IHVzZXIgZnJvbSAnLi9tb2RlbHMvdXNlcic7XHJcblxyXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XHJcblxyXG5hcHAuc2V0KCd2aWV3IGVuZ2luZScsICdlanMnKTtcclxuYXBwLnNldCgndmlld3MnLCBwYXRoLmpvaW4oX19kaXJuYW1lLCAndmlld3MnKSk7XHJcbmFwcC51c2UoZXhwcmVzcy5zdGF0aWMocGF0aC5qb2luKF9fZGlybmFtZSwgJ3N0YXRpYycpKSk7XHJcbmFwcC51c2UoTWV0aG9kT3ZlcnJpZGUoKSk7XHJcbmFwcC51c2UoQm9keVBhcnNlci51cmxlbmNvZGVkKHsgZXh0ZW5kZWQ6IGZhbHNlIH0pKTtcclxuY29uc3QgcGdTZXNzaW9uID0gQ29ubmVjdFBnKFNlc3Npb24pO1xyXG5hcHAudXNlKENvb2tpZVBhcnNlcigpKTtcclxuYXBwLnVzZShTZXNzaW9uKHtcclxuICBzdG9yZTogbmV3IHBnU2Vzc2lvbih7XHJcbiAgICBwZzogUGcsXHJcbiAgICBjb25TdHJpbmc6IGNvbmZpZy5kYlVyaSxcclxuICAgIHRhYmxlTmFtZTogJ3Nlc3Npb24nLFxyXG4gICAgc2NoZW1hTmFtZTogJ3B1YmxpYycsXHJcbiAgfSksXHJcbiAgc2VjcmV0OiBjb25maWcuc2VjcmV0LFxyXG4gIHJlc2F2ZTogZmFsc2UsXHJcbiAgc2F2ZVVuaW5pdGlhbGl6ZWQ6IGZhbHNlLFxyXG4gIGNvb2tpZToge2h0dHBPbmx5OiB0cnVlLCBzZWN1cmU6IGZhbHNlfVxyXG59KSk7XHJcblxyXG5hcHAudXNlKFBhc3Nwb3J0LmluaXRpYWxpemUoKSk7XHJcbmFwcC51c2UoUGFzc3BvcnQuc2Vzc2lvbigpKTtcclxuXHJcblBhc3Nwb3J0LnVzZSh1c2VyLmNyZWF0ZVN0cmF0ZWd5KCkpO1xyXG5QYXNzcG9ydC5zZXJpYWxpemVVc2VyKHVzZXIuc2VyaWFsaXplVXNlcigpKTtcclxuUGFzc3BvcnQuZGVzZXJpYWxpemVVc2VyKHVzZXIuZGVzZXJpYWxpemVVc2VyKCkpO1xyXG5cclxuYXBwLmdldCgnLycsKHJlcSxyZXMpPT57XHJcbiAgICByZXMuc2VuZCgnSGVsbG8gV29ybGQhJyk7XHJcbn0pXHJcblxyXG5jb25zdCBpc0F1dGhlbnRpY2F0ZWQgPSAocmVxLCByZXMsIG5leHQpID0+IHtcclxuICAgIGlmIChyZXEuaXNBdXRoZW50aWNhdGVkKCkpIHtcclxuICAgICAgcmV0dXJuIG5leHQoKTtcclxuICAgIH1cclxuICAgIHJlcy5zdGF0dXMoNDAxKS5qc29uKHtcclxuICAgICAgZXJyb3I6ICdVbmF1dGhvcml6ZWQgYWNjZXNzJyxcclxuICAgICAgbWVzc2FnZTogJ1VzZXIgbXVzdCBiZSBsb2dnZWQgdG8gYWNjZXNzIHRoZSBzcGVjaWZpZWQgVVJJJ1xyXG4gICAgfSk7XHJcbn07XHJcblxyXG5hcHAudXNlKGAvYXV0aGAsIGF1dGhSb3V0ZXMpO1xyXG5hcHAudXNlKGAvYXBpYCwgaXNBdXRoZW50aWNhdGVkICwgYXBpUm91dGVzKTsgXHJcblxyXG5sZXQgcG9ydCA9IDMwMDA7XHJcblxyXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9QT1JUKSBwb3J0ID0gcHJvY2Vzcy5lbnYuTk9ERV9QT1JUO1xyXG5cclxuYXBwLmxpc3Rlbihwb3J0LCAoKSA9PiB7XHJcbiAgICBjb25zb2xlLmxvZyhgRWwgc2Vydmlkb3IgZXN0w6EgZXNjdWNoYW5kbyBlbiBlbCBwdWVydG8gJHtwb3J0fWApO1xyXG59KTsgLy8gZXNjdWNoYXIgZWwgcHVlcnRvIl19",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "app",
        "set",
        "path",
        "join",
        "__dirname",
        "use",
        "express",
        "BodyParser",
        "urlencoded",
        "extended",
        "pgSession",
        "Session",
        "store",
        "pg",
        "Pg",
        "conString",
        "config",
        "dbUri",
        "tableName",
        "schemaName",
        "secret",
        "resave",
        "saveUninitialized",
        "cookie",
        "httpOnly",
        "secure",
        "Passport",
        "initialize",
        "session",
        "user",
        "createStrategy",
        "serializeUser",
        "deserializeUser",
        "get",
        "req",
        "res",
        "send",
        "isAuthenticated",
        "next",
        "status",
        "json",
        "error",
        "message",
        "authRoutes",
        "apiRoutes",
        "port",
        "process",
        "env",
        "NODE_PORT",
        "listen",
        "console",
        "log"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,GAAG,GAAG,0BAAZ;AAEAA,GAAG,CAACC,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;AACAD,GAAG,CAACC,GAAJ,CAAQ,OAAR,EAAiBC,iBAAKC,IAAL,CAAUC,SAAV,EAAqB,OAArB,CAAjB;AACAJ,GAAG,CAACK,GAAJ,CAAQC,8BAAeJ,iBAAKC,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAR;AACAJ,GAAG,CAACK,GAAJ,CAAQ,iCAAR;AACAL,GAAG,CAACK,GAAJ,CAAQE,uBAAWC,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AACA,IAAMC,SAAS,GAAG,iCAAUC,0BAAV,CAAlB;AACAX,GAAG,CAACK,GAAJ,CAAQ,+BAAR;AACAL,GAAG,CAACK,GAAJ,CAAQ,gCAAQ;AACdO,EAAAA,KAAK,EAAE,IAAIF,SAAJ,CAAc;AACnBG,IAAAA,EAAE,EAAEC,cADe;AAEnBC,IAAAA,SAAS,EAAEC,mBAAOC,KAFC;AAGnBC,IAAAA,SAAS,EAAE,SAHQ;AAInBC,IAAAA,UAAU,EAAE;AAJO,GAAd,CADO;AAOdC,EAAAA,MAAM,EAAEJ,mBAAOI,MAPD;AAQdC,EAAAA,MAAM,EAAE,KARM;AASdC,EAAAA,iBAAiB,EAAE,KATL;AAUdC,EAAAA,MAAM,EAAE;AAACC,IAAAA,QAAQ,EAAE,IAAX;AAAiBC,IAAAA,MAAM,EAAE;AAAzB;AAVM,CAAR,CAAR;AAaAzB,GAAG,CAACK,GAAJ,CAAQqB,qBAASC,UAAT,EAAR;AACA3B,GAAG,CAACK,GAAJ,CAAQqB,qBAASE,OAAT,EAAR;;AAEAF,qBAASrB,GAAT,CAAawB,iBAAKC,cAAL,EAAb;;AACAJ,qBAASK,aAAT,CAAuBF,iBAAKE,aAAL,EAAvB;;AACAL,qBAASM,eAAT,CAAyBH,iBAAKG,eAAL,EAAzB;;AAEAhC,GAAG,CAACiC,GAAJ,CAAQ,GAAR,EAAY,UAACC,GAAD,EAAKC,GAAL,EAAW;AACnBA,EAAAA,GAAG,CAACC,IAAJ,CAAS,cAAT;AACH,CAFD;;AAIA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACH,GAAD,EAAMC,GAAN,EAAWG,IAAX,EAAoB;AACxC,MAAIJ,GAAG,CAACG,eAAJ,EAAJ,EAA2B;AACzB,WAAOC,IAAI,EAAX;AACD;;AACDH,EAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,IAAAA,KAAK,EAAE,qBADY;AAEnBC,IAAAA,OAAO,EAAE;AAFU,GAArB;AAIH,CARD;;AAUA1C,GAAG,CAACK,GAAJ,UAAiBsC,gBAAjB;AACA3C,GAAG,CAACK,GAAJ,SAAgBgC,eAAhB,EAAkCO,eAAlC;AAEA,IAAIC,IAAI,GAAG,IAAX;AAEA,IAAIC,OAAO,CAACC,GAAR,CAAYC,SAAhB,EAA2BH,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,SAAnB;AAE3BhD,GAAG,CAACiD,MAAJ,CAAWJ,IAAX,EAAiB,YAAM;AACnBK,EAAAA,OAAO,CAACC,GAAR,uDAAwDN,IAAxD;AACH,CAFD,E,CAEI",
      "sourceRoot": "C:\\Users\\ASUS\\Documents\\ucn\\Sistemas NodeJs Base\\Base Html + Node js\\src",
      "sourcesContent": [
        "import express from 'express';\r\nimport path from 'path';\r\nimport config from './config.json';\r\nimport apiRoutes from './routes/api';\r\nimport Pg from 'pg';\r\nimport BodyParser from 'body-parser';\r\nimport MethodOverride from 'method-override';\r\nimport ConnectPg from 'connect-pg-simple';\r\nimport Passport from 'passport';\r\nimport Session from 'express-session';\r\nimport CookieParser from 'cookie-parser';\r\nimport authRoutes from './routes/auth';\r\nimport user from './models/user';\r\n\r\nconst app = express();\r\n\r\napp.set('view engine', 'ejs');\r\napp.set('views', path.join(__dirname, 'views'));\r\napp.use(express.static(path.join(__dirname, 'static')));\r\napp.use(MethodOverride());\r\napp.use(BodyParser.urlencoded({ extended: false }));\r\nconst pgSession = ConnectPg(Session);\r\napp.use(CookieParser());\r\napp.use(Session({\r\n  store: new pgSession({\r\n    pg: Pg,\r\n    conString: config.dbUri,\r\n    tableName: 'session',\r\n    schemaName: 'public',\r\n  }),\r\n  secret: config.secret,\r\n  resave: false,\r\n  saveUninitialized: false,\r\n  cookie: {httpOnly: true, secure: false}\r\n}));\r\n\r\napp.use(Passport.initialize());\r\napp.use(Passport.session());\r\n\r\nPassport.use(user.createStrategy());\r\nPassport.serializeUser(user.serializeUser());\r\nPassport.deserializeUser(user.deserializeUser());\r\n\r\napp.get('/',(req,res)=>{\r\n    res.send('Hello World!');\r\n})\r\n\r\nconst isAuthenticated = (req, res, next) => {\r\n    if (req.isAuthenticated()) {\r\n      return next();\r\n    }\r\n    res.status(401).json({\r\n      error: 'Unauthorized access',\r\n      message: 'User must be logged to access the specified URI'\r\n    });\r\n};\r\n\r\napp.use(`/auth`, authRoutes);\r\napp.use(`/api`, isAuthenticated , apiRoutes); \r\n\r\nlet port = 3000;\r\n\r\nif (process.env.NODE_PORT) port = process.env.NODE_PORT;\r\n\r\napp.listen(port, () => {\r\n    console.log(`El servidor está escuchando en el puerto ${port}`);\r\n}); // escuchar el puerto"
      ]
    },
    "sourceType": "script",
    "mtime": 1564939359310
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\ASUS\\\\Documents\\\\ucn\\\\Sistemas NodeJs Base\\\\Base Html + Node js\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\ASUS\\\\Documents\\\\ucn\\\\Sistemas NodeJs Base\\\\Base Html + Node js\",\"filename\":\"C:\\\\Users\\\\ASUS\\\\Documents\\\\ucn\\\\Sistemas NodeJs Base\\\\Base Html + Node js\\\\src\\\\routes\\\\api.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\ASUS\\\\Documents\\\\ucn\\\\Sistemas NodeJs Base\\\\Base Html + Node js\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\ASUS\\Documents\\ucn\\Sistemas NodeJs Base\\Base Html + Node js\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\ASUS\\Documents\\ucn\\Sistemas NodeJs Base\\Base Html + Node js",
      "filename": "C:\\Users\\ASUS\\Documents\\ucn\\Sistemas NodeJs Base\\Base Html + Node js\\src\\routes\\api.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\ASUS\\Documents\\ucn\\Sistemas NodeJs Base\\Base Html + Node js",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\ASUS\\Documents\\ucn\\Sistemas NodeJs Base\\Base Html + Node js\\src\\routes\\api.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\ASUS\\Documents\\ucn\\Sistemas NodeJs Base\\Base Html + Node js\\src\\routes\\api.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\ASUS\\Documents\\ucn\\Sistemas NodeJs Base\\Base Html + Node js\\src\\routes",
        "sourceFileName": "api.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _postgresAPI = _interopRequireDefault(require(\"../middleware/postgresAPI\"));\n\nvar _FormValidator = _interopRequireDefault(require(\"../middleware/FormValidator\"));\n\nvar _multer = _interopRequireDefault(require(\"multer\"));\n\nvar _fsExtra = _interopRequireDefault(require(\"fs-extra\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar router = _express[\"default\"].Router();\n\nvar requestFormValidation = function requestFormValidation(preValidation, callback) {\n  return function (req, res, next) {\n    if (req.body && req.body.data) req.body = JSON.parse(req.body.data);\n    var formValidation = preValidation(req.body, req.method);\n    if (formValidation.isValid) return callback(req, res, next);\n    res.status(400).json(formValidation);\n  };\n};\n\nvar requestUpload = function requestUpload(preValidation, callback, _ref) {\n  var fileSize = _ref.fileSize;\n  return function (req, res, next) {\n    upload(fileSize).any()(req, res, function (err) {\n      if (req.body && req.body.data && Array.isArray(req.body.data)) {\n        req.body = req.body.data.map(JSON.parse);\n        req.body.map(function (row) {\n          if (!empty(row.file)) row.fileData = req.files.shift();\n        });\n      }\n\n      if (req.body && req.body.data) req.body = JSON.parse(req.body.data);\n      var formValidation = preValidation(req.body, err);\n\n      if (formValidation.isValid) {\n        return callback(req, res, next);\n      }\n\n      res.status(400).json(formValidation);\n      var pathList = req.files.map(function (row) {\n        return row.path;\n      });\n      return deleteFiles(pathList);\n    });\n  };\n};\n\nrouter.get('/userInfo', function (req, res) {\n  // cambiar los parametros con respecto al proyecto\n  res.status(200).json({\n    name: req.user.name,\n    rut: req.user['user_id'],\n    type: req.user['user_type_id']\n  });\n}); //GET\n//POST\n//PUT\n//DELETE\n\nrouter.all('*', function (req, res) {\n  res.status(404).json({\n    message: 'La ruta de la solicitud HTTP no es reconocida por el servidor.'\n  });\n});\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS5qcyJdLCJuYW1lcyI6WyJyb3V0ZXIiLCJFeHByZXNzIiwiUm91dGVyIiwicmVxdWVzdEZvcm1WYWxpZGF0aW9uIiwicHJlVmFsaWRhdGlvbiIsImNhbGxiYWNrIiwicmVxIiwicmVzIiwibmV4dCIsImJvZHkiLCJkYXRhIiwiSlNPTiIsInBhcnNlIiwiZm9ybVZhbGlkYXRpb24iLCJtZXRob2QiLCJpc1ZhbGlkIiwic3RhdHVzIiwianNvbiIsInJlcXVlc3RVcGxvYWQiLCJmaWxlU2l6ZSIsInVwbG9hZCIsImFueSIsImVyciIsIkFycmF5IiwiaXNBcnJheSIsIm1hcCIsInJvdyIsImVtcHR5IiwiZmlsZSIsImZpbGVEYXRhIiwiZmlsZXMiLCJzaGlmdCIsInBhdGhMaXN0IiwicGF0aCIsImRlbGV0ZUZpbGVzIiwiZ2V0IiwibmFtZSIsInVzZXIiLCJydXQiLCJ0eXBlIiwiYWxsIiwibWVzc2FnZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBRUEsSUFBTUEsTUFBTSxHQUFHQyxvQkFBUUMsTUFBUixFQUFmOztBQUVBLElBQU1DLHFCQUFxQixHQUFHLFNBQXhCQSxxQkFBd0IsQ0FBQ0MsYUFBRCxFQUFnQkMsUUFBaEIsRUFBNkI7QUFDdkQsU0FBTyxVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxFQUFvQjtBQUN2QixRQUFJRixHQUFHLENBQUNHLElBQUosSUFBWUgsR0FBRyxDQUFDRyxJQUFKLENBQVNDLElBQXpCLEVBQ0FKLEdBQUcsQ0FBQ0csSUFBSixHQUFXRSxJQUFJLENBQUNDLEtBQUwsQ0FBV04sR0FBRyxDQUFDRyxJQUFKLENBQVNDLElBQXBCLENBQVg7QUFDQSxRQUFNRyxjQUFjLEdBQUdULGFBQWEsQ0FBQ0UsR0FBRyxDQUFDRyxJQUFMLEVBQVdILEdBQUcsQ0FBQ1EsTUFBZixDQUFwQztBQUNBLFFBQUlELGNBQWMsQ0FBQ0UsT0FBbkIsRUFDQSxPQUFPVixRQUFRLENBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLENBQWY7QUFFQUQsSUFBQUEsR0FBRyxDQUFDUyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJKLGNBQXJCO0FBQ0gsR0FSRDtBQVNILENBVkQ7O0FBWUEsSUFBTUssYUFBYSxHQUFHLFNBQWhCQSxhQUFnQixDQUFDZCxhQUFELEVBQWdCQyxRQUFoQixRQUEyQztBQUFBLE1BQWZjLFFBQWUsUUFBZkEsUUFBZTtBQUMvRCxTQUFPLFVBQUNiLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLEVBQW9CO0FBQ3pCWSxJQUFBQSxNQUFNLENBQUNELFFBQUQsQ0FBTixDQUFpQkUsR0FBakIsR0FBdUJmLEdBQXZCLEVBQTRCQyxHQUE1QixFQUFpQyxVQUFBZSxHQUFHLEVBQUk7QUFDdEMsVUFBSWhCLEdBQUcsQ0FBQ0csSUFBSixJQUFZSCxHQUFHLENBQUNHLElBQUosQ0FBU0MsSUFBckIsSUFBNkJhLEtBQUssQ0FBQ0MsT0FBTixDQUFlbEIsR0FBRyxDQUFDRyxJQUFKLENBQVNDLElBQXhCLENBQWpDLEVBQWlFO0FBQy9ESixRQUFBQSxHQUFHLENBQUNHLElBQUosR0FBV0gsR0FBRyxDQUFDRyxJQUFKLENBQVNDLElBQVQsQ0FBY2UsR0FBZCxDQUFrQmQsSUFBSSxDQUFDQyxLQUF2QixDQUFYO0FBQ0FOLFFBQUFBLEdBQUcsQ0FBQ0csSUFBSixDQUFTZ0IsR0FBVCxDQUFhLFVBQUFDLEdBQUcsRUFBSTtBQUNsQixjQUFJLENBQUNDLEtBQUssQ0FBQ0QsR0FBRyxDQUFDRSxJQUFMLENBQVYsRUFDRUYsR0FBRyxDQUFDRyxRQUFKLEdBQWV2QixHQUFHLENBQUN3QixLQUFKLENBQVVDLEtBQVYsRUFBZjtBQUNILFNBSEQ7QUFJRDs7QUFFRCxVQUFJekIsR0FBRyxDQUFDRyxJQUFKLElBQVlILEdBQUcsQ0FBQ0csSUFBSixDQUFTQyxJQUF6QixFQUNFSixHQUFHLENBQUNHLElBQUosR0FBV0UsSUFBSSxDQUFDQyxLQUFMLENBQVdOLEdBQUcsQ0FBQ0csSUFBSixDQUFTQyxJQUFwQixDQUFYO0FBRUYsVUFBTUcsY0FBYyxHQUFHVCxhQUFhLENBQUNFLEdBQUcsQ0FBQ0csSUFBTCxFQUFXYSxHQUFYLENBQXBDOztBQUNBLFVBQUlULGNBQWMsQ0FBQ0UsT0FBbkIsRUFBMkI7QUFDekIsZUFBT1YsUUFBUSxDQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxDQUFmO0FBQ0Q7O0FBR0RELE1BQUFBLEdBQUcsQ0FBQ1MsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCSixjQUFyQjtBQUNBLFVBQU1tQixRQUFRLEdBQUcxQixHQUFHLENBQUN3QixLQUFKLENBQVVMLEdBQVYsQ0FBYyxVQUFBQyxHQUFHO0FBQUEsZUFBS0EsR0FBRyxDQUFDTyxJQUFUO0FBQUEsT0FBakIsQ0FBakI7QUFDQSxhQUFPQyxXQUFXLENBQUNGLFFBQUQsQ0FBbEI7QUFDRCxLQXJCRDtBQXNCRCxHQXZCRDtBQXdCRCxDQXpCRDs7QUEyQkFoQyxNQUFNLENBQUNtQyxHQUFQLENBQVcsV0FBWCxFQUF3QixVQUFDN0IsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFBRTtBQUNwQ0EsRUFBQUEsR0FBRyxDQUFDUyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDbkJtQixJQUFBQSxJQUFJLEVBQUU5QixHQUFHLENBQUMrQixJQUFKLENBQVNELElBREk7QUFFbkJFLElBQUFBLEdBQUcsRUFBRWhDLEdBQUcsQ0FBQytCLElBQUosQ0FBUyxTQUFULENBRmM7QUFHbkJFLElBQUFBLElBQUksRUFBRWpDLEdBQUcsQ0FBQytCLElBQUosQ0FBUyxjQUFUO0FBSGEsR0FBckI7QUFLSCxDQU5ELEUsQ0FTQTtBQUVBO0FBRUE7QUFFQTs7QUFFQXJDLE1BQU0sQ0FBQ3dDLEdBQVAsQ0FBVyxHQUFYLEVBQWdCLFVBQUNsQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUMxQkEsRUFBQUEsR0FBRyxDQUFDUyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFBRXdCLElBQUFBLE9BQU8sRUFBRTtBQUFYLEdBQXJCO0FBQ0gsQ0FGRDtlQUllekMsTSIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEFTVVNcXERvY3VtZW50c1xcdWNuXFxTaXN0ZW1hcyBOb2RlSnMgQmFzZVxcQmFzZSBIdG1sICsgTm9kZSBqc1xcc3JjXFxyb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgRXhwcmVzcyBmcm9tICdleHByZXNzJztcclxuaW1wb3J0IGRiIGZyb20gJy4uL21pZGRsZXdhcmUvcG9zdGdyZXNBUEknO1xyXG5pbXBvcnQgRm9ybVZhbGlkYXRvciBmcm9tICcuLi9taWRkbGV3YXJlL0Zvcm1WYWxpZGF0b3InXHJcbmltcG9ydCBtdWx0ZXIgZnJvbSAnbXVsdGVyJ1xyXG5pbXBvcnQgZnMgZnJvbSAnZnMtZXh0cmEnXHJcblxyXG5jb25zdCByb3V0ZXIgPSBFeHByZXNzLlJvdXRlcigpO1xyXG5cclxuY29uc3QgcmVxdWVzdEZvcm1WYWxpZGF0aW9uID0gKHByZVZhbGlkYXRpb24sIGNhbGxiYWNrKSA9PiB7XHJcbiAgICByZXR1cm4gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XHJcbiAgICAgICAgaWYgKHJlcS5ib2R5ICYmIHJlcS5ib2R5LmRhdGEpXHJcbiAgICAgICAgcmVxLmJvZHkgPSBKU09OLnBhcnNlKHJlcS5ib2R5LmRhdGEpO1xyXG4gICAgICAgIGNvbnN0IGZvcm1WYWxpZGF0aW9uID0gcHJlVmFsaWRhdGlvbihyZXEuYm9keSwgcmVxLm1ldGhvZCk7XHJcbiAgICAgICAgaWYgKGZvcm1WYWxpZGF0aW9uLmlzVmFsaWQpXHJcbiAgICAgICAgcmV0dXJuIGNhbGxiYWNrKHJlcSwgcmVzLCBuZXh0KTtcclxuXHJcbiAgICAgICAgcmVzLnN0YXR1cyg0MDApLmpzb24oZm9ybVZhbGlkYXRpb24pO1xyXG4gICAgfTtcclxufTtcclxuXHJcbmNvbnN0IHJlcXVlc3RVcGxvYWQgPSAocHJlVmFsaWRhdGlvbiwgY2FsbGJhY2ssIHsgZmlsZVNpemUgfSkgPT4ge1xyXG4gIHJldHVybiAocmVxLCByZXMsIG5leHQpID0+IHtcclxuICAgIHVwbG9hZChmaWxlU2l6ZSkuYW55KCkocmVxLCByZXMsIGVyciA9PiB7XHJcbiAgICAgIGlmIChyZXEuYm9keSAmJiByZXEuYm9keS5kYXRhICYmIEFycmF5LmlzQXJyYXkoKHJlcS5ib2R5LmRhdGEpKSkgeyBcclxuICAgICAgICByZXEuYm9keSA9IHJlcS5ib2R5LmRhdGEubWFwKEpTT04ucGFyc2UpO1xyXG4gICAgICAgIHJlcS5ib2R5Lm1hcChyb3cgPT4ge1xyXG4gICAgICAgICAgaWYgKCFlbXB0eShyb3cuZmlsZSkpXHJcbiAgICAgICAgICAgIHJvdy5maWxlRGF0YSA9IHJlcS5maWxlcy5zaGlmdCgpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBpZiAocmVxLmJvZHkgJiYgcmVxLmJvZHkuZGF0YSlcclxuICAgICAgICByZXEuYm9keSA9IEpTT04ucGFyc2UocmVxLmJvZHkuZGF0YSk7XHJcblxyXG4gICAgICBjb25zdCBmb3JtVmFsaWRhdGlvbiA9IHByZVZhbGlkYXRpb24ocmVxLmJvZHksIGVycik7XHJcbiAgICAgIGlmIChmb3JtVmFsaWRhdGlvbi5pc1ZhbGlkKXtcclxuICAgICAgICByZXR1cm4gY2FsbGJhY2socmVxLCByZXMsIG5leHQpO1xyXG4gICAgICB9XHJcbiAgICAgICAgXHJcblxyXG4gICAgICByZXMuc3RhdHVzKDQwMCkuanNvbihmb3JtVmFsaWRhdGlvbik7XHJcbiAgICAgIGNvbnN0IHBhdGhMaXN0ID0gcmVxLmZpbGVzLm1hcChyb3cgPT4gKHJvdy5wYXRoKSk7XHJcbiAgICAgIHJldHVybiBkZWxldGVGaWxlcyhwYXRoTGlzdCk7XHJcbiAgICB9KTtcclxuICB9O1xyXG59O1xyXG5cclxucm91dGVyLmdldCgnL3VzZXJJbmZvJywgKHJlcSwgcmVzKSA9PiB7IC8vIGNhbWJpYXIgbG9zIHBhcmFtZXRyb3MgY29uIHJlc3BlY3RvIGFsIHByb3llY3RvXHJcbiAgICByZXMuc3RhdHVzKDIwMCkuanNvbih7XHJcbiAgICAgIG5hbWU6IHJlcS51c2VyLm5hbWUsXHJcbiAgICAgIHJ1dDogcmVxLnVzZXJbJ3VzZXJfaWQnXSxcclxuICAgICAgdHlwZTogcmVxLnVzZXJbJ3VzZXJfdHlwZV9pZCddXHJcbiAgICB9KTtcclxufSk7XHJcblxyXG5cclxuLy9HRVRcclxuXHJcbi8vUE9TVFxyXG5cclxuLy9QVVRcclxuXHJcbi8vREVMRVRFXHJcblxyXG5yb3V0ZXIuYWxsKCcqJywgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICByZXMuc3RhdHVzKDQwNCkuanNvbih7IG1lc3NhZ2U6ICdMYSBydXRhIGRlIGxhIHNvbGljaXR1ZCBIVFRQIG5vIGVzIHJlY29ub2NpZGEgcG9yIGVsIHNlcnZpZG9yLicgfSk7XHJcbn0pO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgcm91dGVyO1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "api.js"
      ],
      "names": [
        "router",
        "Express",
        "Router",
        "requestFormValidation",
        "preValidation",
        "callback",
        "req",
        "res",
        "next",
        "body",
        "data",
        "JSON",
        "parse",
        "formValidation",
        "method",
        "isValid",
        "status",
        "json",
        "requestUpload",
        "fileSize",
        "upload",
        "any",
        "err",
        "Array",
        "isArray",
        "map",
        "row",
        "empty",
        "file",
        "fileData",
        "files",
        "shift",
        "pathList",
        "path",
        "deleteFiles",
        "get",
        "name",
        "user",
        "rut",
        "type",
        "all",
        "message"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,MAAM,GAAGC,oBAAQC,MAAR,EAAf;;AAEA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,aAAD,EAAgBC,QAAhB,EAA6B;AACvD,SAAO,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACvB,QAAIF,GAAG,CAACG,IAAJ,IAAYH,GAAG,CAACG,IAAJ,CAASC,IAAzB,EACAJ,GAAG,CAACG,IAAJ,GAAWE,IAAI,CAACC,KAAL,CAAWN,GAAG,CAACG,IAAJ,CAASC,IAApB,CAAX;AACA,QAAMG,cAAc,GAAGT,aAAa,CAACE,GAAG,CAACG,IAAL,EAAWH,GAAG,CAACQ,MAAf,CAApC;AACA,QAAID,cAAc,CAACE,OAAnB,EACA,OAAOV,QAAQ,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,CAAf;AAEAD,IAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBJ,cAArB;AACH,GARD;AASH,CAVD;;AAYA,IAAMK,aAAa,GAAG,SAAhBA,aAAgB,CAACd,aAAD,EAAgBC,QAAhB,QAA2C;AAAA,MAAfc,QAAe,QAAfA,QAAe;AAC/D,SAAO,UAACb,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACzBY,IAAAA,MAAM,CAACD,QAAD,CAAN,CAAiBE,GAAjB,GAAuBf,GAAvB,EAA4BC,GAA5B,EAAiC,UAAAe,GAAG,EAAI;AACtC,UAAIhB,GAAG,CAACG,IAAJ,IAAYH,GAAG,CAACG,IAAJ,CAASC,IAArB,IAA6Ba,KAAK,CAACC,OAAN,CAAelB,GAAG,CAACG,IAAJ,CAASC,IAAxB,CAAjC,EAAiE;AAC/DJ,QAAAA,GAAG,CAACG,IAAJ,GAAWH,GAAG,CAACG,IAAJ,CAASC,IAAT,CAAce,GAAd,CAAkBd,IAAI,CAACC,KAAvB,CAAX;AACAN,QAAAA,GAAG,CAACG,IAAJ,CAASgB,GAAT,CAAa,UAAAC,GAAG,EAAI;AAClB,cAAI,CAACC,KAAK,CAACD,GAAG,CAACE,IAAL,CAAV,EACEF,GAAG,CAACG,QAAJ,GAAevB,GAAG,CAACwB,KAAJ,CAAUC,KAAV,EAAf;AACH,SAHD;AAID;;AAED,UAAIzB,GAAG,CAACG,IAAJ,IAAYH,GAAG,CAACG,IAAJ,CAASC,IAAzB,EACEJ,GAAG,CAACG,IAAJ,GAAWE,IAAI,CAACC,KAAL,CAAWN,GAAG,CAACG,IAAJ,CAASC,IAApB,CAAX;AAEF,UAAMG,cAAc,GAAGT,aAAa,CAACE,GAAG,CAACG,IAAL,EAAWa,GAAX,CAApC;;AACA,UAAIT,cAAc,CAACE,OAAnB,EAA2B;AACzB,eAAOV,QAAQ,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,CAAf;AACD;;AAGDD,MAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBJ,cAArB;AACA,UAAMmB,QAAQ,GAAG1B,GAAG,CAACwB,KAAJ,CAAUL,GAAV,CAAc,UAAAC,GAAG;AAAA,eAAKA,GAAG,CAACO,IAAT;AAAA,OAAjB,CAAjB;AACA,aAAOC,WAAW,CAACF,QAAD,CAAlB;AACD,KArBD;AAsBD,GAvBD;AAwBD,CAzBD;;AA2BAhC,MAAM,CAACmC,GAAP,CAAW,WAAX,EAAwB,UAAC7B,GAAD,EAAMC,GAAN,EAAc;AAAE;AACpCA,EAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBmB,IAAAA,IAAI,EAAE9B,GAAG,CAAC+B,IAAJ,CAASD,IADI;AAEnBE,IAAAA,GAAG,EAAEhC,GAAG,CAAC+B,IAAJ,CAAS,SAAT,CAFc;AAGnBE,IAAAA,IAAI,EAAEjC,GAAG,CAAC+B,IAAJ,CAAS,cAAT;AAHa,GAArB;AAKH,CAND,E,CASA;AAEA;AAEA;AAEA;;AAEArC,MAAM,CAACwC,GAAP,CAAW,GAAX,EAAgB,UAAClC,GAAD,EAAMC,GAAN,EAAc;AAC1BA,EAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEwB,IAAAA,OAAO,EAAE;AAAX,GAArB;AACH,CAFD;eAIezC,M",
      "sourceRoot": "C:\\Users\\ASUS\\Documents\\ucn\\Sistemas NodeJs Base\\Base Html + Node js\\src\\routes",
      "sourcesContent": [
        "import Express from 'express';\r\nimport db from '../middleware/postgresAPI';\r\nimport FormValidator from '../middleware/FormValidator'\r\nimport multer from 'multer'\r\nimport fs from 'fs-extra'\r\n\r\nconst router = Express.Router();\r\n\r\nconst requestFormValidation = (preValidation, callback) => {\r\n    return (req, res, next) => {\r\n        if (req.body && req.body.data)\r\n        req.body = JSON.parse(req.body.data);\r\n        const formValidation = preValidation(req.body, req.method);\r\n        if (formValidation.isValid)\r\n        return callback(req, res, next);\r\n\r\n        res.status(400).json(formValidation);\r\n    };\r\n};\r\n\r\nconst requestUpload = (preValidation, callback, { fileSize }) => {\r\n  return (req, res, next) => {\r\n    upload(fileSize).any()(req, res, err => {\r\n      if (req.body && req.body.data && Array.isArray((req.body.data))) { \r\n        req.body = req.body.data.map(JSON.parse);\r\n        req.body.map(row => {\r\n          if (!empty(row.file))\r\n            row.fileData = req.files.shift();\r\n        });\r\n      }\r\n\r\n      if (req.body && req.body.data)\r\n        req.body = JSON.parse(req.body.data);\r\n\r\n      const formValidation = preValidation(req.body, err);\r\n      if (formValidation.isValid){\r\n        return callback(req, res, next);\r\n      }\r\n        \r\n\r\n      res.status(400).json(formValidation);\r\n      const pathList = req.files.map(row => (row.path));\r\n      return deleteFiles(pathList);\r\n    });\r\n  };\r\n};\r\n\r\nrouter.get('/userInfo', (req, res) => { // cambiar los parametros con respecto al proyecto\r\n    res.status(200).json({\r\n      name: req.user.name,\r\n      rut: req.user['user_id'],\r\n      type: req.user['user_type_id']\r\n    });\r\n});\r\n\r\n\r\n//GET\r\n\r\n//POST\r\n\r\n//PUT\r\n\r\n//DELETE\r\n\r\nrouter.all('*', (req, res) => {\r\n    res.status(404).json({ message: 'La ruta de la solicitud HTTP no es reconocida por el servidor.' });\r\n});\r\n\r\nexport default router;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1564939213394
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\ASUS\\\\Documents\\\\ucn\\\\Sistemas NodeJs Base\\\\Base Html + Node js\\\\src\\\\middleware\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\ASUS\\\\Documents\\\\ucn\\\\Sistemas NodeJs Base\\\\Base Html + Node js\",\"filename\":\"C:\\\\Users\\\\ASUS\\\\Documents\\\\ucn\\\\Sistemas NodeJs Base\\\\Base Html + Node js\\\\src\\\\middleware\\\\postgresAPI.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\ASUS\\\\Documents\\\\ucn\\\\Sistemas NodeJs Base\\\\Base Html + Node js\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\ASUS\\Documents\\ucn\\Sistemas NodeJs Base\\Base Html + Node js\\src\\middleware",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\ASUS\\Documents\\ucn\\Sistemas NodeJs Base\\Base Html + Node js",
      "filename": "C:\\Users\\ASUS\\Documents\\ucn\\Sistemas NodeJs Base\\Base Html + Node js\\src\\middleware\\postgresAPI.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\ASUS\\Documents\\ucn\\Sistemas NodeJs Base\\Base Html + Node js",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\ASUS\\Documents\\ucn\\Sistemas NodeJs Base\\Base Html + Node js\\src\\middleware\\postgresAPI.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\ASUS\\Documents\\ucn\\Sistemas NodeJs Base\\Base Html + Node js\\src\\middleware\\postgresAPI.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\ASUS\\Documents\\ucn\\Sistemas NodeJs Base\\Base Html + Node js\\src\\middleware",
        "sourceFileName": "postgresAPI.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _postgresConnection = _interopRequireDefault(require(\"./postgresConnection\"));\n\nvar _rutjs = _interopRequireDefault(require(\"rutjs\"));\n\nvar _user = _interopRequireDefault(require(\"../models/user\"));\n\nvar _isEmpty = _interopRequireDefault(require(\"is-empty\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar functionQueries = {};\n/**\r\n * Función que sirve para generar el menú lateral dado el tipo de usuario, por ejemplo si\r\n * el usuario que se intenta logear es de tipo Administrador, se muestra todo el menú pero si es por ejemplo\r\n * una secretaria, el menú solo contiene ciertos apartados.\r\n * También sirve para ver si el usuario está bloqueado o no.\r\n */\n\nfunctionQueries.getAuthenticatedUserData = function (req, res, next) {\n  var user = {\n    id: req.user.id,\n    userId: req.user['user_id'],\n    name: req.user.name,\n    type: req.user['user_type_id'],\n    state: req.user.state\n  };\n  req.body.pathname = req.body.pathname.substring(1, req.body.pathname.length);\n  var data = {\n    type: user.type,\n    pathname: req.body.pathname || ''\n  };\n\n  _postgresConnection[\"default\"].tx(function (t) {\n    var queries = []; // Consulta que toma la ruta actual y le pregunta a la base de datos si este usuario tiene permiso para entrar a ese link\n    //en especifico\n\n    var query = 'SELECT COUNT(*)\\\r\n                  FROM user_permission INNER JOIN system_page ON user_permission.system_page_id = system_page.id\\\r\n                  WHERE user_permission.user_type_id = ${type} AND system_page.link = ${pathname}';\n    queries.push(t.one(query, data)); //La consulta que devuelve todo el menu lateral dado el tipo de usuario , la respuesta que se espera es como la siguiente:\n    // Menu Grande -> json{Sub-Menu1, Sub-Menu2, .... , Sub-Menu n}\n\n    query = \"SELECT menu_group.iconclass, menu_group.id, menu_group.menu, CASE WHEN menu_group.menu_order IS NULL THEN 0 ELSE menu_group.menu_order END AS menu_order,\\\r\n                json_agg(json_build_object('titulo', system_page.text, 'link', system_page.link, 'icon', system_page.icon) ORDER BY user_permission.menu_order) AS link\\\r\n              FROM user_permission\\\r\n                INNER JOIN system_page ON user_permission.system_page_id = system_page.id\\\r\n                LEFT JOIN menu_group ON user_permission.menu_group_id = menu_group.id\\\r\n              WHERE user_type_id = ${type} AND in_menu AND system_page.id != 14\\\r\n              GROUP BY menu_group.menu_order, menu_group.menu, menu_group.id, menu_group.iconclass\\\r\n              ORDER BY menu_order\";\n    queries.push(t.any(query, data)); // Ejecuto las dos consultas simultaneamente con batch\n\n    return t.batch(queries);\n  }) //Si el menu lateral no tiene submenu solamente agrego el titulo, pero si tiene sub-menus agrego cada sub-menu a ese menú\n  //en particular\n  .then(function (result) {\n    var menu = [];\n    result[1].map(function (row) {\n      if (!row.menu) row.link.map(function (menuItem) {\n        return menu.push(menuItem);\n      });else menu.push(row);\n    }); //let permission = ['/login','/', '*'].indexOf(data.pathname) != -1 || result[0].count > 0;\n\n    res.status(user.state ? 200 : 403).json({\n      logged: true,\n      hasPermission: user.state,\n      user: user,\n      menu: menu\n    });\n  })[\"catch\"](function (err) {\n    console.log(err);\n    res.status(500).json({\n      error: err,\n      message: 'Error al obtener los datos del usuario.'\n    });\n  });\n};\n\nvar _default = functionQueries;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "postgresAPI.js"
      ],
      "names": [
        "functionQueries",
        "getAuthenticatedUserData",
        "req",
        "res",
        "next",
        "user",
        "id",
        "userId",
        "name",
        "type",
        "state",
        "body",
        "pathname",
        "substring",
        "length",
        "data",
        "connection",
        "tx",
        "t",
        "queries",
        "query",
        "push",
        "one",
        "any",
        "batch",
        "then",
        "result",
        "menu",
        "map",
        "row",
        "link",
        "menuItem",
        "status",
        "json",
        "logged",
        "hasPermission",
        "err",
        "console",
        "log",
        "error",
        "message"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,eAAe,GAAG,EAAxB;AAEA;;;;;;;AAOAA,eAAe,CAACC,wBAAhB,GAA2C,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC3D,MAAIC,IAAI,GAAG;AACPC,IAAAA,EAAE,EAAEJ,GAAG,CAACG,IAAJ,CAASC,EADN;AAEPC,IAAAA,MAAM,EAAEL,GAAG,CAACG,IAAJ,CAAS,SAAT,CAFD;AAGPG,IAAAA,IAAI,EAAEN,GAAG,CAACG,IAAJ,CAASG,IAHR;AAIPC,IAAAA,IAAI,EAAEP,GAAG,CAACG,IAAJ,CAAS,cAAT,CAJC;AAKPK,IAAAA,KAAK,EAAER,GAAG,CAACG,IAAJ,CAASK;AALT,GAAX;AAOAR,EAAAA,GAAG,CAACS,IAAJ,CAASC,QAAT,GAAoBV,GAAG,CAACS,IAAJ,CAASC,QAAT,CAAkBC,SAAlB,CAA4B,CAA5B,EAA+BX,GAAG,CAACS,IAAJ,CAASC,QAAT,CAAkBE,MAAjD,CAApB;AACA,MAAIC,IAAI,GAAG;AAAEN,IAAAA,IAAI,EAAEJ,IAAI,CAACI,IAAb;AAAmBG,IAAAA,QAAQ,EAAEV,GAAG,CAACS,IAAJ,CAASC,QAAT,IAAqB;AAAlD,GAAX;;AAEAI,iCAAWC,EAAX,CAAc,UAAAC,CAAC,EAAI;AACf,QAAIC,OAAO,GAAG,EAAd,CADe,CAEf;AACA;;AACA,QAAIC,KAAK,GAAG;;kGAAZ;AAGAD,IAAAA,OAAO,CAACE,IAAR,CAAaH,CAAC,CAACI,GAAF,CAAMF,KAAN,EAAaL,IAAb,CAAb,EAPe,CAQf;AACA;;AACAK,IAAAA,KAAK,GAAG;;;;;;;kCAAR;AASAD,IAAAA,OAAO,CAACE,IAAR,CAAaH,CAAC,CAACK,GAAF,CAAMH,KAAN,EAAaL,IAAb,CAAb,EAnBe,CAoBf;;AACA,WAAOG,CAAC,CAACM,KAAF,CAAQL,OAAR,CAAP;AACH,GAtBD,EAuBI;AACA;AAxBJ,GAyBKM,IAzBL,CAyBU,UAAAC,MAAM,EAAI;AACZ,QAAIC,IAAI,GAAG,EAAX;AACAD,IAAAA,MAAM,CAAC,CAAD,CAAN,CAAUE,GAAV,CAAc,UAAAC,GAAG,EAAI;AACjB,UAAI,CAACA,GAAG,CAACF,IAAT,EACIE,GAAG,CAACC,IAAJ,CAASF,GAAT,CAAa,UAAAG,QAAQ;AAAA,eAAIJ,IAAI,CAACN,IAAL,CAAUU,QAAV,CAAJ;AAAA,OAArB,EADJ,KAGIJ,IAAI,CAACN,IAAL,CAAUQ,GAAV;AACP,KALD,EAFY,CASZ;;AACA1B,IAAAA,GAAG,CAAC6B,MAAJ,CAAW3B,IAAI,CAACK,KAAL,GAAa,GAAb,GAAmB,GAA9B,EAAmCuB,IAAnC,CAAwC;AACpCC,MAAAA,MAAM,EAAE,IAD4B;AAEpCC,MAAAA,aAAa,EAAE9B,IAAI,CAACK,KAFgB;AAGpCL,MAAAA,IAAI,EAAJA,IAHoC;AAIpCsB,MAAAA,IAAI,EAAJA;AAJoC,KAAxC;AAMH,GAzCL,WA0CW,UAAAS,GAAG,EAAI;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAjC,IAAAA,GAAG,CAAC6B,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEM,MAAAA,KAAK,EAAEH,GAAT;AAAcI,MAAAA,OAAO,EAAE;AAAvB,KAArB;AACH,GA7CL;AA8CH,CAzDD;;eA2DexC,e",
      "sourceRoot": "C:\\Users\\ASUS\\Documents\\ucn\\Sistemas NodeJs Base\\Base Html + Node js\\src\\middleware",
      "sourcesContent": [
        "import connection from './postgresConnection';\r\nimport Rut from 'rutjs';\r\nimport User from '../models/user';\r\nimport empty from 'is-empty';\r\n\r\nconst functionQueries = {};\r\n\r\n/**\r\n * Función que sirve para generar el menú lateral dado el tipo de usuario, por ejemplo si\r\n * el usuario que se intenta logear es de tipo Administrador, se muestra todo el menú pero si es por ejemplo\r\n * una secretaria, el menú solo contiene ciertos apartados.\r\n * También sirve para ver si el usuario está bloqueado o no.\r\n */\r\n\r\nfunctionQueries.getAuthenticatedUserData = (req, res, next) => {\r\n    let user = {\r\n        id: req.user.id,\r\n        userId: req.user['user_id'],\r\n        name: req.user.name,\r\n        type: req.user['user_type_id'],\r\n        state: req.user.state\r\n    };\r\n    req.body.pathname = req.body.pathname.substring(1, req.body.pathname.length);\r\n    let data = { type: user.type, pathname: req.body.pathname || '' };\r\n\r\n    connection.tx(t => {\r\n        let queries = [];\r\n        // Consulta que toma la ruta actual y le pregunta a la base de datos si este usuario tiene permiso para entrar a ese link\r\n        //en especifico\r\n        let query = 'SELECT COUNT(*)\\\r\n                  FROM user_permission INNER JOIN system_page ON user_permission.system_page_id = system_page.id\\\r\n                  WHERE user_permission.user_type_id = ${type} AND system_page.link = ${pathname}';\r\n        queries.push(t.one(query, data));\r\n        //La consulta que devuelve todo el menu lateral dado el tipo de usuario , la respuesta que se espera es como la siguiente:\r\n        // Menu Grande -> json{Sub-Menu1, Sub-Menu2, .... , Sub-Menu n}\r\n        query = \"SELECT menu_group.iconclass, menu_group.id, menu_group.menu, CASE WHEN menu_group.menu_order IS NULL THEN 0 ELSE menu_group.menu_order END AS menu_order,\\\r\n                json_agg(json_build_object('titulo', system_page.text, 'link', system_page.link, 'icon', system_page.icon) ORDER BY user_permission.menu_order) AS link\\\r\n              FROM user_permission\\\r\n                INNER JOIN system_page ON user_permission.system_page_id = system_page.id\\\r\n                LEFT JOIN menu_group ON user_permission.menu_group_id = menu_group.id\\\r\n              WHERE user_type_id = ${type} AND in_menu AND system_page.id != 14\\\r\n              GROUP BY menu_group.menu_order, menu_group.menu, menu_group.id, menu_group.iconclass\\\r\n              ORDER BY menu_order\";\r\n\r\n        queries.push(t.any(query, data));\r\n        // Ejecuto las dos consultas simultaneamente con batch\r\n        return t.batch(queries);\r\n    })\r\n        //Si el menu lateral no tiene submenu solamente agrego el titulo, pero si tiene sub-menus agrego cada sub-menu a ese menú\r\n        //en particular\r\n        .then(result => {\r\n            let menu = [];\r\n            result[1].map(row => {\r\n                if (!row.menu)\r\n                    row.link.map(menuItem => menu.push(menuItem));\r\n                else\r\n                    menu.push(row);\r\n            });\r\n\r\n            //let permission = ['/login','/', '*'].indexOf(data.pathname) != -1 || result[0].count > 0;\r\n            res.status(user.state ? 200 : 403).json({\r\n                logged: true,\r\n                hasPermission: user.state,\r\n                user,\r\n                menu\r\n            });\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n            res.status(500).json({ error: err, message: 'Error al obtener los datos del usuario.' });\r\n        });\r\n};\r\n\r\nexport default functionQueries;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1564939292380
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\ASUS\\\\Documents\\\\ucn\\\\Sistemas NodeJs Base\\\\Base Html + Node js\\\\src\\\\middleware\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\ASUS\\\\Documents\\\\ucn\\\\Sistemas NodeJs Base\\\\Base Html + Node js\",\"filename\":\"C:\\\\Users\\\\ASUS\\\\Documents\\\\ucn\\\\Sistemas NodeJs Base\\\\Base Html + Node js\\\\src\\\\middleware\\\\postgresConnection.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\ASUS\\\\Documents\\\\ucn\\\\Sistemas NodeJs Base\\\\Base Html + Node js\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\ASUS\\Documents\\ucn\\Sistemas NodeJs Base\\Base Html + Node js\\src\\middleware",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\ASUS\\Documents\\ucn\\Sistemas NodeJs Base\\Base Html + Node js",
      "filename": "C:\\Users\\ASUS\\Documents\\ucn\\Sistemas NodeJs Base\\Base Html + Node js\\src\\middleware\\postgresConnection.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\ASUS\\Documents\\ucn\\Sistemas NodeJs Base\\Base Html + Node js",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\ASUS\\Documents\\ucn\\Sistemas NodeJs Base\\Base Html + Node js\\src\\middleware\\postgresConnection.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\ASUS\\Documents\\ucn\\Sistemas NodeJs Base\\Base Html + Node js\\src\\middleware\\postgresConnection.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\ASUS\\Documents\\ucn\\Sistemas NodeJs Base\\Base Html + Node js\\src\\middleware",
        "sourceFileName": "postgresConnection.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _bluebird = _interopRequireDefault(require(\"bluebird\"));\n\nvar _pgPromise = _interopRequireDefault(require(\"pg-promise\"));\n\nvar _config = _interopRequireDefault(require(\"../config.json\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar camelizeColumns = function camelizeColumns(data) {\n  var template = data[0];\n\n  for (var prop in template) {\n    var camel = _pgPromise[\"default\"].utils.camelize(prop);\n\n    if (!(camel in template)) {\n      for (var i = 0; i < data.length; i++) {\n        var d = data[i];\n        d[camel] = d[prop];\n        delete d[prop];\n      }\n    }\n  }\n};\n\nvar postgres = (0, _pgPromise[\"default\"])({\n  promiseLib: _bluebird[\"default\"],\n  receive: function receive(data, result, e) {\n    camelizeColumns(data);\n  }\n});\nvar connection = postgres(_config[\"default\"].dbUri);\nvar _default = connection;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBvc3RncmVzQ29ubmVjdGlvbi5qcyJdLCJuYW1lcyI6WyJjYW1lbGl6ZUNvbHVtbnMiLCJkYXRhIiwidGVtcGxhdGUiLCJwcm9wIiwiY2FtZWwiLCJwZ3AiLCJ1dGlscyIsImNhbWVsaXplIiwiaSIsImxlbmd0aCIsImQiLCJwb3N0Z3JlcyIsInByb21pc2VMaWIiLCJQcm9taXNlIiwicmVjZWl2ZSIsInJlc3VsdCIsImUiLCJjb25uZWN0aW9uIiwiY29uZmlnIiwiZGJVcmkiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7OztBQUVBLElBQU1BLGVBQWUsR0FBRyxTQUFsQkEsZUFBa0IsQ0FBQ0MsSUFBRCxFQUFVO0FBQ2hDLE1BQU1DLFFBQVEsR0FBR0QsSUFBSSxDQUFDLENBQUQsQ0FBckI7O0FBRUEsT0FBSyxJQUFJRSxJQUFULElBQWlCRCxRQUFqQixFQUEyQjtBQUN6QixRQUFNRSxLQUFLLEdBQUdDLHNCQUFJQyxLQUFKLENBQVVDLFFBQVYsQ0FBbUJKLElBQW5CLENBQWQ7O0FBRUEsUUFBSSxFQUFFQyxLQUFLLElBQUlGLFFBQVgsQ0FBSixFQUEwQjtBQUN4QixXQUFLLElBQUlNLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLEdBQUdQLElBQUksQ0FBQ1EsTUFBekIsRUFBaUNELENBQUMsRUFBbEMsRUFBc0M7QUFDcEMsWUFBSUUsQ0FBQyxHQUFHVCxJQUFJLENBQUNPLENBQUQsQ0FBWjtBQUNBRSxRQUFBQSxDQUFDLENBQUNOLEtBQUQsQ0FBRCxHQUFXTSxDQUFDLENBQUNQLElBQUQsQ0FBWjtBQUNBLGVBQU9PLENBQUMsQ0FBQ1AsSUFBRCxDQUFSO0FBQ0Q7QUFDRjtBQUNGO0FBQ0YsQ0FkRDs7QUFnQkEsSUFBTVEsUUFBUSxHQUFHLDJCQUFJO0FBQ25CQyxFQUFBQSxVQUFVLEVBQUVDLG9CQURPO0FBRW5CQyxFQUFBQSxPQUFPLEVBQUUsaUJBQUNiLElBQUQsRUFBT2MsTUFBUCxFQUFlQyxDQUFmLEVBQXFCO0FBQUVoQixJQUFBQSxlQUFlLENBQUNDLElBQUQsQ0FBZjtBQUF3QjtBQUZyQyxDQUFKLENBQWpCO0FBSUEsSUFBTWdCLFVBQVUsR0FBR04sUUFBUSxDQUFDTyxtQkFBT0MsS0FBUixDQUEzQjtlQUVlRixVIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcQVNVU1xcRG9jdW1lbnRzXFx1Y25cXFNpc3RlbWFzIE5vZGVKcyBCYXNlXFxCYXNlIEh0bWwgKyBOb2RlIGpzXFxzcmNcXG1pZGRsZXdhcmUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUHJvbWlzZSBmcm9tICdibHVlYmlyZCc7XHJcbmltcG9ydCBwZ3AgZnJvbSAncGctcHJvbWlzZSc7XHJcbmltcG9ydCBjb25maWcgZnJvbSAnLi4vY29uZmlnLmpzb24nO1xyXG5cclxuY29uc3QgY2FtZWxpemVDb2x1bW5zID0gKGRhdGEpID0+IHtcclxuICBjb25zdCB0ZW1wbGF0ZSA9IGRhdGFbMF07XHJcblxyXG4gIGZvciAobGV0IHByb3AgaW4gdGVtcGxhdGUpIHtcclxuICAgIGNvbnN0IGNhbWVsID0gcGdwLnV0aWxzLmNhbWVsaXplKHByb3ApO1xyXG5cclxuICAgIGlmICghKGNhbWVsIGluIHRlbXBsYXRlKSkge1xyXG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGRhdGEubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICBsZXQgZCA9IGRhdGFbaV07XHJcbiAgICAgICAgZFtjYW1lbF0gPSBkW3Byb3BdO1xyXG4gICAgICAgIGRlbGV0ZSBkW3Byb3BdO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59O1xyXG5cclxuY29uc3QgcG9zdGdyZXMgPSBwZ3Aoe1xyXG4gIHByb21pc2VMaWI6IFByb21pc2UsXHJcbiAgcmVjZWl2ZTogKGRhdGEsIHJlc3VsdCwgZSkgPT4geyBjYW1lbGl6ZUNvbHVtbnMoZGF0YSk7IH1cclxufSk7XHJcbmNvbnN0IGNvbm5lY3Rpb24gPSBwb3N0Z3Jlcyhjb25maWcuZGJVcmkpO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdGlvbjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "postgresConnection.js"
      ],
      "names": [
        "camelizeColumns",
        "data",
        "template",
        "prop",
        "camel",
        "pgp",
        "utils",
        "camelize",
        "i",
        "length",
        "d",
        "postgres",
        "promiseLib",
        "Promise",
        "receive",
        "result",
        "e",
        "connection",
        "config",
        "dbUri"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;AAEA,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAACC,IAAD,EAAU;AAChC,MAAMC,QAAQ,GAAGD,IAAI,CAAC,CAAD,CAArB;;AAEA,OAAK,IAAIE,IAAT,IAAiBD,QAAjB,EAA2B;AACzB,QAAME,KAAK,GAAGC,sBAAIC,KAAJ,CAAUC,QAAV,CAAmBJ,IAAnB,CAAd;;AAEA,QAAI,EAAEC,KAAK,IAAIF,QAAX,CAAJ,EAA0B;AACxB,WAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,IAAI,CAACQ,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,YAAIE,CAAC,GAAGT,IAAI,CAACO,CAAD,CAAZ;AACAE,QAAAA,CAAC,CAACN,KAAD,CAAD,GAAWM,CAAC,CAACP,IAAD,CAAZ;AACA,eAAOO,CAAC,CAACP,IAAD,CAAR;AACD;AACF;AACF;AACF,CAdD;;AAgBA,IAAMQ,QAAQ,GAAG,2BAAI;AACnBC,EAAAA,UAAU,EAAEC,oBADO;AAEnBC,EAAAA,OAAO,EAAE,iBAACb,IAAD,EAAOc,MAAP,EAAeC,CAAf,EAAqB;AAAEhB,IAAAA,eAAe,CAACC,IAAD,CAAf;AAAwB;AAFrC,CAAJ,CAAjB;AAIA,IAAMgB,UAAU,GAAGN,QAAQ,CAACO,mBAAOC,KAAR,CAA3B;eAEeF,U",
      "sourceRoot": "C:\\Users\\ASUS\\Documents\\ucn\\Sistemas NodeJs Base\\Base Html + Node js\\src\\middleware",
      "sourcesContent": [
        "import Promise from 'bluebird';\r\nimport pgp from 'pg-promise';\r\nimport config from '../config.json';\r\n\r\nconst camelizeColumns = (data) => {\r\n  const template = data[0];\r\n\r\n  for (let prop in template) {\r\n    const camel = pgp.utils.camelize(prop);\r\n\r\n    if (!(camel in template)) {\r\n      for (let i = 0; i < data.length; i++) {\r\n        let d = data[i];\r\n        d[camel] = d[prop];\r\n        delete d[prop];\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nconst postgres = pgp({\r\n  promiseLib: Promise,\r\n  receive: (data, result, e) => { camelizeColumns(data); }\r\n});\r\nconst connection = postgres(config.dbUri);\r\n\r\nexport default connection;"
      ]
    },
    "sourceType": "script",
    "mtime": 1563072915594
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\ASUS\\\\Documents\\\\ucn\\\\Sistemas NodeJs Base\\\\Base Html + Node js\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\ASUS\\\\Documents\\\\ucn\\\\Sistemas NodeJs Base\\\\Base Html + Node js\",\"filename\":\"C:\\\\Users\\\\ASUS\\\\Documents\\\\ucn\\\\Sistemas NodeJs Base\\\\Base Html + Node js\\\\src\\\\models\\\\user.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\ASUS\\\\Documents\\\\ucn\\\\Sistemas NodeJs Base\\\\Base Html + Node js\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\ASUS\\Documents\\ucn\\Sistemas NodeJs Base\\Base Html + Node js\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\ASUS\\Documents\\ucn\\Sistemas NodeJs Base\\Base Html + Node js",
      "filename": "C:\\Users\\ASUS\\Documents\\ucn\\Sistemas NodeJs Base\\Base Html + Node js\\src\\models\\user.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\ASUS\\Documents\\ucn\\Sistemas NodeJs Base\\Base Html + Node js",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\ASUS\\Documents\\ucn\\Sistemas NodeJs Base\\Base Html + Node js\\src\\models\\user.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\ASUS\\Documents\\ucn\\Sistemas NodeJs Base\\Base Html + Node js\\src\\models\\user.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\ASUS\\Documents\\ucn\\Sistemas NodeJs Base\\Base Html + Node js\\src\\models",
        "sourceFileName": "user.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nvar _passportLocalSequelize = _interopRequireDefault(require(\"passport-local-sequelize\"));\n\nvar _config = _interopRequireDefault(require(\"../config.json\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar db = new _sequelize[\"default\"](_config[\"default\"].dbUri, {\n  logging: false\n});\nvar User = db.define('user', {\n  user_id: {\n    type: _sequelize[\"default\"].STRING,\n    primaryKey: true\n  },\n  name: _sequelize[\"default\"].STRING,\n  password_hash: _sequelize[\"default\"].STRING,\n  password_salt: _sequelize[\"default\"].STRING,\n  user_type_id: _sequelize[\"default\"].STRING,\n  email: _sequelize[\"default\"].STRING\n}, {\n  freezeTableName: true,\n  timestamps: false\n});\n\n_passportLocalSequelize[\"default\"].attachToUser(User, {\n  usernameField: 'user_id',\n  hashField: 'password_hash',\n  saltField: 'password_salt'\n});\n\nUser.update = function (id, password, cb) {\n  User.findByUsername(id, function (err, user) {\n    if (err) return cb(err);\n    if (!user) return cb(new Error('El usuario no existe.'));\n    user.setPassword(password, function (err, user) {\n      if (err) return cb(err);\n      user.setActivationKey(function (err, user) {\n        if (err) return cb(err);\n        user['user_id'] = id;\n        user.save().then(function () {\n          cb(null, user);\n        })[\"catch\"](function (err) {\n          cb(err);\n        });\n      });\n    });\n  });\n};\n\nvar _default = User;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuanMiXSwibmFtZXMiOlsiZGIiLCJTZXF1ZWxpemUiLCJjb25maWciLCJkYlVyaSIsImxvZ2dpbmciLCJVc2VyIiwiZGVmaW5lIiwidXNlcl9pZCIsInR5cGUiLCJTVFJJTkciLCJwcmltYXJ5S2V5IiwibmFtZSIsInBhc3N3b3JkX2hhc2giLCJwYXNzd29yZF9zYWx0IiwidXNlcl90eXBlX2lkIiwiZW1haWwiLCJmcmVlemVUYWJsZU5hbWUiLCJ0aW1lc3RhbXBzIiwiUGFzc3BvcnRMb2NhbFNlcXVlbGl6ZSIsImF0dGFjaFRvVXNlciIsInVzZXJuYW1lRmllbGQiLCJoYXNoRmllbGQiLCJzYWx0RmllbGQiLCJ1cGRhdGUiLCJpZCIsInBhc3N3b3JkIiwiY2IiLCJmaW5kQnlVc2VybmFtZSIsImVyciIsInVzZXIiLCJFcnJvciIsInNldFBhc3N3b3JkIiwic2V0QWN0aXZhdGlvbktleSIsInNhdmUiLCJ0aGVuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxFQUFFLEdBQUcsSUFBSUMscUJBQUosQ0FBY0MsbUJBQU9DLEtBQXJCLEVBQTRCO0FBQUVDLEVBQUFBLE9BQU8sRUFBRTtBQUFYLENBQTVCLENBQVg7QUFFQSxJQUFNQyxJQUFJLEdBQUdMLEVBQUUsQ0FBQ00sTUFBSCxDQUNYLE1BRFcsRUFFWDtBQUNFQyxFQUFBQSxPQUFPLEVBQUU7QUFDUEMsSUFBQUEsSUFBSSxFQUFFUCxzQkFBVVEsTUFEVDtBQUVQQyxJQUFBQSxVQUFVLEVBQUU7QUFGTCxHQURYO0FBS0VDLEVBQUFBLElBQUksRUFBRVYsc0JBQVVRLE1BTGxCO0FBTUVHLEVBQUFBLGFBQWEsRUFBRVgsc0JBQVVRLE1BTjNCO0FBT0VJLEVBQUFBLGFBQWEsRUFBRVosc0JBQVVRLE1BUDNCO0FBUUVLLEVBQUFBLFlBQVksRUFBRWIsc0JBQVVRLE1BUjFCO0FBU0VNLEVBQUFBLEtBQUssRUFBRWQsc0JBQVVRO0FBVG5CLENBRlcsRUFhWDtBQUNFTyxFQUFBQSxlQUFlLEVBQUUsSUFEbkI7QUFFRUMsRUFBQUEsVUFBVSxFQUFFO0FBRmQsQ0FiVyxDQUFiOztBQW1CQUMsbUNBQXVCQyxZQUF2QixDQUFvQ2QsSUFBcEMsRUFBMEM7QUFDeENlLEVBQUFBLGFBQWEsRUFBRSxTQUR5QjtBQUV4Q0MsRUFBQUEsU0FBUyxFQUFFLGVBRjZCO0FBR3hDQyxFQUFBQSxTQUFTLEVBQUU7QUFINkIsQ0FBMUM7O0FBTUFqQixJQUFJLENBQUNrQixNQUFMLEdBQWMsVUFBQ0MsRUFBRCxFQUFLQyxRQUFMLEVBQWVDLEVBQWYsRUFBc0I7QUFDbENyQixFQUFBQSxJQUFJLENBQUNzQixjQUFMLENBQW9CSCxFQUFwQixFQUF3QixVQUFDSSxHQUFELEVBQU1DLElBQU4sRUFBZTtBQUNyQyxRQUFJRCxHQUFKLEVBQ0UsT0FBT0YsRUFBRSxDQUFDRSxHQUFELENBQVQ7QUFFRixRQUFJLENBQUNDLElBQUwsRUFDRSxPQUFPSCxFQUFFLENBQUMsSUFBSUksS0FBSixDQUFVLHVCQUFWLENBQUQsQ0FBVDtBQUVGRCxJQUFBQSxJQUFJLENBQUNFLFdBQUwsQ0FBaUJOLFFBQWpCLEVBQTJCLFVBQUNHLEdBQUQsRUFBTUMsSUFBTixFQUFlO0FBQ3hDLFVBQUlELEdBQUosRUFDRSxPQUFPRixFQUFFLENBQUNFLEdBQUQsQ0FBVDtBQUVGQyxNQUFBQSxJQUFJLENBQUNHLGdCQUFMLENBQXNCLFVBQUNKLEdBQUQsRUFBTUMsSUFBTixFQUFlO0FBQ25DLFlBQUlELEdBQUosRUFDRSxPQUFPRixFQUFFLENBQUNFLEdBQUQsQ0FBVDtBQUVGQyxRQUFBQSxJQUFJLENBQUMsU0FBRCxDQUFKLEdBQWtCTCxFQUFsQjtBQUVBSyxRQUFBQSxJQUFJLENBQUNJLElBQUwsR0FDR0MsSUFESCxDQUNRLFlBQU07QUFDVlIsVUFBQUEsRUFBRSxDQUFDLElBQUQsRUFBT0csSUFBUCxDQUFGO0FBQ0QsU0FISCxXQUlTLFVBQUNELEdBQUQsRUFBUztBQUNkRixVQUFBQSxFQUFFLENBQUNFLEdBQUQsQ0FBRjtBQUNELFNBTkg7QUFPRCxPQWJEO0FBY0QsS0FsQkQ7QUFtQkQsR0ExQkQ7QUEyQkQsQ0E1QkQ7O2VBOEJldkIsSSIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEFTVVNcXERvY3VtZW50c1xcdWNuXFxTaXN0ZW1hcyBOb2RlSnMgQmFzZVxcQmFzZSBIdG1sICsgTm9kZSBqc1xcc3JjXFxtb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgU2VxdWVsaXplIGZyb20gJ3NlcXVlbGl6ZSc7XHJcbmltcG9ydCBQYXNzcG9ydExvY2FsU2VxdWVsaXplIGZyb20gJ3Bhc3Nwb3J0LWxvY2FsLXNlcXVlbGl6ZSc7XHJcbmltcG9ydCBjb25maWcgZnJvbSAnLi4vY29uZmlnLmpzb24nO1xyXG5cclxuY29uc3QgZGIgPSBuZXcgU2VxdWVsaXplKGNvbmZpZy5kYlVyaSwgeyBsb2dnaW5nOiBmYWxzZSB9KTtcclxuXHJcbmNvbnN0IFVzZXIgPSBkYi5kZWZpbmUoXHJcbiAgJ3VzZXInLFxyXG4gIHtcclxuICAgIHVzZXJfaWQ6IHtcclxuICAgICAgdHlwZTogU2VxdWVsaXplLlNUUklORyxcclxuICAgICAgcHJpbWFyeUtleTogdHJ1ZVxyXG4gICAgfSxcclxuICAgIG5hbWU6IFNlcXVlbGl6ZS5TVFJJTkcsXHJcbiAgICBwYXNzd29yZF9oYXNoOiBTZXF1ZWxpemUuU1RSSU5HLFxyXG4gICAgcGFzc3dvcmRfc2FsdDogU2VxdWVsaXplLlNUUklORyxcclxuICAgIHVzZXJfdHlwZV9pZDogU2VxdWVsaXplLlNUUklORyxcclxuICAgIGVtYWlsOiBTZXF1ZWxpemUuU1RSSU5HLFxyXG4gIH0sXHJcbiAge1xyXG4gICAgZnJlZXplVGFibGVOYW1lOiB0cnVlLFxyXG4gICAgdGltZXN0YW1wczogZmFsc2VcclxuICB9XHJcbik7XHJcblxyXG5QYXNzcG9ydExvY2FsU2VxdWVsaXplLmF0dGFjaFRvVXNlcihVc2VyLCB7XHJcbiAgdXNlcm5hbWVGaWVsZDogJ3VzZXJfaWQnLFxyXG4gIGhhc2hGaWVsZDogJ3Bhc3N3b3JkX2hhc2gnLFxyXG4gIHNhbHRGaWVsZDogJ3Bhc3N3b3JkX3NhbHQnXHJcbn0pO1xyXG5cclxuVXNlci51cGRhdGUgPSAoaWQsIHBhc3N3b3JkLCBjYikgPT4ge1xyXG4gIFVzZXIuZmluZEJ5VXNlcm5hbWUoaWQsIChlcnIsIHVzZXIpID0+IHtcclxuICAgIGlmIChlcnIpXHJcbiAgICAgIHJldHVybiBjYihlcnIpO1xyXG5cclxuICAgIGlmICghdXNlcilcclxuICAgICAgcmV0dXJuIGNiKG5ldyBFcnJvcignRWwgdXN1YXJpbyBubyBleGlzdGUuJykpO1xyXG5cclxuICAgIHVzZXIuc2V0UGFzc3dvcmQocGFzc3dvcmQsIChlcnIsIHVzZXIpID0+IHtcclxuICAgICAgaWYgKGVycilcclxuICAgICAgICByZXR1cm4gY2IoZXJyKTtcclxuXHJcbiAgICAgIHVzZXIuc2V0QWN0aXZhdGlvbktleSgoZXJyLCB1c2VyKSA9PiB7XHJcbiAgICAgICAgaWYgKGVycilcclxuICAgICAgICAgIHJldHVybiBjYihlcnIpO1xyXG5cclxuICAgICAgICB1c2VyWyd1c2VyX2lkJ10gPSBpZDtcclxuXHJcbiAgICAgICAgdXNlci5zYXZlKClcclxuICAgICAgICAgIC50aGVuKCgpID0+IHtcclxuICAgICAgICAgICAgY2IobnVsbCwgdXNlcik7XHJcbiAgICAgICAgICB9KVxyXG4gICAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgICAgICAgY2IoZXJyKVxyXG4gICAgICAgICAgfSk7XHJcbiAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgfSk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBVc2VyOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "user.js"
      ],
      "names": [
        "db",
        "Sequelize",
        "config",
        "dbUri",
        "logging",
        "User",
        "define",
        "user_id",
        "type",
        "STRING",
        "primaryKey",
        "name",
        "password_hash",
        "password_salt",
        "user_type_id",
        "email",
        "freezeTableName",
        "timestamps",
        "PassportLocalSequelize",
        "attachToUser",
        "usernameField",
        "hashField",
        "saltField",
        "update",
        "id",
        "password",
        "cb",
        "findByUsername",
        "err",
        "user",
        "Error",
        "setPassword",
        "setActivationKey",
        "save",
        "then"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;AAEA,IAAMA,EAAE,GAAG,IAAIC,qBAAJ,CAAcC,mBAAOC,KAArB,EAA4B;AAAEC,EAAAA,OAAO,EAAE;AAAX,CAA5B,CAAX;AAEA,IAAMC,IAAI,GAAGL,EAAE,CAACM,MAAH,CACX,MADW,EAEX;AACEC,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAEP,sBAAUQ,MADT;AAEPC,IAAAA,UAAU,EAAE;AAFL,GADX;AAKEC,EAAAA,IAAI,EAAEV,sBAAUQ,MALlB;AAMEG,EAAAA,aAAa,EAAEX,sBAAUQ,MAN3B;AAOEI,EAAAA,aAAa,EAAEZ,sBAAUQ,MAP3B;AAQEK,EAAAA,YAAY,EAAEb,sBAAUQ,MAR1B;AASEM,EAAAA,KAAK,EAAEd,sBAAUQ;AATnB,CAFW,EAaX;AACEO,EAAAA,eAAe,EAAE,IADnB;AAEEC,EAAAA,UAAU,EAAE;AAFd,CAbW,CAAb;;AAmBAC,mCAAuBC,YAAvB,CAAoCd,IAApC,EAA0C;AACxCe,EAAAA,aAAa,EAAE,SADyB;AAExCC,EAAAA,SAAS,EAAE,eAF6B;AAGxCC,EAAAA,SAAS,EAAE;AAH6B,CAA1C;;AAMAjB,IAAI,CAACkB,MAAL,GAAc,UAACC,EAAD,EAAKC,QAAL,EAAeC,EAAf,EAAsB;AAClCrB,EAAAA,IAAI,CAACsB,cAAL,CAAoBH,EAApB,EAAwB,UAACI,GAAD,EAAMC,IAAN,EAAe;AACrC,QAAID,GAAJ,EACE,OAAOF,EAAE,CAACE,GAAD,CAAT;AAEF,QAAI,CAACC,IAAL,EACE,OAAOH,EAAE,CAAC,IAAII,KAAJ,CAAU,uBAAV,CAAD,CAAT;AAEFD,IAAAA,IAAI,CAACE,WAAL,CAAiBN,QAAjB,EAA2B,UAACG,GAAD,EAAMC,IAAN,EAAe;AACxC,UAAID,GAAJ,EACE,OAAOF,EAAE,CAACE,GAAD,CAAT;AAEFC,MAAAA,IAAI,CAACG,gBAAL,CAAsB,UAACJ,GAAD,EAAMC,IAAN,EAAe;AACnC,YAAID,GAAJ,EACE,OAAOF,EAAE,CAACE,GAAD,CAAT;AAEFC,QAAAA,IAAI,CAAC,SAAD,CAAJ,GAAkBL,EAAlB;AAEAK,QAAAA,IAAI,CAACI,IAAL,GACGC,IADH,CACQ,YAAM;AACVR,UAAAA,EAAE,CAAC,IAAD,EAAOG,IAAP,CAAF;AACD,SAHH,WAIS,UAACD,GAAD,EAAS;AACdF,UAAAA,EAAE,CAACE,GAAD,CAAF;AACD,SANH;AAOD,OAbD;AAcD,KAlBD;AAmBD,GA1BD;AA2BD,CA5BD;;eA8BevB,I",
      "sourceRoot": "C:\\Users\\ASUS\\Documents\\ucn\\Sistemas NodeJs Base\\Base Html + Node js\\src\\models",
      "sourcesContent": [
        "import Sequelize from 'sequelize';\r\nimport PassportLocalSequelize from 'passport-local-sequelize';\r\nimport config from '../config.json';\r\n\r\nconst db = new Sequelize(config.dbUri, { logging: false });\r\n\r\nconst User = db.define(\r\n  'user',\r\n  {\r\n    user_id: {\r\n      type: Sequelize.STRING,\r\n      primaryKey: true\r\n    },\r\n    name: Sequelize.STRING,\r\n    password_hash: Sequelize.STRING,\r\n    password_salt: Sequelize.STRING,\r\n    user_type_id: Sequelize.STRING,\r\n    email: Sequelize.STRING,\r\n  },\r\n  {\r\n    freezeTableName: true,\r\n    timestamps: false\r\n  }\r\n);\r\n\r\nPassportLocalSequelize.attachToUser(User, {\r\n  usernameField: 'user_id',\r\n  hashField: 'password_hash',\r\n  saltField: 'password_salt'\r\n});\r\n\r\nUser.update = (id, password, cb) => {\r\n  User.findByUsername(id, (err, user) => {\r\n    if (err)\r\n      return cb(err);\r\n\r\n    if (!user)\r\n      return cb(new Error('El usuario no existe.'));\r\n\r\n    user.setPassword(password, (err, user) => {\r\n      if (err)\r\n        return cb(err);\r\n\r\n      user.setActivationKey((err, user) => {\r\n        if (err)\r\n          return cb(err);\r\n\r\n        user['user_id'] = id;\r\n\r\n        user.save()\r\n          .then(() => {\r\n            cb(null, user);\r\n          })\r\n          .catch((err) => {\r\n            cb(err)\r\n          });\r\n      });\r\n    });\r\n  });\r\n};\r\n\r\nexport default User;"
      ]
    },
    "sourceType": "script",
    "mtime": 1564939130526
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\ASUS\\\\Documents\\\\ucn\\\\Sistemas NodeJs Base\\\\Base Html + Node js\\\\src\\\\middleware\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\ASUS\\\\Documents\\\\ucn\\\\Sistemas NodeJs Base\\\\Base Html + Node js\",\"filename\":\"C:\\\\Users\\\\ASUS\\\\Documents\\\\ucn\\\\Sistemas NodeJs Base\\\\Base Html + Node js\\\\src\\\\middleware\\\\FormValidator.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\ASUS\\\\Documents\\\\ucn\\\\Sistemas NodeJs Base\\\\Base Html + Node js\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\ASUS\\Documents\\ucn\\Sistemas NodeJs Base\\Base Html + Node js\\src\\middleware",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\ASUS\\Documents\\ucn\\Sistemas NodeJs Base\\Base Html + Node js",
      "filename": "C:\\Users\\ASUS\\Documents\\ucn\\Sistemas NodeJs Base\\Base Html + Node js\\src\\middleware\\FormValidator.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\ASUS\\Documents\\ucn\\Sistemas NodeJs Base\\Base Html + Node js",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\ASUS\\Documents\\ucn\\Sistemas NodeJs Base\\Base Html + Node js\\src\\middleware\\FormValidator.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\ASUS\\Documents\\ucn\\Sistemas NodeJs Base\\Base Html + Node js\\src\\middleware\\FormValidator.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\ASUS\\Documents\\ucn\\Sistemas NodeJs Base\\Base Html + Node js\\src\\middleware",
        "sourceFileName": "FormValidator.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _isEmpty = _interopRequireDefault(require(\"is-empty\"));\n\nvar _rutjs = _interopRequireDefault(require(\"rutjs\"));\n\nvar _validator = _interopRequireDefault(require(\"validator\"));\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar validationFunctions = {};\nvar _default = validationFunctions;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkZvcm1WYWxpZGF0b3IuanMiXSwibmFtZXMiOlsidmFsaWRhdGlvbkZ1bmN0aW9ucyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBRUEsSUFBTUEsbUJBQW1CLEdBQUcsRUFBNUI7ZUFHZUEsbUIiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxBU1VTXFxEb2N1bWVudHNcXHVjblxcU2lzdGVtYXMgTm9kZUpzIEJhc2VcXEJhc2UgSHRtbCArIE5vZGUganNcXHNyY1xcbWlkZGxld2FyZSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBlbXB0eSBmcm9tICdpcy1lbXB0eSc7XHJcbmltcG9ydCBSdXQgZnJvbSAncnV0anMnO1xyXG5pbXBvcnQgdmFsaWRhdG9yIGZyb20gJ3ZhbGlkYXRvcic7XHJcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50JztcclxuXHJcbmNvbnN0IHZhbGlkYXRpb25GdW5jdGlvbnMgPSB7fTtcclxuXHJcblxyXG5leHBvcnQgZGVmYXVsdCB2YWxpZGF0aW9uRnVuY3Rpb25zOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "FormValidator.js"
      ],
      "names": [
        "validationFunctions"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,mBAAmB,GAAG,EAA5B;eAGeA,mB",
      "sourceRoot": "C:\\Users\\ASUS\\Documents\\ucn\\Sistemas NodeJs Base\\Base Html + Node js\\src\\middleware",
      "sourcesContent": [
        "import empty from 'is-empty';\r\nimport Rut from 'rutjs';\r\nimport validator from 'validator';\r\nimport moment from 'moment';\r\n\r\nconst validationFunctions = {};\r\n\r\n\r\nexport default validationFunctions;"
      ]
    },
    "sourceType": "script",
    "mtime": 1564938906744
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\ASUS\\\\Documents\\\\ucn\\\\Sistemas NodeJs Base\\\\Base Html + Node js\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\ASUS\\\\Documents\\\\ucn\\\\Sistemas NodeJs Base\\\\Base Html + Node js\",\"filename\":\"C:\\\\Users\\\\ASUS\\\\Documents\\\\ucn\\\\Sistemas NodeJs Base\\\\Base Html + Node js\\\\src\\\\routes\\\\auth.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\ASUS\\\\Documents\\\\ucn\\\\Sistemas NodeJs Base\\\\Base Html + Node js\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\ASUS\\Documents\\ucn\\Sistemas NodeJs Base\\Base Html + Node js\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\ASUS\\Documents\\ucn\\Sistemas NodeJs Base\\Base Html + Node js",
      "filename": "C:\\Users\\ASUS\\Documents\\ucn\\Sistemas NodeJs Base\\Base Html + Node js\\src\\routes\\auth.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\ASUS\\Documents\\ucn\\Sistemas NodeJs Base\\Base Html + Node js",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\ASUS\\Documents\\ucn\\Sistemas NodeJs Base\\Base Html + Node js\\src\\routes\\auth.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\ASUS\\Documents\\ucn\\Sistemas NodeJs Base\\Base Html + Node js\\src\\routes\\auth.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\ASUS\\Documents\\ucn\\Sistemas NodeJs Base\\Base Html + Node js\\src\\routes",
        "sourceFileName": "auth.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _passport = _interopRequireDefault(require(\"passport\"));\n\nvar _user = _interopRequireDefault(require(\"../models/user\"));\n\nvar _postgresAPI = _interopRequireDefault(require(\"../middleware/postgresAPI\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar router = new _express[\"default\"].Router();\nrouter.post('/login', _passport[\"default\"].authenticate('local'), function (req, res) {\n  return res.json({\n    success: true,\n    message: 'Ha logrado ingresar al sistema con éxito!',\n    user: req.user\n  });\n});\nrouter.get('/checkLogin', function (req, res) {\n  res.status(200).json({\n    logged: true\n  });\n});\nrouter.get('/logout', function (req, res) {\n  req.logOut();\n  res.redirect('/login');\n});\nrouter.get('/update', function (req, res) {\n  _user[\"default\"].update('19.207.278-6', 'Eduardyto68', function (err, user) {\n    if (err) {\n      return res.status(400).json({\n        success: false,\n        message: 'Error al actualizar la contraseña.',\n        error: err\n      });\n    } else {\n      return res.status(200).json({\n        success: true,\n        message: 'La contraseña fue actualizada'\n      });\n    }\n  });\n});\nrouter.get('/register', function (req, res) {\n  _user[\"default\"].register({\n    user_id: '19.422.959-3',\n    user_type_id: 'ADM',\n    name: 'Francisca Hernández'\n  }, 'proyectopenuelas18', function (err, user) {\n    console.log(err);\n    res.json({\n      user: user,\n      err: err\n    });\n  });\n});\n/* router.get('/register', (req, res) => {\r\n  User.register(\r\n    {user_id: '19.153.962-1', user_type_id: 'AD', name: 'Rosita Hormann'},\r\n    'asd123',\r\n    (err, user) => \r\n    {\r\n      console.log(err);\r\n      res.json({user, err})\r\n    }\r\n  );\r\n}); */\n\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGguanMiXSwibmFtZXMiOlsicm91dGVyIiwiRXhwcmVzcyIsIlJvdXRlciIsInBvc3QiLCJQYXNzcG9ydCIsImF1dGhlbnRpY2F0ZSIsInJlcSIsInJlcyIsImpzb24iLCJzdWNjZXNzIiwibWVzc2FnZSIsInVzZXIiLCJnZXQiLCJzdGF0dXMiLCJsb2dnZWQiLCJsb2dPdXQiLCJyZWRpcmVjdCIsIlVzZXIiLCJ1cGRhdGUiLCJlcnIiLCJlcnJvciIsInJlZ2lzdGVyIiwidXNlcl9pZCIsInVzZXJfdHlwZV9pZCIsIm5hbWUiLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxNQUFNLEdBQUcsSUFBSUMsb0JBQVFDLE1BQVosRUFBZjtBQUVBRixNQUFNLENBQUNHLElBQVAsQ0FBWSxRQUFaLEVBQXNCQyxxQkFBU0MsWUFBVCxDQUFzQixPQUF0QixDQUF0QixFQUFzRCxVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNsRSxTQUFPQSxHQUFHLENBQUNDLElBQUosQ0FBUztBQUNkQyxJQUFBQSxPQUFPLEVBQUUsSUFESztBQUVkQyxJQUFBQSxPQUFPLEVBQUUsMkNBRks7QUFHZEMsSUFBQUEsSUFBSSxFQUFFTCxHQUFHLENBQUNLO0FBSEksR0FBVCxDQUFQO0FBS0QsQ0FORDtBQVFBWCxNQUFNLENBQUNZLEdBQVAsQ0FBVyxhQUFYLEVBQTBCLFVBQUNOLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ3RDQSxFQUFBQSxHQUFHLENBQUNNLE1BQUosQ0FBVyxHQUFYLEVBQWdCTCxJQUFoQixDQUFxQjtBQUNuQk0sSUFBQUEsTUFBTSxFQUFFO0FBRFcsR0FBckI7QUFHRCxDQUpEO0FBTUFkLE1BQU0sQ0FBQ1ksR0FBUCxDQUFXLFNBQVgsRUFBc0IsVUFBQ04sR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDbENELEVBQUFBLEdBQUcsQ0FBQ1MsTUFBSjtBQUNBUixFQUFBQSxHQUFHLENBQUNTLFFBQUosQ0FBYSxRQUFiO0FBQ0QsQ0FIRDtBQUtBaEIsTUFBTSxDQUFDWSxHQUFQLENBQVcsU0FBWCxFQUFzQixVQUFDTixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNsQ1UsbUJBQUtDLE1BQUwsQ0FDRSxjQURGLEVBQ2lCLGFBRGpCLEVBRUUsVUFBQ0MsR0FBRCxFQUFNUixJQUFOLEVBQWU7QUFDYixRQUFHUSxHQUFILEVBQVE7QUFDTixhQUFPWixHQUFHLENBQUNNLE1BQUosQ0FBVyxHQUFYLEVBQWdCTCxJQUFoQixDQUFxQjtBQUMxQkMsUUFBQUEsT0FBTyxFQUFFLEtBRGlCO0FBRTFCQyxRQUFBQSxPQUFPLEVBQUUsb0NBRmlCO0FBRzFCVSxRQUFBQSxLQUFLLEVBQUVEO0FBSG1CLE9BQXJCLENBQVA7QUFLRCxLQU5ELE1BTU87QUFDTCxhQUFPWixHQUFHLENBQUNNLE1BQUosQ0FBVyxHQUFYLEVBQWdCTCxJQUFoQixDQUFxQjtBQUMxQkMsUUFBQUEsT0FBTyxFQUFFLElBRGlCO0FBRTFCQyxRQUFBQSxPQUFPLEVBQUU7QUFGaUIsT0FBckIsQ0FBUDtBQUlEO0FBQ0YsR0FmSDtBQWlCRCxDQWxCRDtBQXFCQVYsTUFBTSxDQUFDWSxHQUFQLENBQVcsV0FBWCxFQUF3QixVQUFDTixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNwQ1UsbUJBQUtJLFFBQUwsQ0FDRTtBQUFDQyxJQUFBQSxPQUFPLEVBQUUsY0FBVjtBQUEwQkMsSUFBQUEsWUFBWSxFQUFFLEtBQXhDO0FBQStDQyxJQUFBQSxJQUFJLEVBQUU7QUFBckQsR0FERixFQUVFLG9CQUZGLEVBR0UsVUFBQ0wsR0FBRCxFQUFNUixJQUFOLEVBQ0E7QUFDRWMsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlQLEdBQVo7QUFDQVosSUFBQUEsR0FBRyxDQUFDQyxJQUFKLENBQVM7QUFBQ0csTUFBQUEsSUFBSSxFQUFKQSxJQUFEO0FBQU9RLE1BQUFBLEdBQUcsRUFBSEE7QUFBUCxLQUFUO0FBQ0QsR0FQSDtBQVNELENBVkQ7QUFhQTs7Ozs7Ozs7Ozs7O2VBY2VuQixNIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcQVNVU1xcRG9jdW1lbnRzXFx1Y25cXFNpc3RlbWFzIE5vZGVKcyBCYXNlXFxCYXNlIEh0bWwgKyBOb2RlIGpzXFxzcmNcXHJvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBFeHByZXNzIGZyb20gJ2V4cHJlc3MnO1xyXG5pbXBvcnQgUGFzc3BvcnQgZnJvbSAncGFzc3BvcnQnO1xyXG5pbXBvcnQgVXNlciBmcm9tICcuLi9tb2RlbHMvdXNlcic7XHJcbmltcG9ydCBkYiBmcm9tICcuLi9taWRkbGV3YXJlL3Bvc3RncmVzQVBJJztcclxuXHJcbmNvbnN0IHJvdXRlciA9IG5ldyBFeHByZXNzLlJvdXRlcigpO1xyXG5cclxucm91dGVyLnBvc3QoJy9sb2dpbicsIFBhc3Nwb3J0LmF1dGhlbnRpY2F0ZSgnbG9jYWwnKSwgKHJlcSwgcmVzKSA9PiB7XHJcbiAgcmV0dXJuIHJlcy5qc29uKHtcclxuICAgIHN1Y2Nlc3M6IHRydWUsXHJcbiAgICBtZXNzYWdlOiAnSGEgbG9ncmFkbyBpbmdyZXNhciBhbCBzaXN0ZW1hIGNvbiDDqXhpdG8hJyxcclxuICAgIHVzZXI6IHJlcS51c2VyXHJcbiAgfSk7XHJcbn0pO1xyXG5cclxucm91dGVyLmdldCgnL2NoZWNrTG9naW4nLCAocmVxLCByZXMpID0+IHtcclxuICByZXMuc3RhdHVzKDIwMCkuanNvbih7XHJcbiAgICBsb2dnZWQ6IHRydWVcclxuICB9KTtcclxufSk7XHJcblxyXG5yb3V0ZXIuZ2V0KCcvbG9nb3V0JywgKHJlcSwgcmVzKSA9PiB7XHJcbiAgcmVxLmxvZ091dCgpO1xyXG4gIHJlcy5yZWRpcmVjdCgnL2xvZ2luJyk7XHJcbn0pO1xyXG5cclxucm91dGVyLmdldCgnL3VwZGF0ZScsIChyZXEsIHJlcykgPT4ge1xyXG4gIFVzZXIudXBkYXRlKFxyXG4gICAgJzE5LjIwNy4yNzgtNicsJ0VkdWFyZHl0bzY4JyxcclxuICAgIChlcnIsIHVzZXIpID0+IHtcclxuICAgICAgaWYoZXJyKSB7XHJcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHtcclxuICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxyXG4gICAgICAgICAgbWVzc2FnZTogJ0Vycm9yIGFsIGFjdHVhbGl6YXIgbGEgY29udHJhc2XDsWEuJyxcclxuICAgICAgICAgIGVycm9yOiBlcnJcclxuICAgICAgICB9KVxyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbih7XHJcbiAgICAgICAgICBzdWNjZXNzOiB0cnVlLFxyXG4gICAgICAgICAgbWVzc2FnZTogJ0xhIGNvbnRyYXNlw7FhIGZ1ZSBhY3R1YWxpemFkYSdcclxuICAgICAgICB9KVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgKTtcclxufSk7XHJcblxyXG5cclxucm91dGVyLmdldCgnL3JlZ2lzdGVyJywgKHJlcSwgcmVzKSA9PiB7XHJcbiAgVXNlci5yZWdpc3RlcihcclxuICAgIHt1c2VyX2lkOiAnMTkuNDIyLjk1OS0zJywgdXNlcl90eXBlX2lkOiAnQURNJywgbmFtZTogJ0ZyYW5jaXNjYSBIZXJuw6FuZGV6J30sXHJcbiAgICAncHJveWVjdG9wZW51ZWxhczE4JyxcclxuICAgIChlcnIsIHVzZXIpID0+IFxyXG4gICAge1xyXG4gICAgICBjb25zb2xlLmxvZyhlcnIpO1xyXG4gICAgICByZXMuanNvbih7dXNlciwgZXJyfSlcclxuICAgIH1cclxuICApO1xyXG59KTtcclxuXHJcblxyXG4vKiByb3V0ZXIuZ2V0KCcvcmVnaXN0ZXInLCAocmVxLCByZXMpID0+IHtcclxuICBVc2VyLnJlZ2lzdGVyKFxyXG4gICAge3VzZXJfaWQ6ICcxOS4xNTMuOTYyLTEnLCB1c2VyX3R5cGVfaWQ6ICdBRCcsIG5hbWU6ICdSb3NpdGEgSG9ybWFubid9LFxyXG4gICAgJ2FzZDEyMycsXHJcbiAgICAoZXJyLCB1c2VyKSA9PiBcclxuICAgIHtcclxuICAgICAgY29uc29sZS5sb2coZXJyKTtcclxuICAgICAgcmVzLmpzb24oe3VzZXIsIGVycn0pXHJcbiAgICB9XHJcbiAgKTtcclxufSk7ICovXHJcblxyXG5cclxuXHJcbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "auth.js"
      ],
      "names": [
        "router",
        "Express",
        "Router",
        "post",
        "Passport",
        "authenticate",
        "req",
        "res",
        "json",
        "success",
        "message",
        "user",
        "get",
        "status",
        "logged",
        "logOut",
        "redirect",
        "User",
        "update",
        "err",
        "error",
        "register",
        "user_id",
        "user_type_id",
        "name",
        "console",
        "log"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,MAAM,GAAG,IAAIC,oBAAQC,MAAZ,EAAf;AAEAF,MAAM,CAACG,IAAP,CAAY,QAAZ,EAAsBC,qBAASC,YAAT,CAAsB,OAAtB,CAAtB,EAAsD,UAACC,GAAD,EAAMC,GAAN,EAAc;AAClE,SAAOA,GAAG,CAACC,IAAJ,CAAS;AACdC,IAAAA,OAAO,EAAE,IADK;AAEdC,IAAAA,OAAO,EAAE,2CAFK;AAGdC,IAAAA,IAAI,EAAEL,GAAG,CAACK;AAHI,GAAT,CAAP;AAKD,CAND;AAQAX,MAAM,CAACY,GAAP,CAAW,aAAX,EAA0B,UAACN,GAAD,EAAMC,GAAN,EAAc;AACtCA,EAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBL,IAAhB,CAAqB;AACnBM,IAAAA,MAAM,EAAE;AADW,GAArB;AAGD,CAJD;AAMAd,MAAM,CAACY,GAAP,CAAW,SAAX,EAAsB,UAACN,GAAD,EAAMC,GAAN,EAAc;AAClCD,EAAAA,GAAG,CAACS,MAAJ;AACAR,EAAAA,GAAG,CAACS,QAAJ,CAAa,QAAb;AACD,CAHD;AAKAhB,MAAM,CAACY,GAAP,CAAW,SAAX,EAAsB,UAACN,GAAD,EAAMC,GAAN,EAAc;AAClCU,mBAAKC,MAAL,CACE,cADF,EACiB,aADjB,EAEE,UAACC,GAAD,EAAMR,IAAN,EAAe;AACb,QAAGQ,GAAH,EAAQ;AACN,aAAOZ,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBL,IAAhB,CAAqB;AAC1BC,QAAAA,OAAO,EAAE,KADiB;AAE1BC,QAAAA,OAAO,EAAE,oCAFiB;AAG1BU,QAAAA,KAAK,EAAED;AAHmB,OAArB,CAAP;AAKD,KAND,MAMO;AACL,aAAOZ,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBL,IAAhB,CAAqB;AAC1BC,QAAAA,OAAO,EAAE,IADiB;AAE1BC,QAAAA,OAAO,EAAE;AAFiB,OAArB,CAAP;AAID;AACF,GAfH;AAiBD,CAlBD;AAqBAV,MAAM,CAACY,GAAP,CAAW,WAAX,EAAwB,UAACN,GAAD,EAAMC,GAAN,EAAc;AACpCU,mBAAKI,QAAL,CACE;AAACC,IAAAA,OAAO,EAAE,cAAV;AAA0BC,IAAAA,YAAY,EAAE,KAAxC;AAA+CC,IAAAA,IAAI,EAAE;AAArD,GADF,EAEE,oBAFF,EAGE,UAACL,GAAD,EAAMR,IAAN,EACA;AACEc,IAAAA,OAAO,CAACC,GAAR,CAAYP,GAAZ;AACAZ,IAAAA,GAAG,CAACC,IAAJ,CAAS;AAACG,MAAAA,IAAI,EAAJA,IAAD;AAAOQ,MAAAA,GAAG,EAAHA;AAAP,KAAT;AACD,GAPH;AASD,CAVD;AAaA;;;;;;;;;;;;eAcenB,M",
      "sourceRoot": "C:\\Users\\ASUS\\Documents\\ucn\\Sistemas NodeJs Base\\Base Html + Node js\\src\\routes",
      "sourcesContent": [
        "import Express from 'express';\r\nimport Passport from 'passport';\r\nimport User from '../models/user';\r\nimport db from '../middleware/postgresAPI';\r\n\r\nconst router = new Express.Router();\r\n\r\nrouter.post('/login', Passport.authenticate('local'), (req, res) => {\r\n  return res.json({\r\n    success: true,\r\n    message: 'Ha logrado ingresar al sistema con éxito!',\r\n    user: req.user\r\n  });\r\n});\r\n\r\nrouter.get('/checkLogin', (req, res) => {\r\n  res.status(200).json({\r\n    logged: true\r\n  });\r\n});\r\n\r\nrouter.get('/logout', (req, res) => {\r\n  req.logOut();\r\n  res.redirect('/login');\r\n});\r\n\r\nrouter.get('/update', (req, res) => {\r\n  User.update(\r\n    '19.207.278-6','Eduardyto68',\r\n    (err, user) => {\r\n      if(err) {\r\n        return res.status(400).json({\r\n          success: false,\r\n          message: 'Error al actualizar la contraseña.',\r\n          error: err\r\n        })\r\n      } else {\r\n        return res.status(200).json({\r\n          success: true,\r\n          message: 'La contraseña fue actualizada'\r\n        })\r\n      }\r\n    }\r\n  );\r\n});\r\n\r\n\r\nrouter.get('/register', (req, res) => {\r\n  User.register(\r\n    {user_id: '19.422.959-3', user_type_id: 'ADM', name: 'Francisca Hernández'},\r\n    'proyectopenuelas18',\r\n    (err, user) => \r\n    {\r\n      console.log(err);\r\n      res.json({user, err})\r\n    }\r\n  );\r\n});\r\n\r\n\r\n/* router.get('/register', (req, res) => {\r\n  User.register(\r\n    {user_id: '19.153.962-1', user_type_id: 'AD', name: 'Rosita Hormann'},\r\n    'asd123',\r\n    (err, user) => \r\n    {\r\n      console.log(err);\r\n      res.json({user, err})\r\n    }\r\n  );\r\n}); */\r\n\r\n\r\n\r\nexport default router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1565765094804
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Base Html + Node js\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Base Html + Node js\",\"filename\":\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Base Html + Node js\\\\src\\\\server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Base Html + Node js\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\ASUS\\Desktop\\Base Html + Node js\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\ASUS\\Desktop\\Base Html + Node js",
      "filename": "C:\\Users\\ASUS\\Desktop\\Base Html + Node js\\src\\server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\ASUS\\Desktop\\Base Html + Node js",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\ASUS\\Desktop\\Base Html + Node js\\src\\server.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\ASUS\\Desktop\\Base Html + Node js\\src\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\ASUS\\Desktop\\Base Html + Node js\\src",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _config = _interopRequireDefault(require(\"./config.json\"));\n\nvar _api = _interopRequireDefault(require(\"./routes/api\"));\n\nvar _pg = _interopRequireDefault(require(\"pg\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _methodOverride = _interopRequireDefault(require(\"method-override\"));\n\nvar _connectPgSimple = _interopRequireDefault(require(\"connect-pg-simple\"));\n\nvar _passport = _interopRequireDefault(require(\"passport\"));\n\nvar _expressSession = _interopRequireDefault(require(\"express-session\"));\n\nvar _cookieParser = _interopRequireDefault(require(\"cookie-parser\"));\n\nvar _auth = _interopRequireDefault(require(\"./routes/auth\"));\n\nvar _user = _interopRequireDefault(require(\"./models/user\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar app = (0, _express[\"default\"])();\napp.set('view engine', 'ejs');\napp.set('views', _path[\"default\"].join(__dirname, 'views'));\napp.use(_express[\"default\"][\"static\"](_path[\"default\"].join(__dirname, 'static')));\napp.use((0, _methodOverride[\"default\"])());\napp.use(_bodyParser[\"default\"].urlencoded({\n  extended: false\n}));\nvar pgSession = (0, _connectPgSimple[\"default\"])(_expressSession[\"default\"]);\napp.use((0, _cookieParser[\"default\"])());\napp.use((0, _expressSession[\"default\"])({\n  store: new pgSession({\n    pg: _pg[\"default\"],\n    conString: _config[\"default\"].dbUri,\n    tableName: 'session',\n    schemaName: 'public'\n  }),\n  secret: _config[\"default\"].secret,\n  resave: false,\n  saveUninitialized: false,\n  cookie: {\n    httpOnly: true,\n    secure: false\n  }\n}));\napp.use(_passport[\"default\"].initialize());\napp.use(_passport[\"default\"].session());\n\n_passport[\"default\"].use(_user[\"default\"].createStrategy());\n\n_passport[\"default\"].serializeUser(_user[\"default\"].serializeUser());\n\n_passport[\"default\"].deserializeUser(_user[\"default\"].deserializeUser());\n\napp.get('/', function (req, res) {\n  res.render('test');\n});\n\nvar isAuthenticated = function isAuthenticated(req, res, next) {\n  if (req.isAuthenticated()) {\n    return next();\n  }\n\n  res.status(401).json({\n    error: 'Unauthorized access',\n    message: 'User must be logged to access the specified URI'\n  });\n};\n\napp.use(\"/auth\", _auth[\"default\"]); //app.use(`/api`, isAuthenticated , apiRoutes); \n\napp.use(\"/api\", _api[\"default\"]);\nvar port = 3000;\nif (process.env.NODE_PORT) port = process.env.NODE_PORT;\napp.listen(port, function () {\n  console.log(\"El servidor est\\xE1 escuchando en el puerto \".concat(port));\n}); // escuchar el puerto\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJhcHAiLCJzZXQiLCJwYXRoIiwiam9pbiIsIl9fZGlybmFtZSIsInVzZSIsImV4cHJlc3MiLCJCb2R5UGFyc2VyIiwidXJsZW5jb2RlZCIsImV4dGVuZGVkIiwicGdTZXNzaW9uIiwiU2Vzc2lvbiIsInN0b3JlIiwicGciLCJQZyIsImNvblN0cmluZyIsImNvbmZpZyIsImRiVXJpIiwidGFibGVOYW1lIiwic2NoZW1hTmFtZSIsInNlY3JldCIsInJlc2F2ZSIsInNhdmVVbmluaXRpYWxpemVkIiwiY29va2llIiwiaHR0cE9ubHkiLCJzZWN1cmUiLCJQYXNzcG9ydCIsImluaXRpYWxpemUiLCJzZXNzaW9uIiwidXNlciIsImNyZWF0ZVN0cmF0ZWd5Iiwic2VyaWFsaXplVXNlciIsImRlc2VyaWFsaXplVXNlciIsImdldCIsInJlcSIsInJlcyIsInJlbmRlciIsImlzQXV0aGVudGljYXRlZCIsIm5leHQiLCJzdGF0dXMiLCJqc29uIiwiZXJyb3IiLCJtZXNzYWdlIiwiYXV0aFJvdXRlcyIsImFwaVJvdXRlcyIsInBvcnQiLCJwcm9jZXNzIiwiZW52IiwiTk9ERV9QT1JUIiwibGlzdGVuIiwiY29uc29sZSIsImxvZyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUVBLElBQU1BLEdBQUcsR0FBRywwQkFBWjtBQUVBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSxhQUFSLEVBQXVCLEtBQXZCO0FBQ0FELEdBQUcsQ0FBQ0MsR0FBSixDQUFRLE9BQVIsRUFBaUJDLGlCQUFLQyxJQUFMLENBQVVDLFNBQVYsRUFBcUIsT0FBckIsQ0FBakI7QUFDQUosR0FBRyxDQUFDSyxHQUFKLENBQVFDLDhCQUFlSixpQkFBS0MsSUFBTCxDQUFVQyxTQUFWLEVBQXFCLFFBQXJCLENBQWYsQ0FBUjtBQUNBSixHQUFHLENBQUNLLEdBQUosQ0FBUSxpQ0FBUjtBQUNBTCxHQUFHLENBQUNLLEdBQUosQ0FBUUUsdUJBQVdDLFVBQVgsQ0FBc0I7QUFBRUMsRUFBQUEsUUFBUSxFQUFFO0FBQVosQ0FBdEIsQ0FBUjtBQUNBLElBQU1DLFNBQVMsR0FBRyxpQ0FBVUMsMEJBQVYsQ0FBbEI7QUFDQVgsR0FBRyxDQUFDSyxHQUFKLENBQVEsK0JBQVI7QUFDQUwsR0FBRyxDQUFDSyxHQUFKLENBQVEsZ0NBQVE7QUFDZE8sRUFBQUEsS0FBSyxFQUFFLElBQUlGLFNBQUosQ0FBYztBQUNuQkcsSUFBQUEsRUFBRSxFQUFFQyxjQURlO0FBRW5CQyxJQUFBQSxTQUFTLEVBQUVDLG1CQUFPQyxLQUZDO0FBR25CQyxJQUFBQSxTQUFTLEVBQUUsU0FIUTtBQUluQkMsSUFBQUEsVUFBVSxFQUFFO0FBSk8sR0FBZCxDQURPO0FBT2RDLEVBQUFBLE1BQU0sRUFBRUosbUJBQU9JLE1BUEQ7QUFRZEMsRUFBQUEsTUFBTSxFQUFFLEtBUk07QUFTZEMsRUFBQUEsaUJBQWlCLEVBQUUsS0FUTDtBQVVkQyxFQUFBQSxNQUFNLEVBQUU7QUFBQ0MsSUFBQUEsUUFBUSxFQUFFLElBQVg7QUFBaUJDLElBQUFBLE1BQU0sRUFBRTtBQUF6QjtBQVZNLENBQVIsQ0FBUjtBQWFBekIsR0FBRyxDQUFDSyxHQUFKLENBQVFxQixxQkFBU0MsVUFBVCxFQUFSO0FBQ0EzQixHQUFHLENBQUNLLEdBQUosQ0FBUXFCLHFCQUFTRSxPQUFULEVBQVI7O0FBRUFGLHFCQUFTckIsR0FBVCxDQUFhd0IsaUJBQUtDLGNBQUwsRUFBYjs7QUFDQUoscUJBQVNLLGFBQVQsQ0FBdUJGLGlCQUFLRSxhQUFMLEVBQXZCOztBQUNBTCxxQkFBU00sZUFBVCxDQUF5QkgsaUJBQUtHLGVBQUwsRUFBekI7O0FBRUFoQyxHQUFHLENBQUNpQyxHQUFKLENBQVEsR0FBUixFQUFZLFVBQUNDLEdBQUQsRUFBS0MsR0FBTCxFQUFXO0FBQ25CQSxFQUFBQSxHQUFHLENBQUNDLE1BQUosQ0FBVyxNQUFYO0FBQ0gsQ0FGRDs7QUFJQSxJQUFNQyxlQUFlLEdBQUcsU0FBbEJBLGVBQWtCLENBQUNILEdBQUQsRUFBTUMsR0FBTixFQUFXRyxJQUFYLEVBQW9CO0FBQ3hDLE1BQUlKLEdBQUcsQ0FBQ0csZUFBSixFQUFKLEVBQTJCO0FBQ3pCLFdBQU9DLElBQUksRUFBWDtBQUNEOztBQUNESCxFQUFBQSxHQUFHLENBQUNJLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUNuQkMsSUFBQUEsS0FBSyxFQUFFLHFCQURZO0FBRW5CQyxJQUFBQSxPQUFPLEVBQUU7QUFGVSxHQUFyQjtBQUlILENBUkQ7O0FBVUExQyxHQUFHLENBQUNLLEdBQUosVUFBaUJzQyxnQkFBakIsRSxDQUNBOztBQUNBM0MsR0FBRyxDQUFDSyxHQUFKLFNBQWdCdUMsZUFBaEI7QUFFQSxJQUFJQyxJQUFJLEdBQUcsSUFBWDtBQUVBLElBQUlDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxTQUFoQixFQUEyQkgsSUFBSSxHQUFHQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsU0FBbkI7QUFFM0JoRCxHQUFHLENBQUNpRCxNQUFKLENBQVdKLElBQVgsRUFBaUIsWUFBTTtBQUNuQkssRUFBQUEsT0FBTyxDQUFDQyxHQUFSLHVEQUF3RE4sSUFBeEQ7QUFDSCxDQUZELEUsQ0FFSSIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEFTVVNcXERlc2t0b3BcXEJhc2UgSHRtbCArIE5vZGUganNcXHNyYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xyXG5pbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcclxuaW1wb3J0IGNvbmZpZyBmcm9tICcuL2NvbmZpZy5qc29uJztcclxuaW1wb3J0IGFwaVJvdXRlcyBmcm9tICcuL3JvdXRlcy9hcGknO1xyXG5pbXBvcnQgUGcgZnJvbSAncGcnO1xyXG5pbXBvcnQgQm9keVBhcnNlciBmcm9tICdib2R5LXBhcnNlcic7XHJcbmltcG9ydCBNZXRob2RPdmVycmlkZSBmcm9tICdtZXRob2Qtb3ZlcnJpZGUnO1xyXG5pbXBvcnQgQ29ubmVjdFBnIGZyb20gJ2Nvbm5lY3QtcGctc2ltcGxlJztcclxuaW1wb3J0IFBhc3Nwb3J0IGZyb20gJ3Bhc3Nwb3J0JztcclxuaW1wb3J0IFNlc3Npb24gZnJvbSAnZXhwcmVzcy1zZXNzaW9uJztcclxuaW1wb3J0IENvb2tpZVBhcnNlciBmcm9tICdjb29raWUtcGFyc2VyJztcclxuaW1wb3J0IGF1dGhSb3V0ZXMgZnJvbSAnLi9yb3V0ZXMvYXV0aCc7XHJcbmltcG9ydCB1c2VyIGZyb20gJy4vbW9kZWxzL3VzZXInO1xyXG5cclxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xyXG5cclxuYXBwLnNldCgndmlldyBlbmdpbmUnLCAnZWpzJyk7XHJcbmFwcC5zZXQoJ3ZpZXdzJywgcGF0aC5qb2luKF9fZGlybmFtZSwgJ3ZpZXdzJykpO1xyXG5hcHAudXNlKGV4cHJlc3Muc3RhdGljKHBhdGguam9pbihfX2Rpcm5hbWUsICdzdGF0aWMnKSkpO1xyXG5hcHAudXNlKE1ldGhvZE92ZXJyaWRlKCkpO1xyXG5hcHAudXNlKEJvZHlQYXJzZXIudXJsZW5jb2RlZCh7IGV4dGVuZGVkOiBmYWxzZSB9KSk7XHJcbmNvbnN0IHBnU2Vzc2lvbiA9IENvbm5lY3RQZyhTZXNzaW9uKTtcclxuYXBwLnVzZShDb29raWVQYXJzZXIoKSk7XHJcbmFwcC51c2UoU2Vzc2lvbih7XHJcbiAgc3RvcmU6IG5ldyBwZ1Nlc3Npb24oe1xyXG4gICAgcGc6IFBnLFxyXG4gICAgY29uU3RyaW5nOiBjb25maWcuZGJVcmksXHJcbiAgICB0YWJsZU5hbWU6ICdzZXNzaW9uJyxcclxuICAgIHNjaGVtYU5hbWU6ICdwdWJsaWMnLFxyXG4gIH0pLFxyXG4gIHNlY3JldDogY29uZmlnLnNlY3JldCxcclxuICByZXNhdmU6IGZhbHNlLFxyXG4gIHNhdmVVbmluaXRpYWxpemVkOiBmYWxzZSxcclxuICBjb29raWU6IHtodHRwT25seTogdHJ1ZSwgc2VjdXJlOiBmYWxzZX1cclxufSkpO1xyXG5cclxuYXBwLnVzZShQYXNzcG9ydC5pbml0aWFsaXplKCkpO1xyXG5hcHAudXNlKFBhc3Nwb3J0LnNlc3Npb24oKSk7XHJcblxyXG5QYXNzcG9ydC51c2UodXNlci5jcmVhdGVTdHJhdGVneSgpKTtcclxuUGFzc3BvcnQuc2VyaWFsaXplVXNlcih1c2VyLnNlcmlhbGl6ZVVzZXIoKSk7XHJcblBhc3Nwb3J0LmRlc2VyaWFsaXplVXNlcih1c2VyLmRlc2VyaWFsaXplVXNlcigpKTtcclxuXHJcbmFwcC5nZXQoJy8nLChyZXEscmVzKT0+e1xyXG4gICAgcmVzLnJlbmRlcigndGVzdCcpO1xyXG59KVxyXG5cclxuY29uc3QgaXNBdXRoZW50aWNhdGVkID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XHJcbiAgICBpZiAocmVxLmlzQXV0aGVudGljYXRlZCgpKSB7XHJcbiAgICAgIHJldHVybiBuZXh0KCk7XHJcbiAgICB9XHJcbiAgICByZXMuc3RhdHVzKDQwMSkuanNvbih7XHJcbiAgICAgIGVycm9yOiAnVW5hdXRob3JpemVkIGFjY2VzcycsXHJcbiAgICAgIG1lc3NhZ2U6ICdVc2VyIG11c3QgYmUgbG9nZ2VkIHRvIGFjY2VzcyB0aGUgc3BlY2lmaWVkIFVSSSdcclxuICAgIH0pO1xyXG59O1xyXG5cclxuYXBwLnVzZShgL2F1dGhgLCBhdXRoUm91dGVzKTtcclxuLy9hcHAudXNlKGAvYXBpYCwgaXNBdXRoZW50aWNhdGVkICwgYXBpUm91dGVzKTsgXHJcbmFwcC51c2UoYC9hcGlgLCBhcGlSb3V0ZXMpOyBcclxuXHJcbmxldCBwb3J0ID0gMzAwMDtcclxuXHJcbmlmIChwcm9jZXNzLmVudi5OT0RFX1BPUlQpIHBvcnQgPSBwcm9jZXNzLmVudi5OT0RFX1BPUlQ7XHJcblxyXG5hcHAubGlzdGVuKHBvcnQsICgpID0+IHtcclxuICAgIGNvbnNvbGUubG9nKGBFbCBzZXJ2aWRvciBlc3TDoSBlc2N1Y2hhbmRvIGVuIGVsIHB1ZXJ0byAke3BvcnR9YCk7XHJcbn0pOyAvLyBlc2N1Y2hhciBlbCBwdWVydG8iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "app",
        "set",
        "path",
        "join",
        "__dirname",
        "use",
        "express",
        "BodyParser",
        "urlencoded",
        "extended",
        "pgSession",
        "Session",
        "store",
        "pg",
        "Pg",
        "conString",
        "config",
        "dbUri",
        "tableName",
        "schemaName",
        "secret",
        "resave",
        "saveUninitialized",
        "cookie",
        "httpOnly",
        "secure",
        "Passport",
        "initialize",
        "session",
        "user",
        "createStrategy",
        "serializeUser",
        "deserializeUser",
        "get",
        "req",
        "res",
        "render",
        "isAuthenticated",
        "next",
        "status",
        "json",
        "error",
        "message",
        "authRoutes",
        "apiRoutes",
        "port",
        "process",
        "env",
        "NODE_PORT",
        "listen",
        "console",
        "log"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,GAAG,GAAG,0BAAZ;AAEAA,GAAG,CAACC,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;AACAD,GAAG,CAACC,GAAJ,CAAQ,OAAR,EAAiBC,iBAAKC,IAAL,CAAUC,SAAV,EAAqB,OAArB,CAAjB;AACAJ,GAAG,CAACK,GAAJ,CAAQC,8BAAeJ,iBAAKC,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAR;AACAJ,GAAG,CAACK,GAAJ,CAAQ,iCAAR;AACAL,GAAG,CAACK,GAAJ,CAAQE,uBAAWC,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AACA,IAAMC,SAAS,GAAG,iCAAUC,0BAAV,CAAlB;AACAX,GAAG,CAACK,GAAJ,CAAQ,+BAAR;AACAL,GAAG,CAACK,GAAJ,CAAQ,gCAAQ;AACdO,EAAAA,KAAK,EAAE,IAAIF,SAAJ,CAAc;AACnBG,IAAAA,EAAE,EAAEC,cADe;AAEnBC,IAAAA,SAAS,EAAEC,mBAAOC,KAFC;AAGnBC,IAAAA,SAAS,EAAE,SAHQ;AAInBC,IAAAA,UAAU,EAAE;AAJO,GAAd,CADO;AAOdC,EAAAA,MAAM,EAAEJ,mBAAOI,MAPD;AAQdC,EAAAA,MAAM,EAAE,KARM;AASdC,EAAAA,iBAAiB,EAAE,KATL;AAUdC,EAAAA,MAAM,EAAE;AAACC,IAAAA,QAAQ,EAAE,IAAX;AAAiBC,IAAAA,MAAM,EAAE;AAAzB;AAVM,CAAR,CAAR;AAaAzB,GAAG,CAACK,GAAJ,CAAQqB,qBAASC,UAAT,EAAR;AACA3B,GAAG,CAACK,GAAJ,CAAQqB,qBAASE,OAAT,EAAR;;AAEAF,qBAASrB,GAAT,CAAawB,iBAAKC,cAAL,EAAb;;AACAJ,qBAASK,aAAT,CAAuBF,iBAAKE,aAAL,EAAvB;;AACAL,qBAASM,eAAT,CAAyBH,iBAAKG,eAAL,EAAzB;;AAEAhC,GAAG,CAACiC,GAAJ,CAAQ,GAAR,EAAY,UAACC,GAAD,EAAKC,GAAL,EAAW;AACnBA,EAAAA,GAAG,CAACC,MAAJ,CAAW,MAAX;AACH,CAFD;;AAIA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACH,GAAD,EAAMC,GAAN,EAAWG,IAAX,EAAoB;AACxC,MAAIJ,GAAG,CAACG,eAAJ,EAAJ,EAA2B;AACzB,WAAOC,IAAI,EAAX;AACD;;AACDH,EAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,IAAAA,KAAK,EAAE,qBADY;AAEnBC,IAAAA,OAAO,EAAE;AAFU,GAArB;AAIH,CARD;;AAUA1C,GAAG,CAACK,GAAJ,UAAiBsC,gBAAjB,E,CACA;;AACA3C,GAAG,CAACK,GAAJ,SAAgBuC,eAAhB;AAEA,IAAIC,IAAI,GAAG,IAAX;AAEA,IAAIC,OAAO,CAACC,GAAR,CAAYC,SAAhB,EAA2BH,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,SAAnB;AAE3BhD,GAAG,CAACiD,MAAJ,CAAWJ,IAAX,EAAiB,YAAM;AACnBK,EAAAA,OAAO,CAACC,GAAR,uDAAwDN,IAAxD;AACH,CAFD,E,CAEI",
      "sourceRoot": "C:\\Users\\ASUS\\Desktop\\Base Html + Node js\\src",
      "sourcesContent": [
        "import express from 'express';\r\nimport path from 'path';\r\nimport config from './config.json';\r\nimport apiRoutes from './routes/api';\r\nimport Pg from 'pg';\r\nimport BodyParser from 'body-parser';\r\nimport MethodOverride from 'method-override';\r\nimport ConnectPg from 'connect-pg-simple';\r\nimport Passport from 'passport';\r\nimport Session from 'express-session';\r\nimport CookieParser from 'cookie-parser';\r\nimport authRoutes from './routes/auth';\r\nimport user from './models/user';\r\n\r\nconst app = express();\r\n\r\napp.set('view engine', 'ejs');\r\napp.set('views', path.join(__dirname, 'views'));\r\napp.use(express.static(path.join(__dirname, 'static')));\r\napp.use(MethodOverride());\r\napp.use(BodyParser.urlencoded({ extended: false }));\r\nconst pgSession = ConnectPg(Session);\r\napp.use(CookieParser());\r\napp.use(Session({\r\n  store: new pgSession({\r\n    pg: Pg,\r\n    conString: config.dbUri,\r\n    tableName: 'session',\r\n    schemaName: 'public',\r\n  }),\r\n  secret: config.secret,\r\n  resave: false,\r\n  saveUninitialized: false,\r\n  cookie: {httpOnly: true, secure: false}\r\n}));\r\n\r\napp.use(Passport.initialize());\r\napp.use(Passport.session());\r\n\r\nPassport.use(user.createStrategy());\r\nPassport.serializeUser(user.serializeUser());\r\nPassport.deserializeUser(user.deserializeUser());\r\n\r\napp.get('/',(req,res)=>{\r\n    res.render('test');\r\n})\r\n\r\nconst isAuthenticated = (req, res, next) => {\r\n    if (req.isAuthenticated()) {\r\n      return next();\r\n    }\r\n    res.status(401).json({\r\n      error: 'Unauthorized access',\r\n      message: 'User must be logged to access the specified URI'\r\n    });\r\n};\r\n\r\napp.use(`/auth`, authRoutes);\r\n//app.use(`/api`, isAuthenticated , apiRoutes); \r\napp.use(`/api`, apiRoutes); \r\n\r\nlet port = 3000;\r\n\r\nif (process.env.NODE_PORT) port = process.env.NODE_PORT;\r\n\r\napp.listen(port, () => {\r\n    console.log(`El servidor está escuchando en el puerto ${port}`);\r\n}); // escuchar el puerto"
      ]
    },
    "sourceType": "script",
    "mtime": 1568152810436
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Base Html + Node js\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Base Html + Node js\",\"filename\":\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Base Html + Node js\\\\src\\\\routes\\\\api.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Base Html + Node js\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\ASUS\\Desktop\\Base Html + Node js\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\ASUS\\Desktop\\Base Html + Node js",
      "filename": "C:\\Users\\ASUS\\Desktop\\Base Html + Node js\\src\\routes\\api.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\ASUS\\Desktop\\Base Html + Node js",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\ASUS\\Desktop\\Base Html + Node js\\src\\routes\\api.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\ASUS\\Desktop\\Base Html + Node js\\src\\routes\\api.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\ASUS\\Desktop\\Base Html + Node js\\src\\routes",
        "sourceFileName": "api.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _postgresAPI = _interopRequireDefault(require(\"../middleware/postgresAPI\"));\n\nvar _FormValidator = _interopRequireDefault(require(\"../middleware/FormValidator\"));\n\nvar _multer = _interopRequireDefault(require(\"multer\"));\n\nvar _fsExtra = _interopRequireDefault(require(\"fs-extra\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar router = _express[\"default\"].Router();\n\nvar requestFormValidation = function requestFormValidation(preValidation, callback) {\n  return function (req, res, next) {\n    if (req.body && req.body.data) req.body = JSON.parse(req.body.data);\n    var formValidation = preValidation(req.body, req.method);\n    if (formValidation.isValid) return callback(req, res, next);\n    res.status(400).json(formValidation);\n  };\n};\n\nrouter.get('/userInfo', function (req, res) {\n  res.status(200).json({\n    name: req.user.name,\n    rut: req.user['user_id'],\n    type: req.user['user_type_id']\n  });\n}); //GET\n\nrouter.get('/test', _postgresAPI[\"default\"].test); //POST\n\nrouter.post('/algo', requestFormValidation(test, exec)); //PUT\n\nrouter.put('/actualizadoalfgo/:id', test); //DELETE\n\nrouter.all('*', function (req, res) {\n  res.status(404).json({\n    message: 'La ruta de la solicitud HTTP no es reconocida por el servidor.'\n  });\n});\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS5qcyJdLCJuYW1lcyI6WyJyb3V0ZXIiLCJFeHByZXNzIiwiUm91dGVyIiwicmVxdWVzdEZvcm1WYWxpZGF0aW9uIiwicHJlVmFsaWRhdGlvbiIsImNhbGxiYWNrIiwicmVxIiwicmVzIiwibmV4dCIsImJvZHkiLCJkYXRhIiwiSlNPTiIsInBhcnNlIiwiZm9ybVZhbGlkYXRpb24iLCJtZXRob2QiLCJpc1ZhbGlkIiwic3RhdHVzIiwianNvbiIsImdldCIsIm5hbWUiLCJ1c2VyIiwicnV0IiwidHlwZSIsImRiIiwidGVzdCIsInBvc3QiLCJleGVjIiwicHV0IiwiYWxsIiwibWVzc2FnZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBRUEsSUFBTUEsTUFBTSxHQUFHQyxvQkFBUUMsTUFBUixFQUFmOztBQUVBLElBQU1DLHFCQUFxQixHQUFHLFNBQXhCQSxxQkFBd0IsQ0FBQ0MsYUFBRCxFQUFnQkMsUUFBaEIsRUFBNkI7QUFDdkQsU0FBTyxVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxFQUFvQjtBQUN2QixRQUFJRixHQUFHLENBQUNHLElBQUosSUFBWUgsR0FBRyxDQUFDRyxJQUFKLENBQVNDLElBQXpCLEVBQ0FKLEdBQUcsQ0FBQ0csSUFBSixHQUFXRSxJQUFJLENBQUNDLEtBQUwsQ0FBV04sR0FBRyxDQUFDRyxJQUFKLENBQVNDLElBQXBCLENBQVg7QUFDQSxRQUFNRyxjQUFjLEdBQUdULGFBQWEsQ0FBQ0UsR0FBRyxDQUFDRyxJQUFMLEVBQVdILEdBQUcsQ0FBQ1EsTUFBZixDQUFwQztBQUNBLFFBQUlELGNBQWMsQ0FBQ0UsT0FBbkIsRUFDQSxPQUFPVixRQUFRLENBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLENBQWY7QUFDQUQsSUFBQUEsR0FBRyxDQUFDUyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJKLGNBQXJCO0FBQ0gsR0FQRDtBQVFILENBVEQ7O0FBV0FiLE1BQU0sQ0FBQ2tCLEdBQVAsQ0FBVyxXQUFYLEVBQXdCLFVBQUNaLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ2xDQSxFQUFBQSxHQUFHLENBQUNTLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUNuQkUsSUFBQUEsSUFBSSxFQUFFYixHQUFHLENBQUNjLElBQUosQ0FBU0QsSUFESTtBQUVuQkUsSUFBQUEsR0FBRyxFQUFFZixHQUFHLENBQUNjLElBQUosQ0FBUyxTQUFULENBRmM7QUFHbkJFLElBQUFBLElBQUksRUFBRWhCLEdBQUcsQ0FBQ2MsSUFBSixDQUFTLGNBQVQ7QUFIYSxHQUFyQjtBQUtILENBTkQsRSxDQVNBOztBQUNBcEIsTUFBTSxDQUFDa0IsR0FBUCxDQUFXLE9BQVgsRUFBbUJLLHdCQUFHQyxJQUF0QixFLENBQ0E7O0FBQ0F4QixNQUFNLENBQUN5QixJQUFQLENBQVksT0FBWixFQUFvQnRCLHFCQUFxQixDQUFDcUIsSUFBRCxFQUFNRSxJQUFOLENBQXpDLEUsQ0FDQTs7QUFDQTFCLE1BQU0sQ0FBQzJCLEdBQVAsQ0FBVyx1QkFBWCxFQUFtQ0gsSUFBbkMsRSxDQUNBOztBQUVBeEIsTUFBTSxDQUFDNEIsR0FBUCxDQUFXLEdBQVgsRUFBZ0IsVUFBQ3RCLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQzFCQSxFQUFBQSxHQUFHLENBQUNTLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUFFWSxJQUFBQSxPQUFPLEVBQUU7QUFBWCxHQUFyQjtBQUNILENBRkQ7ZUFJZTdCLE0iLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxBU1VTXFxEZXNrdG9wXFxCYXNlIEh0bWwgKyBOb2RlIGpzXFxzcmNcXHJvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBFeHByZXNzIGZyb20gJ2V4cHJlc3MnO1xyXG5pbXBvcnQgZGIgZnJvbSAnLi4vbWlkZGxld2FyZS9wb3N0Z3Jlc0FQSSc7XHJcbmltcG9ydCBGb3JtVmFsaWRhdG9yIGZyb20gJy4uL21pZGRsZXdhcmUvRm9ybVZhbGlkYXRvcidcclxuaW1wb3J0IG11bHRlciBmcm9tICdtdWx0ZXInXHJcbmltcG9ydCBmcyBmcm9tICdmcy1leHRyYSdcclxuXHJcbmNvbnN0IHJvdXRlciA9IEV4cHJlc3MuUm91dGVyKCk7XHJcblxyXG5jb25zdCByZXF1ZXN0Rm9ybVZhbGlkYXRpb24gPSAocHJlVmFsaWRhdGlvbiwgY2FsbGJhY2spID0+IHtcclxuICAgIHJldHVybiAocmVxLCByZXMsIG5leHQpID0+IHtcclxuICAgICAgICBpZiAocmVxLmJvZHkgJiYgcmVxLmJvZHkuZGF0YSlcclxuICAgICAgICByZXEuYm9keSA9IEpTT04ucGFyc2UocmVxLmJvZHkuZGF0YSk7XHJcbiAgICAgICAgY29uc3QgZm9ybVZhbGlkYXRpb24gPSBwcmVWYWxpZGF0aW9uKHJlcS5ib2R5LCByZXEubWV0aG9kKTtcclxuICAgICAgICBpZiAoZm9ybVZhbGlkYXRpb24uaXNWYWxpZClcclxuICAgICAgICByZXR1cm4gY2FsbGJhY2socmVxLCByZXMsIG5leHQpO1xyXG4gICAgICAgIHJlcy5zdGF0dXMoNDAwKS5qc29uKGZvcm1WYWxpZGF0aW9uKTtcclxuICAgIH07XHJcbn07XHJcblxyXG5yb3V0ZXIuZ2V0KCcvdXNlckluZm8nLCAocmVxLCByZXMpID0+IHtcclxuICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKHtcclxuICAgICAgbmFtZTogcmVxLnVzZXIubmFtZSxcclxuICAgICAgcnV0OiByZXEudXNlclsndXNlcl9pZCddLFxyXG4gICAgICB0eXBlOiByZXEudXNlclsndXNlcl90eXBlX2lkJ11cclxuICAgIH0pO1xyXG59KTtcclxuXHJcblxyXG4vL0dFVFxyXG5yb3V0ZXIuZ2V0KCcvdGVzdCcsZGIudGVzdCk7XHJcbi8vUE9TVFxyXG5yb3V0ZXIucG9zdCgnL2FsZ28nLHJlcXVlc3RGb3JtVmFsaWRhdGlvbih0ZXN0LGV4ZWMpKTtcclxuLy9QVVRcclxucm91dGVyLnB1dCgnL2FjdHVhbGl6YWRvYWxmZ28vOmlkJyx0ZXN0KVxyXG4vL0RFTEVURVxyXG5cclxucm91dGVyLmFsbCgnKicsIChyZXEsIHJlcykgPT4ge1xyXG4gICAgcmVzLnN0YXR1cyg0MDQpLmpzb24oeyBtZXNzYWdlOiAnTGEgcnV0YSBkZSBsYSBzb2xpY2l0dWQgSFRUUCBubyBlcyByZWNvbm9jaWRhIHBvciBlbCBzZXJ2aWRvci4nIH0pO1xyXG59KTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "api.js"
      ],
      "names": [
        "router",
        "Express",
        "Router",
        "requestFormValidation",
        "preValidation",
        "callback",
        "req",
        "res",
        "next",
        "body",
        "data",
        "JSON",
        "parse",
        "formValidation",
        "method",
        "isValid",
        "status",
        "json",
        "get",
        "name",
        "user",
        "rut",
        "type",
        "db",
        "test",
        "post",
        "exec",
        "put",
        "all",
        "message"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,MAAM,GAAGC,oBAAQC,MAAR,EAAf;;AAEA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,aAAD,EAAgBC,QAAhB,EAA6B;AACvD,SAAO,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACvB,QAAIF,GAAG,CAACG,IAAJ,IAAYH,GAAG,CAACG,IAAJ,CAASC,IAAzB,EACAJ,GAAG,CAACG,IAAJ,GAAWE,IAAI,CAACC,KAAL,CAAWN,GAAG,CAACG,IAAJ,CAASC,IAApB,CAAX;AACA,QAAMG,cAAc,GAAGT,aAAa,CAACE,GAAG,CAACG,IAAL,EAAWH,GAAG,CAACQ,MAAf,CAApC;AACA,QAAID,cAAc,CAACE,OAAnB,EACA,OAAOV,QAAQ,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,CAAf;AACAD,IAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBJ,cAArB;AACH,GAPD;AAQH,CATD;;AAWAb,MAAM,CAACkB,GAAP,CAAW,WAAX,EAAwB,UAACZ,GAAD,EAAMC,GAAN,EAAc;AAClCA,EAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBE,IAAAA,IAAI,EAAEb,GAAG,CAACc,IAAJ,CAASD,IADI;AAEnBE,IAAAA,GAAG,EAAEf,GAAG,CAACc,IAAJ,CAAS,SAAT,CAFc;AAGnBE,IAAAA,IAAI,EAAEhB,GAAG,CAACc,IAAJ,CAAS,cAAT;AAHa,GAArB;AAKH,CAND,E,CASA;;AACApB,MAAM,CAACkB,GAAP,CAAW,OAAX,EAAmBK,wBAAGC,IAAtB,E,CACA;;AACAxB,MAAM,CAACyB,IAAP,CAAY,OAAZ,EAAoBtB,qBAAqB,CAACqB,IAAD,EAAME,IAAN,CAAzC,E,CACA;;AACA1B,MAAM,CAAC2B,GAAP,CAAW,uBAAX,EAAmCH,IAAnC,E,CACA;;AAEAxB,MAAM,CAAC4B,GAAP,CAAW,GAAX,EAAgB,UAACtB,GAAD,EAAMC,GAAN,EAAc;AAC1BA,EAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEY,IAAAA,OAAO,EAAE;AAAX,GAArB;AACH,CAFD;eAIe7B,M",
      "sourceRoot": "C:\\Users\\ASUS\\Desktop\\Base Html + Node js\\src\\routes",
      "sourcesContent": [
        "import Express from 'express';\r\nimport db from '../middleware/postgresAPI';\r\nimport FormValidator from '../middleware/FormValidator'\r\nimport multer from 'multer'\r\nimport fs from 'fs-extra'\r\n\r\nconst router = Express.Router();\r\n\r\nconst requestFormValidation = (preValidation, callback) => {\r\n    return (req, res, next) => {\r\n        if (req.body && req.body.data)\r\n        req.body = JSON.parse(req.body.data);\r\n        const formValidation = preValidation(req.body, req.method);\r\n        if (formValidation.isValid)\r\n        return callback(req, res, next);\r\n        res.status(400).json(formValidation);\r\n    };\r\n};\r\n\r\nrouter.get('/userInfo', (req, res) => {\r\n    res.status(200).json({\r\n      name: req.user.name,\r\n      rut: req.user['user_id'],\r\n      type: req.user['user_type_id']\r\n    });\r\n});\r\n\r\n\r\n//GET\r\nrouter.get('/test',db.test);\r\n//POST\r\nrouter.post('/algo',requestFormValidation(test,exec));\r\n//PUT\r\nrouter.put('/actualizadoalfgo/:id',test)\r\n//DELETE\r\n\r\nrouter.all('*', (req, res) => {\r\n    res.status(404).json({ message: 'La ruta de la solicitud HTTP no es reconocida por el servidor.' });\r\n});\r\n\r\nexport default router;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1568152716987
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Base Html + Node js\\\\src\\\\middleware\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Base Html + Node js\",\"filename\":\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Base Html + Node js\\\\src\\\\middleware\\\\postgresAPI.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Base Html + Node js\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\ASUS\\Desktop\\Base Html + Node js\\src\\middleware",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\ASUS\\Desktop\\Base Html + Node js",
      "filename": "C:\\Users\\ASUS\\Desktop\\Base Html + Node js\\src\\middleware\\postgresAPI.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\ASUS\\Desktop\\Base Html + Node js",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\ASUS\\Desktop\\Base Html + Node js\\src\\middleware\\postgresAPI.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\ASUS\\Desktop\\Base Html + Node js\\src\\middleware\\postgresAPI.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\ASUS\\Desktop\\Base Html + Node js\\src\\middleware",
        "sourceFileName": "postgresAPI.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _postgresConnection = _interopRequireDefault(require(\"./postgresConnection\"));\n\nvar _user = _interopRequireDefault(require(\"../models/user\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar functionQueries = {};\n\nfunctionQueries.test = function (req, res, next) {\n  var id = req.params.id;\n\n  _postgresConnection[\"default\"].tx(function (t) {\n    return t.any(\"SELECT * FROM size\");\n  }).then(function (data) {\n    res.status(200).json({\n      data: data,\n      msg: \"Se encontraron tamaños\"\n    });\n  })[\"catch\"](function (err) {\n    res.status(500).json({\n      err: err,\n      msg: \"Ha ocurrido un error\"\n    });\n  });\n};\n\nvar _default = functionQueries;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBvc3RncmVzQVBJLmpzIl0sIm5hbWVzIjpbImZ1bmN0aW9uUXVlcmllcyIsInRlc3QiLCJyZXEiLCJyZXMiLCJuZXh0IiwiaWQiLCJwYXJhbXMiLCJjb25uZWN0aW9uIiwidHgiLCJ0IiwiYW55IiwidGhlbiIsImRhdGEiLCJzdGF0dXMiLCJqc29uIiwibXNnIiwiZXJyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxlQUFlLEdBQUcsRUFBeEI7O0FBR0FBLGVBQWUsQ0FBQ0MsSUFBaEIsR0FBdUIsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsRUFBb0I7QUFDdkMsTUFBSUMsRUFBRSxHQUFHSCxHQUFHLENBQUNJLE1BQUosQ0FBV0QsRUFBcEI7O0FBQ0FFLGlDQUFXQyxFQUFYLENBQWMsVUFBQUMsQ0FBQyxFQUFFO0FBQ2IsV0FBT0EsQ0FBQyxDQUFDQyxHQUFGLENBQU0sb0JBQU4sQ0FBUDtBQUNILEdBRkQsRUFHQ0MsSUFIRCxDQUdNLFVBQUFDLElBQUksRUFBRTtBQUNSVCxJQUFBQSxHQUFHLENBQUNVLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUFDRixNQUFBQSxJQUFJLEVBQUVBLElBQVA7QUFBYUcsTUFBQUEsR0FBRyxFQUFFO0FBQWxCLEtBQXJCO0FBQ0gsR0FMRCxXQU1PLFVBQUFDLEdBQUcsRUFBRTtBQUNSYixJQUFBQSxHQUFHLENBQUNVLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUFDRSxNQUFBQSxHQUFHLEVBQUhBLEdBQUQ7QUFBTUQsTUFBQUEsR0FBRyxFQUFFO0FBQVgsS0FBckI7QUFDSCxHQVJEO0FBU0gsQ0FYRDs7ZUFhZWYsZSIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEFTVVNcXERlc2t0b3BcXEJhc2UgSHRtbCArIE5vZGUganNcXHNyY1xcbWlkZGxld2FyZSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjb25uZWN0aW9uIGZyb20gJy4vcG9zdGdyZXNDb25uZWN0aW9uJztcclxuaW1wb3J0IFVzZXIgZnJvbSAnLi4vbW9kZWxzL3VzZXInO1xyXG5cclxuY29uc3QgZnVuY3Rpb25RdWVyaWVzID0ge307XHJcblxyXG5cclxuZnVuY3Rpb25RdWVyaWVzLnRlc3QgPSAocmVxLCByZXMsIG5leHQpID0+IHtcclxuICAgIGxldCBpZCA9IHJlcS5wYXJhbXMuaWRcclxuICAgIGNvbm5lY3Rpb24udHgodD0+e1xyXG4gICAgICAgIHJldHVybiB0LmFueShcIlNFTEVDVCAqIEZST00gc2l6ZVwiKVxyXG4gICAgfSlcclxuICAgIC50aGVuKGRhdGE9PntcclxuICAgICAgICByZXMuc3RhdHVzKDIwMCkuanNvbih7ZGF0YTogZGF0YSwgbXNnOiBcIlNlIGVuY29udHJhcm9uIHRhbWHDsW9zXCJ9KVxyXG4gICAgfSlcclxuICAgIC5jYXRjaChlcnI9PntcclxuICAgICAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7ZXJyLCBtc2c6IFwiSGEgb2N1cnJpZG8gdW4gZXJyb3JcIn0pXHJcbiAgICB9KVxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb25RdWVyaWVzO1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "postgresAPI.js"
      ],
      "names": [
        "functionQueries",
        "test",
        "req",
        "res",
        "next",
        "id",
        "params",
        "connection",
        "tx",
        "t",
        "any",
        "then",
        "data",
        "status",
        "json",
        "msg",
        "err"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA,IAAMA,eAAe,GAAG,EAAxB;;AAGAA,eAAe,CAACC,IAAhB,GAAuB,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACvC,MAAIC,EAAE,GAAGH,GAAG,CAACI,MAAJ,CAAWD,EAApB;;AACAE,iCAAWC,EAAX,CAAc,UAAAC,CAAC,EAAE;AACb,WAAOA,CAAC,CAACC,GAAF,CAAM,oBAAN,CAAP;AACH,GAFD,EAGCC,IAHD,CAGM,UAAAC,IAAI,EAAE;AACRT,IAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACF,MAAAA,IAAI,EAAEA,IAAP;AAAaG,MAAAA,GAAG,EAAE;AAAlB,KAArB;AACH,GALD,WAMO,UAAAC,GAAG,EAAE;AACRb,IAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACE,MAAAA,GAAG,EAAHA,GAAD;AAAMD,MAAAA,GAAG,EAAE;AAAX,KAArB;AACH,GARD;AASH,CAXD;;eAaef,e",
      "sourceRoot": "C:\\Users\\ASUS\\Desktop\\Base Html + Node js\\src\\middleware",
      "sourcesContent": [
        "import connection from './postgresConnection';\r\nimport User from '../models/user';\r\n\r\nconst functionQueries = {};\r\n\r\n\r\nfunctionQueries.test = (req, res, next) => {\r\n    let id = req.params.id\r\n    connection.tx(t=>{\r\n        return t.any(\"SELECT * FROM size\")\r\n    })\r\n    .then(data=>{\r\n        res.status(200).json({data: data, msg: \"Se encontraron tamaños\"})\r\n    })\r\n    .catch(err=>{\r\n        res.status(500).json({err, msg: \"Ha ocurrido un error\"})\r\n    })\r\n};\r\n\r\nexport default functionQueries;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1568152801903
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Base Html + Node js\\\\src\\\\middleware\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Base Html + Node js\",\"filename\":\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Base Html + Node js\\\\src\\\\middleware\\\\postgresConnection.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Base Html + Node js\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\ASUS\\Desktop\\Base Html + Node js\\src\\middleware",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\ASUS\\Desktop\\Base Html + Node js",
      "filename": "C:\\Users\\ASUS\\Desktop\\Base Html + Node js\\src\\middleware\\postgresConnection.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\ASUS\\Desktop\\Base Html + Node js",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\ASUS\\Desktop\\Base Html + Node js\\src\\middleware\\postgresConnection.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\ASUS\\Desktop\\Base Html + Node js\\src\\middleware\\postgresConnection.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\ASUS\\Desktop\\Base Html + Node js\\src\\middleware",
        "sourceFileName": "postgresConnection.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _bluebird = _interopRequireDefault(require(\"bluebird\"));\n\nvar _pgPromise = _interopRequireDefault(require(\"pg-promise\"));\n\nvar _config = _interopRequireDefault(require(\"../config.json\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar camelizeColumns = function camelizeColumns(data) {\n  var template = data[0];\n\n  for (var prop in template) {\n    var camel = _pgPromise[\"default\"].utils.camelize(prop);\n\n    if (!(camel in template)) {\n      for (var i = 0; i < data.length; i++) {\n        var d = data[i];\n        d[camel] = d[prop];\n        delete d[prop];\n      }\n    }\n  }\n};\n\nvar postgres = (0, _pgPromise[\"default\"])({\n  promiseLib: _bluebird[\"default\"],\n  receive: function receive(data, result, e) {\n    camelizeColumns(data);\n  }\n});\nvar connection = postgres(_config[\"default\"].dbUri);\nvar _default = connection;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBvc3RncmVzQ29ubmVjdGlvbi5qcyJdLCJuYW1lcyI6WyJjYW1lbGl6ZUNvbHVtbnMiLCJkYXRhIiwidGVtcGxhdGUiLCJwcm9wIiwiY2FtZWwiLCJwZ3AiLCJ1dGlscyIsImNhbWVsaXplIiwiaSIsImxlbmd0aCIsImQiLCJwb3N0Z3JlcyIsInByb21pc2VMaWIiLCJQcm9taXNlIiwicmVjZWl2ZSIsInJlc3VsdCIsImUiLCJjb25uZWN0aW9uIiwiY29uZmlnIiwiZGJVcmkiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7OztBQUVBLElBQU1BLGVBQWUsR0FBRyxTQUFsQkEsZUFBa0IsQ0FBQ0MsSUFBRCxFQUFVO0FBQ2hDLE1BQU1DLFFBQVEsR0FBR0QsSUFBSSxDQUFDLENBQUQsQ0FBckI7O0FBRUEsT0FBSyxJQUFJRSxJQUFULElBQWlCRCxRQUFqQixFQUEyQjtBQUN6QixRQUFNRSxLQUFLLEdBQUdDLHNCQUFJQyxLQUFKLENBQVVDLFFBQVYsQ0FBbUJKLElBQW5CLENBQWQ7O0FBRUEsUUFBSSxFQUFFQyxLQUFLLElBQUlGLFFBQVgsQ0FBSixFQUEwQjtBQUN4QixXQUFLLElBQUlNLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLEdBQUdQLElBQUksQ0FBQ1EsTUFBekIsRUFBaUNELENBQUMsRUFBbEMsRUFBc0M7QUFDcEMsWUFBSUUsQ0FBQyxHQUFHVCxJQUFJLENBQUNPLENBQUQsQ0FBWjtBQUNBRSxRQUFBQSxDQUFDLENBQUNOLEtBQUQsQ0FBRCxHQUFXTSxDQUFDLENBQUNQLElBQUQsQ0FBWjtBQUNBLGVBQU9PLENBQUMsQ0FBQ1AsSUFBRCxDQUFSO0FBQ0Q7QUFDRjtBQUNGO0FBQ0YsQ0FkRDs7QUFnQkEsSUFBTVEsUUFBUSxHQUFHLDJCQUFJO0FBQ25CQyxFQUFBQSxVQUFVLEVBQUVDLG9CQURPO0FBRW5CQyxFQUFBQSxPQUFPLEVBQUUsaUJBQUNiLElBQUQsRUFBT2MsTUFBUCxFQUFlQyxDQUFmLEVBQXFCO0FBQUVoQixJQUFBQSxlQUFlLENBQUNDLElBQUQsQ0FBZjtBQUF3QjtBQUZyQyxDQUFKLENBQWpCO0FBSUEsSUFBTWdCLFVBQVUsR0FBR04sUUFBUSxDQUFDTyxtQkFBT0MsS0FBUixDQUEzQjtlQUVlRixVIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcQVNVU1xcRGVza3RvcFxcQmFzZSBIdG1sICsgTm9kZSBqc1xcc3JjXFxtaWRkbGV3YXJlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFByb21pc2UgZnJvbSAnYmx1ZWJpcmQnO1xyXG5pbXBvcnQgcGdwIGZyb20gJ3BnLXByb21pc2UnO1xyXG5pbXBvcnQgY29uZmlnIGZyb20gJy4uL2NvbmZpZy5qc29uJztcclxuXHJcbmNvbnN0IGNhbWVsaXplQ29sdW1ucyA9IChkYXRhKSA9PiB7XHJcbiAgY29uc3QgdGVtcGxhdGUgPSBkYXRhWzBdO1xyXG5cclxuICBmb3IgKGxldCBwcm9wIGluIHRlbXBsYXRlKSB7XHJcbiAgICBjb25zdCBjYW1lbCA9IHBncC51dGlscy5jYW1lbGl6ZShwcm9wKTtcclxuXHJcbiAgICBpZiAoIShjYW1lbCBpbiB0ZW1wbGF0ZSkpIHtcclxuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBkYXRhLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgbGV0IGQgPSBkYXRhW2ldO1xyXG4gICAgICAgIGRbY2FtZWxdID0gZFtwcm9wXTtcclxuICAgICAgICBkZWxldGUgZFtwcm9wXTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufTtcclxuXHJcbmNvbnN0IHBvc3RncmVzID0gcGdwKHtcclxuICBwcm9taXNlTGliOiBQcm9taXNlLFxyXG4gIHJlY2VpdmU6IChkYXRhLCByZXN1bHQsIGUpID0+IHsgY2FtZWxpemVDb2x1bW5zKGRhdGEpOyB9XHJcbn0pO1xyXG5jb25zdCBjb25uZWN0aW9uID0gcG9zdGdyZXMoY29uZmlnLmRiVXJpKTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3Rpb247Il19",
    "map": {
      "version": 3,
      "sources": [
        "postgresConnection.js"
      ],
      "names": [
        "camelizeColumns",
        "data",
        "template",
        "prop",
        "camel",
        "pgp",
        "utils",
        "camelize",
        "i",
        "length",
        "d",
        "postgres",
        "promiseLib",
        "Promise",
        "receive",
        "result",
        "e",
        "connection",
        "config",
        "dbUri"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;AAEA,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAACC,IAAD,EAAU;AAChC,MAAMC,QAAQ,GAAGD,IAAI,CAAC,CAAD,CAArB;;AAEA,OAAK,IAAIE,IAAT,IAAiBD,QAAjB,EAA2B;AACzB,QAAME,KAAK,GAAGC,sBAAIC,KAAJ,CAAUC,QAAV,CAAmBJ,IAAnB,CAAd;;AAEA,QAAI,EAAEC,KAAK,IAAIF,QAAX,CAAJ,EAA0B;AACxB,WAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,IAAI,CAACQ,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,YAAIE,CAAC,GAAGT,IAAI,CAACO,CAAD,CAAZ;AACAE,QAAAA,CAAC,CAACN,KAAD,CAAD,GAAWM,CAAC,CAACP,IAAD,CAAZ;AACA,eAAOO,CAAC,CAACP,IAAD,CAAR;AACD;AACF;AACF;AACF,CAdD;;AAgBA,IAAMQ,QAAQ,GAAG,2BAAI;AACnBC,EAAAA,UAAU,EAAEC,oBADO;AAEnBC,EAAAA,OAAO,EAAE,iBAACb,IAAD,EAAOc,MAAP,EAAeC,CAAf,EAAqB;AAAEhB,IAAAA,eAAe,CAACC,IAAD,CAAf;AAAwB;AAFrC,CAAJ,CAAjB;AAIA,IAAMgB,UAAU,GAAGN,QAAQ,CAACO,mBAAOC,KAAR,CAA3B;eAEeF,U",
      "sourceRoot": "C:\\Users\\ASUS\\Desktop\\Base Html + Node js\\src\\middleware",
      "sourcesContent": [
        "import Promise from 'bluebird';\r\nimport pgp from 'pg-promise';\r\nimport config from '../config.json';\r\n\r\nconst camelizeColumns = (data) => {\r\n  const template = data[0];\r\n\r\n  for (let prop in template) {\r\n    const camel = pgp.utils.camelize(prop);\r\n\r\n    if (!(camel in template)) {\r\n      for (let i = 0; i < data.length; i++) {\r\n        let d = data[i];\r\n        d[camel] = d[prop];\r\n        delete d[prop];\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nconst postgres = pgp({\r\n  promiseLib: Promise,\r\n  receive: (data, result, e) => { camelizeColumns(data); }\r\n});\r\nconst connection = postgres(config.dbUri);\r\n\r\nexport default connection;"
      ]
    },
    "sourceType": "script",
    "mtime": 1563072915594
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Base Html + Node js\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Base Html + Node js\",\"filename\":\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Base Html + Node js\\\\src\\\\models\\\\user.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Base Html + Node js\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\ASUS\\Desktop\\Base Html + Node js\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\ASUS\\Desktop\\Base Html + Node js",
      "filename": "C:\\Users\\ASUS\\Desktop\\Base Html + Node js\\src\\models\\user.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\ASUS\\Desktop\\Base Html + Node js",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\ASUS\\Desktop\\Base Html + Node js\\src\\models\\user.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\ASUS\\Desktop\\Base Html + Node js\\src\\models\\user.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\ASUS\\Desktop\\Base Html + Node js\\src\\models",
        "sourceFileName": "user.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nvar _passportLocalSequelize = _interopRequireDefault(require(\"passport-local-sequelize\"));\n\nvar _config = _interopRequireDefault(require(\"../config.json\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar db = new _sequelize[\"default\"](_config[\"default\"].dbUri, {\n  logging: false\n});\nvar User = db.define('user', {\n  user_id: {\n    type: _sequelize[\"default\"].STRING,\n    primaryKey: true\n  },\n  name: _sequelize[\"default\"].STRING,\n  password_hash: _sequelize[\"default\"].STRING,\n  password_salt: _sequelize[\"default\"].STRING,\n  user_type_id: _sequelize[\"default\"].STRING,\n  email: _sequelize[\"default\"].STRING\n}, {\n  freezeTableName: true,\n  timestamps: false\n});\n\n_passportLocalSequelize[\"default\"].attachToUser(User, {\n  usernameField: 'user_id',\n  hashField: 'password_hash',\n  saltField: 'password_salt'\n});\n\nUser.update = function (id, password, cb) {\n  User.findByUsername(id, function (err, user) {\n    if (err) return cb(err);\n    if (!user) return cb(new Error('El usuario no existe.'));\n    user.setPassword(password, function (err, user) {\n      if (err) return cb(err);\n      user.setActivationKey(function (err, user) {\n        if (err) return cb(err);\n        user['user_id'] = id;\n        user.save().then(function () {\n          cb(null, user);\n        })[\"catch\"](function (err) {\n          cb(err);\n        });\n      });\n    });\n  });\n};\n\nvar _default = User;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuanMiXSwibmFtZXMiOlsiZGIiLCJTZXF1ZWxpemUiLCJjb25maWciLCJkYlVyaSIsImxvZ2dpbmciLCJVc2VyIiwiZGVmaW5lIiwidXNlcl9pZCIsInR5cGUiLCJTVFJJTkciLCJwcmltYXJ5S2V5IiwibmFtZSIsInBhc3N3b3JkX2hhc2giLCJwYXNzd29yZF9zYWx0IiwidXNlcl90eXBlX2lkIiwiZW1haWwiLCJmcmVlemVUYWJsZU5hbWUiLCJ0aW1lc3RhbXBzIiwiUGFzc3BvcnRMb2NhbFNlcXVlbGl6ZSIsImF0dGFjaFRvVXNlciIsInVzZXJuYW1lRmllbGQiLCJoYXNoRmllbGQiLCJzYWx0RmllbGQiLCJ1cGRhdGUiLCJpZCIsInBhc3N3b3JkIiwiY2IiLCJmaW5kQnlVc2VybmFtZSIsImVyciIsInVzZXIiLCJFcnJvciIsInNldFBhc3N3b3JkIiwic2V0QWN0aXZhdGlvbktleSIsInNhdmUiLCJ0aGVuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxFQUFFLEdBQUcsSUFBSUMscUJBQUosQ0FBY0MsbUJBQU9DLEtBQXJCLEVBQTRCO0FBQUVDLEVBQUFBLE9BQU8sRUFBRTtBQUFYLENBQTVCLENBQVg7QUFFQSxJQUFNQyxJQUFJLEdBQUdMLEVBQUUsQ0FBQ00sTUFBSCxDQUNYLE1BRFcsRUFFWDtBQUNFQyxFQUFBQSxPQUFPLEVBQUU7QUFDUEMsSUFBQUEsSUFBSSxFQUFFUCxzQkFBVVEsTUFEVDtBQUVQQyxJQUFBQSxVQUFVLEVBQUU7QUFGTCxHQURYO0FBS0VDLEVBQUFBLElBQUksRUFBRVYsc0JBQVVRLE1BTGxCO0FBTUVHLEVBQUFBLGFBQWEsRUFBRVgsc0JBQVVRLE1BTjNCO0FBT0VJLEVBQUFBLGFBQWEsRUFBRVosc0JBQVVRLE1BUDNCO0FBUUVLLEVBQUFBLFlBQVksRUFBRWIsc0JBQVVRLE1BUjFCO0FBU0VNLEVBQUFBLEtBQUssRUFBRWQsc0JBQVVRO0FBVG5CLENBRlcsRUFhWDtBQUNFTyxFQUFBQSxlQUFlLEVBQUUsSUFEbkI7QUFFRUMsRUFBQUEsVUFBVSxFQUFFO0FBRmQsQ0FiVyxDQUFiOztBQW1CQUMsbUNBQXVCQyxZQUF2QixDQUFvQ2QsSUFBcEMsRUFBMEM7QUFDeENlLEVBQUFBLGFBQWEsRUFBRSxTQUR5QjtBQUV4Q0MsRUFBQUEsU0FBUyxFQUFFLGVBRjZCO0FBR3hDQyxFQUFBQSxTQUFTLEVBQUU7QUFINkIsQ0FBMUM7O0FBTUFqQixJQUFJLENBQUNrQixNQUFMLEdBQWMsVUFBQ0MsRUFBRCxFQUFLQyxRQUFMLEVBQWVDLEVBQWYsRUFBc0I7QUFDbENyQixFQUFBQSxJQUFJLENBQUNzQixjQUFMLENBQW9CSCxFQUFwQixFQUF3QixVQUFDSSxHQUFELEVBQU1DLElBQU4sRUFBZTtBQUNyQyxRQUFJRCxHQUFKLEVBQ0UsT0FBT0YsRUFBRSxDQUFDRSxHQUFELENBQVQ7QUFFRixRQUFJLENBQUNDLElBQUwsRUFDRSxPQUFPSCxFQUFFLENBQUMsSUFBSUksS0FBSixDQUFVLHVCQUFWLENBQUQsQ0FBVDtBQUVGRCxJQUFBQSxJQUFJLENBQUNFLFdBQUwsQ0FBaUJOLFFBQWpCLEVBQTJCLFVBQUNHLEdBQUQsRUFBTUMsSUFBTixFQUFlO0FBQ3hDLFVBQUlELEdBQUosRUFDRSxPQUFPRixFQUFFLENBQUNFLEdBQUQsQ0FBVDtBQUVGQyxNQUFBQSxJQUFJLENBQUNHLGdCQUFMLENBQXNCLFVBQUNKLEdBQUQsRUFBTUMsSUFBTixFQUFlO0FBQ25DLFlBQUlELEdBQUosRUFDRSxPQUFPRixFQUFFLENBQUNFLEdBQUQsQ0FBVDtBQUVGQyxRQUFBQSxJQUFJLENBQUMsU0FBRCxDQUFKLEdBQWtCTCxFQUFsQjtBQUVBSyxRQUFBQSxJQUFJLENBQUNJLElBQUwsR0FDR0MsSUFESCxDQUNRLFlBQU07QUFDVlIsVUFBQUEsRUFBRSxDQUFDLElBQUQsRUFBT0csSUFBUCxDQUFGO0FBQ0QsU0FISCxXQUlTLFVBQUNELEdBQUQsRUFBUztBQUNkRixVQUFBQSxFQUFFLENBQUNFLEdBQUQsQ0FBRjtBQUNELFNBTkg7QUFPRCxPQWJEO0FBY0QsS0FsQkQ7QUFtQkQsR0ExQkQ7QUEyQkQsQ0E1QkQ7O2VBOEJldkIsSSIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEFTVVNcXERlc2t0b3BcXEJhc2UgSHRtbCArIE5vZGUganNcXHNyY1xcbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFNlcXVlbGl6ZSBmcm9tICdzZXF1ZWxpemUnO1xyXG5pbXBvcnQgUGFzc3BvcnRMb2NhbFNlcXVlbGl6ZSBmcm9tICdwYXNzcG9ydC1sb2NhbC1zZXF1ZWxpemUnO1xyXG5pbXBvcnQgY29uZmlnIGZyb20gJy4uL2NvbmZpZy5qc29uJztcclxuXHJcbmNvbnN0IGRiID0gbmV3IFNlcXVlbGl6ZShjb25maWcuZGJVcmksIHsgbG9nZ2luZzogZmFsc2UgfSk7XHJcblxyXG5jb25zdCBVc2VyID0gZGIuZGVmaW5lKFxyXG4gICd1c2VyJyxcclxuICB7XHJcbiAgICB1c2VyX2lkOiB7XHJcbiAgICAgIHR5cGU6IFNlcXVlbGl6ZS5TVFJJTkcsXHJcbiAgICAgIHByaW1hcnlLZXk6IHRydWVcclxuICAgIH0sXHJcbiAgICBuYW1lOiBTZXF1ZWxpemUuU1RSSU5HLFxyXG4gICAgcGFzc3dvcmRfaGFzaDogU2VxdWVsaXplLlNUUklORyxcclxuICAgIHBhc3N3b3JkX3NhbHQ6IFNlcXVlbGl6ZS5TVFJJTkcsXHJcbiAgICB1c2VyX3R5cGVfaWQ6IFNlcXVlbGl6ZS5TVFJJTkcsXHJcbiAgICBlbWFpbDogU2VxdWVsaXplLlNUUklORyxcclxuICB9LFxyXG4gIHtcclxuICAgIGZyZWV6ZVRhYmxlTmFtZTogdHJ1ZSxcclxuICAgIHRpbWVzdGFtcHM6IGZhbHNlXHJcbiAgfVxyXG4pO1xyXG5cclxuUGFzc3BvcnRMb2NhbFNlcXVlbGl6ZS5hdHRhY2hUb1VzZXIoVXNlciwge1xyXG4gIHVzZXJuYW1lRmllbGQ6ICd1c2VyX2lkJyxcclxuICBoYXNoRmllbGQ6ICdwYXNzd29yZF9oYXNoJyxcclxuICBzYWx0RmllbGQ6ICdwYXNzd29yZF9zYWx0J1xyXG59KTtcclxuXHJcblVzZXIudXBkYXRlID0gKGlkLCBwYXNzd29yZCwgY2IpID0+IHtcclxuICBVc2VyLmZpbmRCeVVzZXJuYW1lKGlkLCAoZXJyLCB1c2VyKSA9PiB7XHJcbiAgICBpZiAoZXJyKVxyXG4gICAgICByZXR1cm4gY2IoZXJyKTtcclxuXHJcbiAgICBpZiAoIXVzZXIpXHJcbiAgICAgIHJldHVybiBjYihuZXcgRXJyb3IoJ0VsIHVzdWFyaW8gbm8gZXhpc3RlLicpKTtcclxuXHJcbiAgICB1c2VyLnNldFBhc3N3b3JkKHBhc3N3b3JkLCAoZXJyLCB1c2VyKSA9PiB7XHJcbiAgICAgIGlmIChlcnIpXHJcbiAgICAgICAgcmV0dXJuIGNiKGVycik7XHJcblxyXG4gICAgICB1c2VyLnNldEFjdGl2YXRpb25LZXkoKGVyciwgdXNlcikgPT4ge1xyXG4gICAgICAgIGlmIChlcnIpXHJcbiAgICAgICAgICByZXR1cm4gY2IoZXJyKTtcclxuXHJcbiAgICAgICAgdXNlclsndXNlcl9pZCddID0gaWQ7XHJcblxyXG4gICAgICAgIHVzZXIuc2F2ZSgpXHJcbiAgICAgICAgICAudGhlbigoKSA9PiB7XHJcbiAgICAgICAgICAgIGNiKG51bGwsIHVzZXIpO1xyXG4gICAgICAgICAgfSlcclxuICAgICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgICAgIGNiKGVycilcclxuICAgICAgICAgIH0pO1xyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gIH0pO1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgVXNlcjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "user.js"
      ],
      "names": [
        "db",
        "Sequelize",
        "config",
        "dbUri",
        "logging",
        "User",
        "define",
        "user_id",
        "type",
        "STRING",
        "primaryKey",
        "name",
        "password_hash",
        "password_salt",
        "user_type_id",
        "email",
        "freezeTableName",
        "timestamps",
        "PassportLocalSequelize",
        "attachToUser",
        "usernameField",
        "hashField",
        "saltField",
        "update",
        "id",
        "password",
        "cb",
        "findByUsername",
        "err",
        "user",
        "Error",
        "setPassword",
        "setActivationKey",
        "save",
        "then"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;AAEA,IAAMA,EAAE,GAAG,IAAIC,qBAAJ,CAAcC,mBAAOC,KAArB,EAA4B;AAAEC,EAAAA,OAAO,EAAE;AAAX,CAA5B,CAAX;AAEA,IAAMC,IAAI,GAAGL,EAAE,CAACM,MAAH,CACX,MADW,EAEX;AACEC,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAEP,sBAAUQ,MADT;AAEPC,IAAAA,UAAU,EAAE;AAFL,GADX;AAKEC,EAAAA,IAAI,EAAEV,sBAAUQ,MALlB;AAMEG,EAAAA,aAAa,EAAEX,sBAAUQ,MAN3B;AAOEI,EAAAA,aAAa,EAAEZ,sBAAUQ,MAP3B;AAQEK,EAAAA,YAAY,EAAEb,sBAAUQ,MAR1B;AASEM,EAAAA,KAAK,EAAEd,sBAAUQ;AATnB,CAFW,EAaX;AACEO,EAAAA,eAAe,EAAE,IADnB;AAEEC,EAAAA,UAAU,EAAE;AAFd,CAbW,CAAb;;AAmBAC,mCAAuBC,YAAvB,CAAoCd,IAApC,EAA0C;AACxCe,EAAAA,aAAa,EAAE,SADyB;AAExCC,EAAAA,SAAS,EAAE,eAF6B;AAGxCC,EAAAA,SAAS,EAAE;AAH6B,CAA1C;;AAMAjB,IAAI,CAACkB,MAAL,GAAc,UAACC,EAAD,EAAKC,QAAL,EAAeC,EAAf,EAAsB;AAClCrB,EAAAA,IAAI,CAACsB,cAAL,CAAoBH,EAApB,EAAwB,UAACI,GAAD,EAAMC,IAAN,EAAe;AACrC,QAAID,GAAJ,EACE,OAAOF,EAAE,CAACE,GAAD,CAAT;AAEF,QAAI,CAACC,IAAL,EACE,OAAOH,EAAE,CAAC,IAAII,KAAJ,CAAU,uBAAV,CAAD,CAAT;AAEFD,IAAAA,IAAI,CAACE,WAAL,CAAiBN,QAAjB,EAA2B,UAACG,GAAD,EAAMC,IAAN,EAAe;AACxC,UAAID,GAAJ,EACE,OAAOF,EAAE,CAACE,GAAD,CAAT;AAEFC,MAAAA,IAAI,CAACG,gBAAL,CAAsB,UAACJ,GAAD,EAAMC,IAAN,EAAe;AACnC,YAAID,GAAJ,EACE,OAAOF,EAAE,CAACE,GAAD,CAAT;AAEFC,QAAAA,IAAI,CAAC,SAAD,CAAJ,GAAkBL,EAAlB;AAEAK,QAAAA,IAAI,CAACI,IAAL,GACGC,IADH,CACQ,YAAM;AACVR,UAAAA,EAAE,CAAC,IAAD,EAAOG,IAAP,CAAF;AACD,SAHH,WAIS,UAACD,GAAD,EAAS;AACdF,UAAAA,EAAE,CAACE,GAAD,CAAF;AACD,SANH;AAOD,OAbD;AAcD,KAlBD;AAmBD,GA1BD;AA2BD,CA5BD;;eA8BevB,I",
      "sourceRoot": "C:\\Users\\ASUS\\Desktop\\Base Html + Node js\\src\\models",
      "sourcesContent": [
        "import Sequelize from 'sequelize';\r\nimport PassportLocalSequelize from 'passport-local-sequelize';\r\nimport config from '../config.json';\r\n\r\nconst db = new Sequelize(config.dbUri, { logging: false });\r\n\r\nconst User = db.define(\r\n  'user',\r\n  {\r\n    user_id: {\r\n      type: Sequelize.STRING,\r\n      primaryKey: true\r\n    },\r\n    name: Sequelize.STRING,\r\n    password_hash: Sequelize.STRING,\r\n    password_salt: Sequelize.STRING,\r\n    user_type_id: Sequelize.STRING,\r\n    email: Sequelize.STRING,\r\n  },\r\n  {\r\n    freezeTableName: true,\r\n    timestamps: false\r\n  }\r\n);\r\n\r\nPassportLocalSequelize.attachToUser(User, {\r\n  usernameField: 'user_id',\r\n  hashField: 'password_hash',\r\n  saltField: 'password_salt'\r\n});\r\n\r\nUser.update = (id, password, cb) => {\r\n  User.findByUsername(id, (err, user) => {\r\n    if (err)\r\n      return cb(err);\r\n\r\n    if (!user)\r\n      return cb(new Error('El usuario no existe.'));\r\n\r\n    user.setPassword(password, (err, user) => {\r\n      if (err)\r\n        return cb(err);\r\n\r\n      user.setActivationKey((err, user) => {\r\n        if (err)\r\n          return cb(err);\r\n\r\n        user['user_id'] = id;\r\n\r\n        user.save()\r\n          .then(() => {\r\n            cb(null, user);\r\n          })\r\n          .catch((err) => {\r\n            cb(err)\r\n          });\r\n      });\r\n    });\r\n  });\r\n};\r\n\r\nexport default User;"
      ]
    },
    "sourceType": "script",
    "mtime": 1564939130526
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Base Html + Node js\\\\src\\\\middleware\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Base Html + Node js\",\"filename\":\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Base Html + Node js\\\\src\\\\middleware\\\\FormValidator.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Base Html + Node js\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\ASUS\\Desktop\\Base Html + Node js\\src\\middleware",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\ASUS\\Desktop\\Base Html + Node js",
      "filename": "C:\\Users\\ASUS\\Desktop\\Base Html + Node js\\src\\middleware\\FormValidator.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\ASUS\\Desktop\\Base Html + Node js",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\ASUS\\Desktop\\Base Html + Node js\\src\\middleware\\FormValidator.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\ASUS\\Desktop\\Base Html + Node js\\src\\middleware\\FormValidator.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\ASUS\\Desktop\\Base Html + Node js\\src\\middleware",
        "sourceFileName": "FormValidator.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.validar = void 0;\n\nvar _isEmpty = _interopRequireDefault(require(\"is-empty\"));\n\nvar _rutjs = _interopRequireDefault(require(\"rutjs\"));\n\nvar _validator = _interopRequireDefault(require(\"validator\"));\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar validationFunctions = {};\n\nvar validar = validationFunctions.test = function (payload) {\n  var errors = {};\n  var isValid = true;\n  var message = '';\n\n  if (payload) {\n    if ((0, _isEmpty[\"default\"])(payload.nomre)) {\n      isValid = false;\n    }\n  } else {\n    message = \"Error al recibir los datos del formulario\";\n    isValid = false;\n  }\n\n  return {\n    isValid: isValid,\n    errors: errors,\n    message: message\n  };\n};\n\nexports.validar = validar;\nvar _default = validationFunctions;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkZvcm1WYWxpZGF0b3IuanMiXSwibmFtZXMiOlsidmFsaWRhdGlvbkZ1bmN0aW9ucyIsInZhbGlkYXIiLCJ0ZXN0IiwicGF5bG9hZCIsImVycm9ycyIsImlzVmFsaWQiLCJtZXNzYWdlIiwibm9tcmUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUVBLElBQU1BLG1CQUFtQixHQUFHLEVBQTVCOztBQUVPLElBQU1DLE9BQU8sR0FBR0QsbUJBQW1CLENBQUNFLElBQXBCLEdBQTBCLFVBQUNDLE9BQUQsRUFBWTtBQUN6RCxNQUFJQyxNQUFNLEdBQUcsRUFBYjtBQUNBLE1BQUlDLE9BQU8sR0FBRyxJQUFkO0FBQ0EsTUFBSUMsT0FBTyxHQUFHLEVBQWQ7O0FBQ0EsTUFBR0gsT0FBSCxFQUFXO0FBQ1AsUUFBRyx5QkFBTUEsT0FBTyxDQUFDSSxLQUFkLENBQUgsRUFBd0I7QUFDcEJGLE1BQUFBLE9BQU8sR0FBRyxLQUFWO0FBQ0g7QUFDSixHQUpELE1BSUs7QUFDREMsSUFBQUEsT0FBTyxHQUFFLDJDQUFUO0FBQ0FELElBQUFBLE9BQU8sR0FBRyxLQUFWO0FBQ0g7O0FBQ0QsU0FBTztBQUFDQSxJQUFBQSxPQUFPLEVBQVBBLE9BQUQ7QUFBU0QsSUFBQUEsTUFBTSxFQUFOQSxNQUFUO0FBQWdCRSxJQUFBQSxPQUFPLEVBQVBBO0FBQWhCLEdBQVA7QUFDSCxDQWJNOzs7ZUFnQlFOLG1CIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcQVNVU1xcRGVza3RvcFxcQmFzZSBIdG1sICsgTm9kZSBqc1xcc3JjXFxtaWRkbGV3YXJlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGVtcHR5IGZyb20gJ2lzLWVtcHR5JztcclxuaW1wb3J0IFJ1dCBmcm9tICdydXRqcyc7XHJcbmltcG9ydCB2YWxpZGF0b3IgZnJvbSAndmFsaWRhdG9yJztcclxuaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnO1xyXG5cclxuY29uc3QgdmFsaWRhdGlvbkZ1bmN0aW9ucyA9IHt9O1xyXG5cclxuZXhwb3J0IGNvbnN0IHZhbGlkYXIgPSB2YWxpZGF0aW9uRnVuY3Rpb25zLnRlc3Q9IChwYXlsb2FkKSA9PntcclxuICAgIGxldCBlcnJvcnMgPSB7fTtcclxuICAgIGxldCBpc1ZhbGlkID0gdHJ1ZTtcclxuICAgIGxldCBtZXNzYWdlID0gJyc7XHJcbiAgICBpZihwYXlsb2FkKXtcclxuICAgICAgICBpZihlbXB0eShwYXlsb2FkLm5vbXJlKSl7XHJcbiAgICAgICAgICAgIGlzVmFsaWQgPSBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICB9ZWxzZXtcclxuICAgICAgICBtZXNzYWdlPSBcIkVycm9yIGFsIHJlY2liaXIgbG9zIGRhdG9zIGRlbCBmb3JtdWxhcmlvXCI7XHJcbiAgICAgICAgaXNWYWxpZCA9IGZhbHNlO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHtpc1ZhbGlkLGVycm9ycyxtZXNzYWdlfTtcclxufVxyXG5cclxuXHJcbmV4cG9ydCBkZWZhdWx0IHZhbGlkYXRpb25GdW5jdGlvbnM7Il19",
    "map": {
      "version": 3,
      "sources": [
        "FormValidator.js"
      ],
      "names": [
        "validationFunctions",
        "validar",
        "test",
        "payload",
        "errors",
        "isValid",
        "message",
        "nomre"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,mBAAmB,GAAG,EAA5B;;AAEO,IAAMC,OAAO,GAAGD,mBAAmB,CAACE,IAApB,GAA0B,UAACC,OAAD,EAAY;AACzD,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,OAAO,GAAG,IAAd;AACA,MAAIC,OAAO,GAAG,EAAd;;AACA,MAAGH,OAAH,EAAW;AACP,QAAG,yBAAMA,OAAO,CAACI,KAAd,CAAH,EAAwB;AACpBF,MAAAA,OAAO,GAAG,KAAV;AACH;AACJ,GAJD,MAIK;AACDC,IAAAA,OAAO,GAAE,2CAAT;AACAD,IAAAA,OAAO,GAAG,KAAV;AACH;;AACD,SAAO;AAACA,IAAAA,OAAO,EAAPA,OAAD;AAASD,IAAAA,MAAM,EAANA,MAAT;AAAgBE,IAAAA,OAAO,EAAPA;AAAhB,GAAP;AACH,CAbM;;;eAgBQN,mB",
      "sourceRoot": "C:\\Users\\ASUS\\Desktop\\Base Html + Node js\\src\\middleware",
      "sourcesContent": [
        "import empty from 'is-empty';\r\nimport Rut from 'rutjs';\r\nimport validator from 'validator';\r\nimport moment from 'moment';\r\n\r\nconst validationFunctions = {};\r\n\r\nexport const validar = validationFunctions.test= (payload) =>{\r\n    let errors = {};\r\n    let isValid = true;\r\n    let message = '';\r\n    if(payload){\r\n        if(empty(payload.nomre)){\r\n            isValid = false;\r\n        }\r\n    }else{\r\n        message= \"Error al recibir los datos del formulario\";\r\n        isValid = false;\r\n    }\r\n    return {isValid,errors,message};\r\n}\r\n\r\n\r\nexport default validationFunctions;"
      ]
    },
    "sourceType": "script",
    "mtime": 1568152248980
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Base Html + Node js\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Base Html + Node js\",\"filename\":\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Base Html + Node js\\\\src\\\\routes\\\\auth.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Base Html + Node js\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\ASUS\\Desktop\\Base Html + Node js\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\ASUS\\Desktop\\Base Html + Node js",
      "filename": "C:\\Users\\ASUS\\Desktop\\Base Html + Node js\\src\\routes\\auth.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\ASUS\\Desktop\\Base Html + Node js",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\ASUS\\Desktop\\Base Html + Node js\\src\\routes\\auth.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\ASUS\\Desktop\\Base Html + Node js\\src\\routes\\auth.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\ASUS\\Desktop\\Base Html + Node js\\src\\routes",
        "sourceFileName": "auth.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _passport = _interopRequireDefault(require(\"passport\"));\n\nvar _user = _interopRequireDefault(require(\"../models/user\"));\n\nvar _postgresAPI = _interopRequireDefault(require(\"../middleware/postgresAPI\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar router = new _express[\"default\"].Router();\nrouter.post('/login', _passport[\"default\"].authenticate('local'), function (req, res) {\n  return res.json({\n    success: true,\n    message: 'Ha logrado ingresar al sistema con éxito!',\n    user: req.user\n  });\n});\nrouter.get('/checkLogin', function (req, res) {\n  res.status(200).json({\n    logged: true\n  });\n});\nrouter.get('/register', function (req, res) {\n  _user[\"default\"].register({\n    user_id: '19.042.481-2',\n    user_type_id: 'ADM',\n    name: 'test'\n  }, 'test', function (err, user) {\n    console.log(err);\n    res.json({\n      user: user,\n      err: err\n    });\n  });\n});\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGguanMiXSwibmFtZXMiOlsicm91dGVyIiwiRXhwcmVzcyIsIlJvdXRlciIsInBvc3QiLCJQYXNzcG9ydCIsImF1dGhlbnRpY2F0ZSIsInJlcSIsInJlcyIsImpzb24iLCJzdWNjZXNzIiwibWVzc2FnZSIsInVzZXIiLCJnZXQiLCJzdGF0dXMiLCJsb2dnZWQiLCJVc2VyIiwicmVnaXN0ZXIiLCJ1c2VyX2lkIiwidXNlcl90eXBlX2lkIiwibmFtZSIsImVyciIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUVBLElBQU1BLE1BQU0sR0FBRyxJQUFJQyxvQkFBUUMsTUFBWixFQUFmO0FBRUFGLE1BQU0sQ0FBQ0csSUFBUCxDQUFZLFFBQVosRUFBc0JDLHFCQUFTQyxZQUFULENBQXNCLE9BQXRCLENBQXRCLEVBQXNELFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ2xFLFNBQU9BLEdBQUcsQ0FBQ0MsSUFBSixDQUFTO0FBQ2RDLElBQUFBLE9BQU8sRUFBRSxJQURLO0FBRWRDLElBQUFBLE9BQU8sRUFBRSwyQ0FGSztBQUdkQyxJQUFBQSxJQUFJLEVBQUVMLEdBQUcsQ0FBQ0s7QUFISSxHQUFULENBQVA7QUFLRCxDQU5EO0FBUUFYLE1BQU0sQ0FBQ1ksR0FBUCxDQUFXLGFBQVgsRUFBMEIsVUFBQ04sR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDdENBLEVBQUFBLEdBQUcsQ0FBQ00sTUFBSixDQUFXLEdBQVgsRUFBZ0JMLElBQWhCLENBQXFCO0FBQ25CTSxJQUFBQSxNQUFNLEVBQUU7QUFEVyxHQUFyQjtBQUdELENBSkQ7QUFPQWQsTUFBTSxDQUFDWSxHQUFQLENBQVcsV0FBWCxFQUF3QixVQUFDTixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNwQ1EsbUJBQUtDLFFBQUwsQ0FDRTtBQUFDQyxJQUFBQSxPQUFPLEVBQUUsY0FBVjtBQUEwQkMsSUFBQUEsWUFBWSxFQUFFLEtBQXhDO0FBQStDQyxJQUFBQSxJQUFJLEVBQUU7QUFBckQsR0FERixFQUVFLE1BRkYsRUFHRSxVQUFDQyxHQUFELEVBQU1ULElBQU4sRUFDQTtBQUNFVSxJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUYsR0FBWjtBQUNBYixJQUFBQSxHQUFHLENBQUNDLElBQUosQ0FBUztBQUFDRyxNQUFBQSxJQUFJLEVBQUpBLElBQUQ7QUFBT1MsTUFBQUEsR0FBRyxFQUFIQTtBQUFQLEtBQVQ7QUFDRCxHQVBIO0FBU0QsQ0FWRDtlQWNlcEIsTSIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEFTVVNcXERlc2t0b3BcXEJhc2UgSHRtbCArIE5vZGUganNcXHNyY1xccm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XHJcbmltcG9ydCBQYXNzcG9ydCBmcm9tICdwYXNzcG9ydCc7XHJcbmltcG9ydCBVc2VyIGZyb20gJy4uL21vZGVscy91c2VyJztcclxuaW1wb3J0IGRiIGZyb20gJy4uL21pZGRsZXdhcmUvcG9zdGdyZXNBUEknO1xyXG5cclxuY29uc3Qgcm91dGVyID0gbmV3IEV4cHJlc3MuUm91dGVyKCk7XHJcblxyXG5yb3V0ZXIucG9zdCgnL2xvZ2luJywgUGFzc3BvcnQuYXV0aGVudGljYXRlKCdsb2NhbCcpLCAocmVxLCByZXMpID0+IHtcclxuICByZXR1cm4gcmVzLmpzb24oe1xyXG4gICAgc3VjY2VzczogdHJ1ZSxcclxuICAgIG1lc3NhZ2U6ICdIYSBsb2dyYWRvIGluZ3Jlc2FyIGFsIHNpc3RlbWEgY29uIMOpeGl0byEnLFxyXG4gICAgdXNlcjogcmVxLnVzZXJcclxuICB9KTtcclxufSk7XHJcblxyXG5yb3V0ZXIuZ2V0KCcvY2hlY2tMb2dpbicsIChyZXEsIHJlcykgPT4ge1xyXG4gIHJlcy5zdGF0dXMoMjAwKS5qc29uKHtcclxuICAgIGxvZ2dlZDogdHJ1ZVxyXG4gIH0pO1xyXG59KTtcclxuXHJcblxyXG5yb3V0ZXIuZ2V0KCcvcmVnaXN0ZXInLCAocmVxLCByZXMpID0+IHtcclxuICBVc2VyLnJlZ2lzdGVyKFxyXG4gICAge3VzZXJfaWQ6ICcxOS4wNDIuNDgxLTInLCB1c2VyX3R5cGVfaWQ6ICdBRE0nLCBuYW1lOiAndGVzdCd9LFxyXG4gICAgJ3Rlc3QnLFxyXG4gICAgKGVyciwgdXNlcikgPT4gXHJcbiAgICB7XHJcbiAgICAgIGNvbnNvbGUubG9nKGVycik7XHJcbiAgICAgIHJlcy5qc29uKHt1c2VyLCBlcnJ9KVxyXG4gICAgfVxyXG4gICk7XHJcbn0pO1xyXG5cclxuXHJcblxyXG5leHBvcnQgZGVmYXVsdCByb3V0ZXI7Il19",
    "map": {
      "version": 3,
      "sources": [
        "auth.js"
      ],
      "names": [
        "router",
        "Express",
        "Router",
        "post",
        "Passport",
        "authenticate",
        "req",
        "res",
        "json",
        "success",
        "message",
        "user",
        "get",
        "status",
        "logged",
        "User",
        "register",
        "user_id",
        "user_type_id",
        "name",
        "err",
        "console",
        "log"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,MAAM,GAAG,IAAIC,oBAAQC,MAAZ,EAAf;AAEAF,MAAM,CAACG,IAAP,CAAY,QAAZ,EAAsBC,qBAASC,YAAT,CAAsB,OAAtB,CAAtB,EAAsD,UAACC,GAAD,EAAMC,GAAN,EAAc;AAClE,SAAOA,GAAG,CAACC,IAAJ,CAAS;AACdC,IAAAA,OAAO,EAAE,IADK;AAEdC,IAAAA,OAAO,EAAE,2CAFK;AAGdC,IAAAA,IAAI,EAAEL,GAAG,CAACK;AAHI,GAAT,CAAP;AAKD,CAND;AAQAX,MAAM,CAACY,GAAP,CAAW,aAAX,EAA0B,UAACN,GAAD,EAAMC,GAAN,EAAc;AACtCA,EAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBL,IAAhB,CAAqB;AACnBM,IAAAA,MAAM,EAAE;AADW,GAArB;AAGD,CAJD;AAOAd,MAAM,CAACY,GAAP,CAAW,WAAX,EAAwB,UAACN,GAAD,EAAMC,GAAN,EAAc;AACpCQ,mBAAKC,QAAL,CACE;AAACC,IAAAA,OAAO,EAAE,cAAV;AAA0BC,IAAAA,YAAY,EAAE,KAAxC;AAA+CC,IAAAA,IAAI,EAAE;AAArD,GADF,EAEE,MAFF,EAGE,UAACC,GAAD,EAAMT,IAAN,EACA;AACEU,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAb,IAAAA,GAAG,CAACC,IAAJ,CAAS;AAACG,MAAAA,IAAI,EAAJA,IAAD;AAAOS,MAAAA,GAAG,EAAHA;AAAP,KAAT;AACD,GAPH;AASD,CAVD;eAcepB,M",
      "sourceRoot": "C:\\Users\\ASUS\\Desktop\\Base Html + Node js\\src\\routes",
      "sourcesContent": [
        "import Express from 'express';\r\nimport Passport from 'passport';\r\nimport User from '../models/user';\r\nimport db from '../middleware/postgresAPI';\r\n\r\nconst router = new Express.Router();\r\n\r\nrouter.post('/login', Passport.authenticate('local'), (req, res) => {\r\n  return res.json({\r\n    success: true,\r\n    message: 'Ha logrado ingresar al sistema con éxito!',\r\n    user: req.user\r\n  });\r\n});\r\n\r\nrouter.get('/checkLogin', (req, res) => {\r\n  res.status(200).json({\r\n    logged: true\r\n  });\r\n});\r\n\r\n\r\nrouter.get('/register', (req, res) => {\r\n  User.register(\r\n    {user_id: '19.042.481-2', user_type_id: 'ADM', name: 'test'},\r\n    'test',\r\n    (err, user) => \r\n    {\r\n      console.log(err);\r\n      res.json({user, err})\r\n    }\r\n  );\r\n});\r\n\r\n\r\n\r\nexport default router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1568135400711
  }
}